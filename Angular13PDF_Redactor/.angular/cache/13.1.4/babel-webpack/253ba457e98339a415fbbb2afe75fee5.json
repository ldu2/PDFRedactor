{"ast":null,"code":"var _objectSpread = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\").default;\nvar _get = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\get.js\").default;\nvar _defineProperty = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\defineProperty.js\").default;\nvar _assertThisInitialized = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\assertThisInitialized.js\").default;\nvar _classPrivateMethodInitSpec = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classPrivateFieldInitSpec.js\").default;\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\nvar _toConsumableArray = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\toConsumableArray.js\").default;\nvar _slicedToArray = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createForOfIteratorHelper.js\").default;\nvar _createClass = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createClass.js\").default;\nvar _classCallCheck = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classCallCheck.js\").default;\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\possibleConstructorReturn.js\").default;\nvar _isNativeReflectConstruct = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\isNativeReflectConstruct.js\").default;\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\getPrototypeOf.js\").default;\nvar _inherits = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\inherits.js\").default;\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(globalThis, function () {\n  return /******/function () {\n    // webpackBootstrap\n    /******/\n    \"use strict\";\n\n    /******/\n    var __webpack_modules__ = [\n      /* 0 */\n    , ( /* 1 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.escapeString = escapeString;\n      exports.getModificationDate = getModificationDate;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isAscii = isAscii;\n      exports.objectFromMap = objectFromMap;\n      exports.objectSize = objectSize;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF16BEString = stringToUTF16BEString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.unreachable = unreachable;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      __w_pdfjs_require__(2);\n      var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      var LINE_FACTOR = 1.35;\n      exports.LINE_FACTOR = LINE_FACTOR;\n      var LINE_DESCENT_FACTOR = 0.35;\n      exports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\n      var RenderingIntentFlag = {\n        ANY: 0x01,\n        DISPLAY: 0x02,\n        PRINT: 0x04,\n        ANNOTATIONS_FORMS: 0x10,\n        ANNOTATIONS_STORAGE: 0x20,\n        ANNOTATIONS_DISABLE: 0x40,\n        OPLIST: 0x100\n      };\n      exports.RenderingIntentFlag = RenderingIntentFlag;\n      var AnnotationMode = {\n        DISABLE: 0,\n        ENABLE: 1,\n        ENABLE_FORMS: 2,\n        ENABLE_STORAGE: 3\n      };\n      exports.AnnotationMode = AnnotationMode;\n      var AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n      exports.AnnotationEditorPrefix = AnnotationEditorPrefix;\n      var AnnotationEditorType = {\n        DISABLE: -1,\n        NONE: 0,\n        FREETEXT: 3,\n        INK: 15\n      };\n      exports.AnnotationEditorType = AnnotationEditorType;\n      var AnnotationEditorParamsType = {\n        FREETEXT_SIZE: 1,\n        FREETEXT_COLOR: 2,\n        FREETEXT_OPACITY: 3,\n        INK_COLOR: 11,\n        INK_THICKNESS: 12,\n        INK_OPACITY: 13\n      };\n      exports.AnnotationEditorParamsType = AnnotationEditorParamsType;\n      var PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      var TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      var ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      var AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      var AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      var AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      var AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      var AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      var AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      var AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      var AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      var AnnotationActionEventType = {\n        E: \"Mouse Enter\",\n        X: \"Mouse Exit\",\n        D: \"Mouse Down\",\n        U: \"Mouse Up\",\n        Fo: \"Focus\",\n        Bl: \"Blur\",\n        PO: \"PageOpen\",\n        PC: \"PageClose\",\n        PV: \"PageVisible\",\n        PI: \"PageInvisible\",\n        K: \"Keystroke\",\n        F: \"Format\",\n        V: \"Validate\",\n        C: \"Calculate\"\n      };\n      exports.AnnotationActionEventType = AnnotationActionEventType;\n      var DocumentActionEventType = {\n        WC: \"WillClose\",\n        WS: \"WillSave\",\n        DS: \"DidSave\",\n        WP: \"WillPrint\",\n        DP: \"DidPrint\"\n      };\n      exports.DocumentActionEventType = DocumentActionEventType;\n      var PageActionEventType = {\n        O: \"PageOpen\",\n        C: \"PageClose\"\n      };\n      exports.PageActionEventType = PageActionEventType;\n      var StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      var FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1STANDARD: \"TYPE1STANDARD\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      var VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      var CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      var OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      var UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        signatures: \"signatures\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\",\n        errorTilingPattern: \"errorTilingPattern\",\n        errorExtGState: \"errorExtGState\",\n        errorXObject: \"errorXObject\",\n        errorFontLoadType3: \"errorFontLoadType3\",\n        errorFontState: \"errorFontState\",\n        errorFontMissing: \"errorFontMissing\",\n        errorFontTranslate: \"errorFontTranslate\",\n        errorColorSpace: \"errorColorSpace\",\n        errorOperatorList: \"errorOperatorList\",\n        errorFontToUnicode: \"errorFontToUnicode\",\n        errorFontLoadNative: \"errorFontLoadNative\",\n        errorFontBuildPath: \"errorFontBuildPath\",\n        errorFontGetPath: \"errorFontGetPath\",\n        errorMarkedContent: \"errorMarkedContent\",\n        errorContentSubStream: \"errorContentSubStream\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      var PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      var verbosity = VerbosityLevel.WARNINGS;\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(\"Info: \".concat(msg));\n        }\n      }\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(\"Warning: \".concat(msg));\n        }\n      }\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n          default:\n            return false;\n        }\n      }\n      function createValidAbsoluteUrl(url) {\n        var baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        if (!url) {\n          return null;\n        }\n        try {\n          if (options && typeof url === \"string\") {\n            if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n              var dots = url.match(/\\./g);\n              if (dots && dots.length >= 2) {\n                url = \"http://\".concat(url);\n              }\n            }\n            if (options.tryConvertEncoding) {\n              try {\n                url = stringToUTF8String(url);\n              } catch (ex) {}\n            }\n          }\n          var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n        return null;\n      }\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n      var BaseException = function BaseExceptionClosure() {\n        function BaseException(message, name) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n          this.message = message;\n          this.name = name;\n        }\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n      exports.BaseException = BaseException;\n      var PasswordException = /*#__PURE__*/function (_BaseException) {\n        _inherits(PasswordException, _BaseException);\n        function PasswordException(msg, code) {\n          var _this;\n          _classCallCheck(this, PasswordException);\n          _this = _callSuper(this, PasswordException, [msg, \"PasswordException\"]);\n          _this.code = code;\n          return _this;\n        }\n        return _createClass(PasswordException);\n      }(BaseException);\n      exports.PasswordException = PasswordException;\n      var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n        _inherits(UnknownErrorException, _BaseException2);\n        function UnknownErrorException(msg, details) {\n          var _this2;\n          _classCallCheck(this, UnknownErrorException);\n          _this2 = _callSuper(this, UnknownErrorException, [msg, \"UnknownErrorException\"]);\n          _this2.details = details;\n          return _this2;\n        }\n        return _createClass(UnknownErrorException);\n      }(BaseException);\n      exports.UnknownErrorException = UnknownErrorException;\n      var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n        _inherits(InvalidPDFException, _BaseException3);\n        function InvalidPDFException(msg) {\n          _classCallCheck(this, InvalidPDFException);\n          return _callSuper(this, InvalidPDFException, [msg, \"InvalidPDFException\"]);\n        }\n        return _createClass(InvalidPDFException);\n      }(BaseException);\n      exports.InvalidPDFException = InvalidPDFException;\n      var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n        _inherits(MissingPDFException, _BaseException4);\n        function MissingPDFException(msg) {\n          _classCallCheck(this, MissingPDFException);\n          return _callSuper(this, MissingPDFException, [msg, \"MissingPDFException\"]);\n        }\n        return _createClass(MissingPDFException);\n      }(BaseException);\n      exports.MissingPDFException = MissingPDFException;\n      var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n        _inherits(UnexpectedResponseException, _BaseException5);\n        function UnexpectedResponseException(msg, status) {\n          var _this3;\n          _classCallCheck(this, UnexpectedResponseException);\n          _this3 = _callSuper(this, UnexpectedResponseException, [msg, \"UnexpectedResponseException\"]);\n          _this3.status = status;\n          return _this3;\n        }\n        return _createClass(UnexpectedResponseException);\n      }(BaseException);\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n      var FormatError = /*#__PURE__*/function (_BaseException6) {\n        _inherits(FormatError, _BaseException6);\n        function FormatError(msg) {\n          _classCallCheck(this, FormatError);\n          return _callSuper(this, FormatError, [msg, \"FormatError\"]);\n        }\n        return _createClass(FormatError);\n      }(BaseException);\n      exports.FormatError = FormatError;\n      var AbortException = /*#__PURE__*/function (_BaseException7) {\n        _inherits(AbortException, _BaseException7);\n        function AbortException(msg) {\n          _classCallCheck(this, AbortException);\n          return _callSuper(this, AbortException, [msg, \"AbortException\"]);\n        }\n        return _createClass(AbortException);\n      }(BaseException);\n      exports.AbortException = AbortException;\n      function bytesToString(bytes) {\n        if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) {\n          unreachable(\"Invalid argument for bytesToString\");\n        }\n        var length = bytes.length;\n        var MAX_ARGUMENT_COUNT = 8192;\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n        var strBuf = [];\n        for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          var chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n        return strBuf.join(\"\");\n      }\n      function stringToBytes(str) {\n        if (typeof str !== \"string\") {\n          unreachable(\"Invalid argument for stringToBytes\");\n        }\n        var length = str.length;\n        var bytes = new Uint8Array(length);\n        for (var i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n        return bytes;\n      }\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n        if (arr.byteLength !== undefined) {\n          return arr.byteLength;\n        }\n        unreachable(\"Invalid argument for arrayByteLength\");\n      }\n      function arraysToBytes(arr) {\n        var length = arr.length;\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n        var resultLength = 0;\n        for (var i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n        var pos = 0;\n        var data = new Uint8Array(resultLength);\n        for (var _i = 0; _i < length; _i++) {\n          var item = arr[_i];\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n          var itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n        return data;\n      }\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n      function objectSize(obj) {\n        return Object.keys(obj).length;\n      }\n      function objectFromMap(map) {\n        var obj = Object.create(null);\n        var _iterator = _createForOfIteratorHelper(map),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n            obj[key] = value;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return obj;\n      }\n      function isLittleEndian() {\n        var buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      var FeatureTest = /*#__PURE__*/function () {\n        function FeatureTest() {\n          _classCallCheck(this, FeatureTest);\n        }\n        _createClass(FeatureTest, null, [{\n          key: \"isLittleEndian\",\n          get: function get() {\n            return shadow(this, \"isLittleEndian\", isLittleEndian());\n          }\n        }, {\n          key: \"isEvalSupported\",\n          get: function get() {\n            return shadow(this, \"isEvalSupported\", isEvalSupported());\n          }\n        }, {\n          key: \"isOffscreenCanvasSupported\",\n          get: function get() {\n            return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n          }\n        }]);\n        return FeatureTest;\n      }();\n      exports.FeatureTest = FeatureTest;\n      var hexNumbers = _toConsumableArray(Array(256).keys()).map(function (n) {\n        return n.toString(16).padStart(2, \"0\");\n      });\n      var Util = /*#__PURE__*/function () {\n        function Util() {\n          _classCallCheck(this, Util);\n        }\n        _createClass(Util, null, [{\n          key: \"makeHexColor\",\n          value: function makeHexColor(r, g, b) {\n            return \"#\".concat(hexNumbers[r]).concat(hexNumbers[g]).concat(hexNumbers[b]);\n          }\n        }, {\n          key: \"scaleMinMax\",\n          value: function scaleMinMax(transform, minMax) {\n            var temp;\n            if (transform[0]) {\n              if (transform[0] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n              minMax[0] *= transform[0];\n              minMax[1] *= transform[0];\n              if (transform[3] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n              minMax[2] *= transform[3];\n              minMax[3] *= transform[3];\n            } else {\n              temp = minMax[0];\n              minMax[0] = minMax[2];\n              minMax[2] = temp;\n              temp = minMax[1];\n              minMax[1] = minMax[3];\n              minMax[3] = temp;\n              if (transform[1] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n              minMax[2] *= transform[1];\n              minMax[3] *= transform[1];\n              if (transform[2] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n              minMax[0] *= transform[2];\n              minMax[1] *= transform[2];\n            }\n            minMax[0] += transform[4];\n            minMax[1] += transform[4];\n            minMax[2] += transform[5];\n            minMax[3] += transform[5];\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n        }, {\n          key: \"applyTransform\",\n          value: function applyTransform(p, m) {\n            var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n        }, {\n          key: \"applyInverseTransform\",\n          value: function applyInverseTransform(p, m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n        }, {\n          key: \"getAxialAlignedBoundingBox\",\n          value: function getAxialAlignedBoundingBox(r, m) {\n            var p1 = Util.applyTransform(r, m);\n            var p2 = Util.applyTransform(r.slice(2, 4), m);\n            var p3 = Util.applyTransform([r[0], r[3]], m);\n            var p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n        }, {\n          key: \"inverseTransform\",\n          value: function inverseTransform(m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n        }, {\n          key: \"apply3dTransform\",\n          value: function apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n        }, {\n          key: \"singularValueDecompose2dScale\",\n          value: function singularValueDecompose2dScale(m) {\n            var transpose = [m[0], m[2], m[1], m[3]];\n            var a = m[0] * transpose[0] + m[1] * transpose[2];\n            var b = m[0] * transpose[1] + m[1] * transpose[3];\n            var c = m[2] * transpose[0] + m[3] * transpose[2];\n            var d = m[2] * transpose[1] + m[3] * transpose[3];\n            var first = (a + d) / 2;\n            var second = Math.sqrt(Math.pow(a + d, 2) - 4 * (a * d - c * b)) / 2;\n            var sx = first + second || 1;\n            var sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n        }, {\n          key: \"normalizeRect\",\n          value: function normalizeRect(rect) {\n            var r = rect.slice(0);\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n            return r;\n          }\n        }, {\n          key: \"intersect\",\n          value: function intersect(rect1, rect2) {\n            var xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n            var xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n            if (xLow > xHigh) {\n              return null;\n            }\n            var yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n            var yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n            if (yLow > yHigh) {\n              return null;\n            }\n            return [xLow, yLow, xHigh, yHigh];\n          }\n        }, {\n          key: \"bezierBoundingBox\",\n          value: function bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n            var tvalues = [],\n              bounds = [[], []];\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n            for (var i = 0; i < 2; ++i) {\n              if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n              } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n              }\n              if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                  continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                  tvalues.push(t);\n                }\n                continue;\n              }\n              b2ac = b * b - 4 * c * a;\n              sqrtb2ac = Math.sqrt(b2ac);\n              if (b2ac < 0) {\n                continue;\n              }\n              t1 = (-b + sqrtb2ac) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n              }\n              t2 = (-b - sqrtb2ac) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n              }\n            }\n            var j = tvalues.length,\n              mt;\n            var jlen = j;\n            while (j--) {\n              t = tvalues[j];\n              mt = 1 - t;\n              bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n              bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            }\n            bounds[0][jlen] = x0;\n            bounds[1][jlen] = y0;\n            bounds[0][jlen + 1] = x3;\n            bounds[1][jlen + 1] = y3;\n            bounds[0].length = bounds[1].length = jlen + 2;\n            return [Math.min.apply(Math, _toConsumableArray(bounds[0])), Math.min.apply(Math, _toConsumableArray(bounds[1])), Math.max.apply(Math, _toConsumableArray(bounds[0])), Math.max.apply(Math, _toConsumableArray(bounds[1]))];\n          }\n        }]);\n        return Util;\n      }();\n      exports.Util = Util;\n      var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n      function stringToPDFString(str) {\n        if (str[0] >= \"\\xEF\") {\n          var encoding;\n          if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n            encoding = \"utf-16be\";\n          } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n            encoding = \"utf-16le\";\n          } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n            encoding = \"utf-8\";\n          }\n          if (encoding) {\n            try {\n              var decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              var buffer = stringToBytes(str);\n              return decoder.decode(buffer);\n            } catch (ex) {\n              warn(\"stringToPDFString: \\\"\".concat(ex, \"\\\".\"));\n            }\n          }\n        }\n        var strBuf = [];\n        for (var i = 0, ii = str.length; i < ii; i++) {\n          var code = PDFStringTranslateTable[str.charCodeAt(i)];\n          strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n        }\n        return strBuf.join(\"\");\n      }\n      function escapeString(str) {\n        return str.replace(/([()\\\\\\n\\r])/g, function (match) {\n          if (match === \"\\n\") {\n            return \"\\\\n\";\n          } else if (match === \"\\r\") {\n            return \"\\\\r\";\n          }\n          return \"\\\\\".concat(match);\n        });\n      }\n      function isAscii(str) {\n        return /^[\\x00-\\x7F]*$/.test(str);\n      }\n      function stringToUTF16BEString(str) {\n        var buf = [\"\\xFE\\xFF\"];\n        for (var i = 0, ii = str.length; i < ii; i++) {\n          var char = str.charCodeAt(i);\n          buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff));\n        }\n        return buf.join(\"\");\n      }\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n        for (var i = 0, ii = arr1.length; i < ii; i++) {\n          if (arr1[i] !== arr2[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      function getModificationDate() {\n        var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n        var buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n        return buffer.join(\"\");\n      }\n      function createPromiseCapability() {\n        var capability = Object.create(null);\n        var isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get: function get() {\n            return isSettled;\n          }\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n\n      /***/\n    }), ( /* 2 */\n    /***/function (__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) {\n      var _is_node = __w_pdfjs_require__(3);\n      ;\n\n      /***/\n    }), ( /* 3 */\n    /***/function (__unused_webpack_module, exports) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      var isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n      exports.isNodeJS = isNodeJS;\n\n      /***/\n    }), ( /* 4 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.build = exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.version = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _annotation_storage = __w_pdfjs_require__(5);\n      var _display_utils = __w_pdfjs_require__(8);\n      var _font_loader = __w_pdfjs_require__(11);\n      var _canvas = __w_pdfjs_require__(12);\n      var _worker_options = __w_pdfjs_require__(15);\n      var _is_node = __w_pdfjs_require__(3);\n      var _message_handler = __w_pdfjs_require__(16);\n      var _metadata = __w_pdfjs_require__(17);\n      var _optional_content_config = __w_pdfjs_require__(18);\n      var _transport_stream = __w_pdfjs_require__(19);\n      var _xfa_text = __w_pdfjs_require__(20);\n      var DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      var RENDERING_CANCELLED_TIMEOUT = 100;\n      var DefaultCanvasFactory = _display_utils.DOMCanvasFactory;\n      exports.DefaultCanvasFactory = DefaultCanvasFactory;\n      var DefaultCMapReaderFactory = _display_utils.DOMCMapReaderFactory;\n      exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n      var DefaultStandardFontDataFactory = _display_utils.DOMStandardFontDataFactory;\n      exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n      if (_is_node.isNodeJS) {\n        var _w_pdfjs_require__ = __w_pdfjs_require__(21),\n          NodeCanvasFactory = _w_pdfjs_require__.NodeCanvasFactory,\n          NodeCMapReaderFactory = _w_pdfjs_require__.NodeCMapReaderFactory,\n          NodeStandardFontDataFactory = _w_pdfjs_require__.NodeStandardFontDataFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory = NodeCanvasFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory = NodeCMapReaderFactory;\n        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory = NodeStandardFontDataFactory;\n      }\n      var createPDFNetworkStream;\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n      function getDocument(src) {\n        var task = new PDFDocumentLoadingTask();\n        var source;\n        if (typeof src === \"string\" || src instanceof URL) {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, TypedArray, or parameter object.\");\n          }\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n          source = src;\n        }\n        var params = Object.create(null);\n        var rangeTransport = null,\n          worker = null;\n        for (var key in source) {\n          var value = source[key];\n          switch (key) {\n            case \"url\":\n              if (typeof window !== \"undefined\") {\n                try {\n                  params[key] = new URL(value, window.location).href;\n                  continue;\n                } catch (ex) {\n                  (0, _util.warn)(\"Cannot create valid URL: \\\"\".concat(ex, \"\\\".\"));\n                }\n              } else if (typeof value === \"string\" || value instanceof URL) {\n                params[key] = value.toString();\n                continue;\n              }\n              throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n            case \"range\":\n              rangeTransport = value;\n              continue;\n            case \"worker\":\n              worker = value;\n              continue;\n            case \"data\":\n              if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) {\n                params[key] = new Uint8Array(value);\n              } else if (value instanceof Uint8Array) {\n                break;\n              } else if (typeof value === \"string\") {\n                params[key] = (0, _util.stringToBytes)(value);\n              } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\n                params[key] = new Uint8Array(value);\n              } else if ((0, _util.isArrayBuffer)(value)) {\n                params[key] = new Uint8Array(value);\n              } else {\n                throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n              }\n              continue;\n          }\n          params[key] = value;\n        }\n        params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n        params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.fontExtraProperties = params.fontExtraProperties === true;\n        params.pdfBug = params.pdfBug === true;\n        params.enableXfa = params.enableXfa === true;\n        if (!Number.isInteger(params.rangeChunkSize) || params.rangeChunkSize < 1) {\n          params.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE;\n        }\n        if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) {\n          params.docBaseUrl = null;\n        }\n        if (!Number.isInteger(params.maxImageSize) || params.maxImageSize < -1) {\n          params.maxImageSize = -1;\n        }\n        if (typeof params.cMapUrl !== \"string\") {\n          params.cMapUrl = null;\n        }\n        if (typeof params.standardFontDataUrl !== \"string\") {\n          params.standardFontDataUrl = null;\n        }\n        if (typeof params.useWorkerFetch !== \"boolean\") {\n          params.useWorkerFetch = params.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && params.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory;\n        }\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _is_node.isNodeJS;\n        }\n        if (typeof params.useSystemFonts !== \"boolean\") {\n          params.useSystemFonts = !_is_node.isNodeJS && !params.disableFontFace;\n        }\n        if (typeof params.ownerDocument !== \"object\" || params.ownerDocument === null) {\n          params.ownerDocument = globalThis.document;\n        }\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n        (0, _util.setVerbosityLevel)(params.verbosity);\n        if (!worker) {\n          var workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n        var docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          var workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n          var networkStreamPromise = new Promise(function (resolve) {\n            var networkStream;\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                contentDispositionFilename: params.contentDispositionFilename,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n            resolve(networkStream);\n          });\n          return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              workerId = _ref2[0],\n              networkStream = _ref2[1];\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n            var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            var transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        }).catch(task._capability.reject);\n        return task;\n      }\n      function _fetchDocument(_x, _x2, _x3, _x4) {\n        return _fetchDocument2.apply(this, arguments);\n      }\n      function _fetchDocument2() {\n        _fetchDocument2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(worker, source, pdfDataRangeTransport, docId) {\n          var workerId;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!worker.destroyed) {\n                  _context7.next = 2;\n                  break;\n                }\n                throw new Error(\"Worker was destroyed\");\n              case 2:\n                if (pdfDataRangeTransport) {\n                  source.length = pdfDataRangeTransport.length;\n                  source.initialData = pdfDataRangeTransport.initialData;\n                  source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n                  source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\n                }\n                _context7.next = 5;\n                return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n                  docId: docId,\n                  apiVersion: '2.16.105',\n                  source: {\n                    data: source.data,\n                    url: source.url,\n                    password: source.password,\n                    disableAutoFetch: source.disableAutoFetch,\n                    rangeChunkSize: source.rangeChunkSize,\n                    length: source.length\n                  },\n                  maxImageSize: source.maxImageSize,\n                  disableFontFace: source.disableFontFace,\n                  docBaseUrl: source.docBaseUrl,\n                  ignoreErrors: source.ignoreErrors,\n                  isEvalSupported: source.isEvalSupported,\n                  fontExtraProperties: source.fontExtraProperties,\n                  enableXfa: source.enableXfa,\n                  useSystemFonts: source.useSystemFonts,\n                  cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n                  standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null\n                });\n              case 5:\n                workerId = _context7.sent;\n                if (source.data) {\n                  source.data = null;\n                }\n                if (!worker.destroyed) {\n                  _context7.next = 9;\n                  break;\n                }\n                throw new Error(\"Worker was destroyed\");\n              case 9:\n                return _context7.abrupt(\"return\", workerId);\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7);\n        }));\n        return _fetchDocument2.apply(this, arguments);\n      }\n      var PDFDocumentLoadingTask = /*#__PURE__*/function () {\n        function PDFDocumentLoadingTask() {\n          var _PDFDocumentLoadingTa, _PDFDocumentLoadingTa2;\n          _classCallCheck(this, PDFDocumentLoadingTask);\n          this._capability = (0, _util.createPromiseCapability)();\n          this._transport = null;\n          this._worker = null;\n          this.docId = \"d\".concat((_docId._ = (_PDFDocumentLoadingTa = _docId._, _PDFDocumentLoadingTa2 = _PDFDocumentLoadingTa++, _PDFDocumentLoadingTa), _PDFDocumentLoadingTa2));\n          this.destroyed = false;\n          this.onPassword = null;\n          this.onProgress = null;\n          this.onUnsupportedFeature = null;\n        }\n        _createClass(PDFDocumentLoadingTask, [{\n          key: \"promise\",\n          get: function get() {\n            return this._capability.promise;\n          }\n        }, {\n          key: \"destroy\",\n          value: function () {\n            var _destroy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              var _this$_transport;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    this.destroyed = true;\n                    _context.next = 3;\n                    return (_this$_transport = this._transport) === null || _this$_transport === void 0 ? void 0 : _this$_transport.destroy();\n                  case 3:\n                    this._transport = null;\n                    if (this._worker) {\n                      this._worker.destroy();\n                      this._worker = null;\n                    }\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee, this);\n            }));\n            function destroy() {\n              return _destroy.apply(this, arguments);\n            }\n            return destroy;\n          }()\n        }]);\n        return PDFDocumentLoadingTask;\n      }();\n      var _docId = {\n        _: 0\n      };\n      exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n      var PDFDataRangeTransport = /*#__PURE__*/function () {\n        function PDFDataRangeTransport(length, initialData) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          var contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n          _classCallCheck(this, PDFDataRangeTransport);\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this.contentDispositionFilename = contentDispositionFilename;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n        _createClass(PDFDataRangeTransport, [{\n          key: \"addRangeListener\",\n          value: function addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressListener\",\n          value: function addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveReadListener\",\n          value: function addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveDoneListener\",\n          value: function addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n        }, {\n          key: \"onDataRange\",\n          value: function onDataRange(begin, chunk) {\n            var _iterator2 = _createForOfIteratorHelper(this._rangeListeners),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var listener = _step2.value;\n                listener(begin, chunk);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        }, {\n          key: \"onDataProgress\",\n          value: function onDataProgress(loaded, total) {\n            var _this4 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator3 = _createForOfIteratorHelper(_this4._progressListeners),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var listener = _step3.value;\n                  listener(loaded, total);\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveRead\",\n          value: function onDataProgressiveRead(chunk) {\n            var _this5 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator4 = _createForOfIteratorHelper(_this5._progressiveReadListeners),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var listener = _step4.value;\n                  listener(chunk);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveDone\",\n          value: function onDataProgressiveDone() {\n            var _this6 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator5 = _createForOfIteratorHelper(_this6._progressiveDoneListeners),\n                _step5;\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var listener = _step5.value;\n                  listener();\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            });\n          }\n        }, {\n          key: \"transportReady\",\n          value: function transportReady() {\n            this._readyCapability.resolve();\n          }\n        }, {\n          key: \"requestDataRange\",\n          value: function requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n        }, {\n          key: \"abort\",\n          value: function abort() {}\n        }]);\n        return PDFDataRangeTransport;\n      }();\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n      var PDFDocumentProxy = /*#__PURE__*/function () {\n        function PDFDocumentProxy(pdfInfo, transport) {\n          var _this7 = this;\n          _classCallCheck(this, PDFDocumentProxy);\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n          Object.defineProperty(this, \"fingerprint\", {\n            get: function get() {\n              (0, _display_utils.deprecated)(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\");\n              return this.fingerprints[0];\n            }\n          });\n          Object.defineProperty(this, \"getStats\", {\n            value: function () {\n              var _value = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getStats`, \" + \"please use the `PDFDocumentProxy.stats`-getter instead.\");\n                      return _context2.abrupt(\"return\", _this7.stats || {\n                        streamTypes: {},\n                        fontTypes: {}\n                      });\n                    case 2:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2);\n              }));\n              function value() {\n                return _value.apply(this, arguments);\n              }\n              return value;\n            }()\n          });\n        }\n        _createClass(PDFDocumentProxy, [{\n          key: \"annotationStorage\",\n          get: function get() {\n            return this._transport.annotationStorage;\n          }\n        }, {\n          key: \"numPages\",\n          get: function get() {\n            return this._pdfInfo.numPages;\n          }\n        }, {\n          key: \"fingerprints\",\n          get: function get() {\n            return this._pdfInfo.fingerprints;\n          }\n        }, {\n          key: \"stats\",\n          get: function get() {\n            return this._transport.stats;\n          }\n        }, {\n          key: \"isPureXfa\",\n          get: function get() {\n            return !!this._transport._htmlForXfa;\n          }\n        }, {\n          key: \"allXfaHtml\",\n          get: function get() {\n            return this._transport._htmlForXfa;\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this._transport.getDestinations();\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this._transport.getPageMode();\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this._transport.getAttachments();\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this._transport.getJavaScript();\n          }\n        }, {\n          key: \"getJSActions\",\n          value: function getJSActions() {\n            return this._transport.getDocJSActions();\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this._transport.getOutline();\n          }\n        }, {\n          key: \"getOptionalContentConfig\",\n          value: function getOptionalContentConfig() {\n            return this._transport.getOptionalContentConfig();\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this._transport.getPermissions();\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            return this._transport.getMetadata();\n          }\n        }, {\n          key: \"getMarkInfo\",\n          value: function getMarkInfo() {\n            return this._transport.getMarkInfo();\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this._transport.getData();\n          }\n        }, {\n          key: \"getDownloadInfo\",\n          value: function getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            return this.loadingTask.destroy();\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            return this._transport.loadingParams;\n          }\n        }, {\n          key: \"loadingTask\",\n          get: function get() {\n            return this._transport.loadingTask;\n          }\n        }, {\n          key: \"saveDocument\",\n          value: function saveDocument() {\n            if (this._transport.annotationStorage.size <= 0) {\n              (0, _display_utils.deprecated)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n            }\n            return this._transport.saveDocument();\n          }\n        }, {\n          key: \"getFieldObjects\",\n          value: function getFieldObjects() {\n            return this._transport.getFieldObjects();\n          }\n        }, {\n          key: \"hasJSActions\",\n          value: function hasJSActions() {\n            return this._transport.hasJSActions();\n          }\n        }, {\n          key: \"getCalculationOrderIds\",\n          value: function getCalculationOrderIds() {\n            return this._transport.getCalculationOrderIds();\n          }\n        }]);\n        return PDFDocumentProxy;\n      }();\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n      var PDFPageProxy = /*#__PURE__*/function () {\n        function PDFPageProxy(pageIndex, pageInfo, transport, ownerDocument) {\n          var pdfBug = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n          _classCallCheck(this, PDFPageProxy);\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._ownerDocument = ownerDocument;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this._bitmaps = new Set();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this._intentStates = new Map();\n          this._annotationPromises = new Map();\n          this.destroyed = false;\n        }\n        _createClass(PDFPageProxy, [{\n          key: \"pageNumber\",\n          get: function get() {\n            return this._pageIndex + 1;\n          }\n        }, {\n          key: \"rotate\",\n          get: function get() {\n            return this._pageInfo.rotate;\n          }\n        }, {\n          key: \"ref\",\n          get: function get() {\n            return this._pageInfo.ref;\n          }\n        }, {\n          key: \"userUnit\",\n          get: function get() {\n            return this._pageInfo.userUnit;\n          }\n        }, {\n          key: \"view\",\n          get: function get() {\n            return this._pageInfo.view;\n          }\n        }, {\n          key: \"getViewport\",\n          value: function getViewport() {\n            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              scale = _ref3.scale,\n              _ref3$rotation = _ref3.rotation,\n              rotation = _ref3$rotation === void 0 ? this.rotate : _ref3$rotation,\n              _ref3$offsetX = _ref3.offsetX,\n              offsetX = _ref3$offsetX === void 0 ? 0 : _ref3$offsetX,\n              _ref3$offsetY = _ref3.offsetY,\n              offsetY = _ref3$offsetY === void 0 ? 0 : _ref3$offsetY,\n              _ref3$dontFlip = _ref3.dontFlip,\n              dontFlip = _ref3$dontFlip === void 0 ? false : _ref3$dontFlip;\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations() {\n            var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref4$intent = _ref4.intent,\n              intent = _ref4$intent === void 0 ? \"display\" : _ref4$intent;\n            var intentArgs = this._transport.getRenderingIntent(intent);\n            var promise = this._annotationPromises.get(intentArgs.cacheKey);\n            if (!promise) {\n              promise = this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n              this._annotationPromises.set(intentArgs.cacheKey, promise);\n              promise = promise.then(function (annotations) {\n                var _iterator6 = _createForOfIteratorHelper(annotations),\n                  _step6;\n                try {\n                  var _loop = function _loop() {\n                    var annotation = _step6.value;\n                    if (annotation.titleObj !== undefined) {\n                      Object.defineProperty(annotation, \"title\", {\n                        get: function get() {\n                          (0, _display_utils.deprecated)(\"`title`-property on annotation, please use `titleObj` instead.\");\n                          return annotation.titleObj.str;\n                        }\n                      });\n                    }\n                    if (annotation.contentsObj !== undefined) {\n                      Object.defineProperty(annotation, \"contents\", {\n                        get: function get() {\n                          (0, _display_utils.deprecated)(\"`contents`-property on annotation, please use `contentsObj` instead.\");\n                          return annotation.contentsObj.str;\n                        }\n                      });\n                    }\n                  };\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    _loop();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n                return annotations;\n              });\n            }\n            return promise;\n          }\n        }, {\n          key: \"getJSActions\",\n          value: function getJSActions() {\n            return this._jsActionsPromise || (this._jsActionsPromise = this._transport.getPageJSActions(this._pageIndex));\n          }\n        }, {\n          key: \"getXfa\",\n          value: function () {\n            var _getXfa = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n              var _this$_transport$_htm;\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    return _context3.abrupt(\"return\", ((_this$_transport$_htm = this._transport._htmlForXfa) === null || _this$_transport$_htm === void 0 ? void 0 : _this$_transport$_htm.children[this._pageIndex]) || null);\n                  case 1:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3, this);\n            }));\n            function getXfa() {\n              return _getXfa.apply(this, arguments);\n            }\n            return getXfa;\n          }()\n        }, {\n          key: \"render\",\n          value: function render(_ref5) {\n            var _arguments$,\n              _arguments$2,\n              _this8 = this,\n              _intentState;\n            var canvasContext = _ref5.canvasContext,\n              viewport = _ref5.viewport,\n              _ref5$intent = _ref5.intent,\n              intent = _ref5$intent === void 0 ? \"display\" : _ref5$intent,\n              _ref5$annotationMode = _ref5.annotationMode,\n              annotationMode = _ref5$annotationMode === void 0 ? _util.AnnotationMode.ENABLE : _ref5$annotationMode,\n              _ref5$transform = _ref5.transform,\n              transform = _ref5$transform === void 0 ? null : _ref5$transform,\n              _ref5$imageLayer = _ref5.imageLayer,\n              imageLayer = _ref5$imageLayer === void 0 ? null : _ref5$imageLayer,\n              _ref5$canvasFactory = _ref5.canvasFactory,\n              canvasFactory = _ref5$canvasFactory === void 0 ? null : _ref5$canvasFactory,\n              _ref5$background = _ref5.background,\n              background = _ref5$background === void 0 ? null : _ref5$background,\n              _ref5$optionalContent = _ref5.optionalContentConfigPromise,\n              optionalContentConfigPromise = _ref5$optionalContent === void 0 ? null : _ref5$optionalContent,\n              _ref5$annotationCanva = _ref5.annotationCanvasMap,\n              annotationCanvasMap = _ref5$annotationCanva === void 0 ? null : _ref5$annotationCanva,\n              _ref5$pageColors = _ref5.pageColors,\n              pageColors = _ref5$pageColors === void 0 ? null : _ref5$pageColors,\n              _ref5$printAnnotation = _ref5.printAnnotationStorage,\n              printAnnotationStorage = _ref5$printAnnotation === void 0 ? null : _ref5$printAnnotation;\n            if (((_arguments$ = arguments[0]) === null || _arguments$ === void 0 ? void 0 : _arguments$.renderInteractiveForms) !== undefined) {\n              (0, _display_utils.deprecated)(\"render no longer accepts the `renderInteractiveForms`-option, \" + \"please use the `annotationMode`-option instead.\");\n              if (arguments[0].renderInteractiveForms === true && annotationMode === _util.AnnotationMode.ENABLE) {\n                annotationMode = _util.AnnotationMode.ENABLE_FORMS;\n              }\n            }\n            if (((_arguments$2 = arguments[0]) === null || _arguments$2 === void 0 ? void 0 : _arguments$2.includeAnnotationStorage) !== undefined) {\n              (0, _display_utils.deprecated)(\"render no longer accepts the `includeAnnotationStorage`-option, \" + \"please use the `annotationMode`-option instead.\");\n              if (arguments[0].includeAnnotationStorage === true && annotationMode === _util.AnnotationMode.ENABLE) {\n                annotationMode = _util.AnnotationMode.ENABLE_STORAGE;\n              }\n            }\n            if (this._stats) {\n              this._stats.time(\"Overall\");\n            }\n            var intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n            this.pendingCleanup = false;\n            if (!optionalContentConfigPromise) {\n              optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n            }\n            var intentState = this._intentStates.get(intentArgs.cacheKey);\n            if (!intentState) {\n              intentState = Object.create(null);\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            var canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n              ownerDocument: this._ownerDocument\n            });\n            var intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n              this._pumpOperatorList(intentArgs);\n            }\n            var complete = function complete(error) {\n              intentState.renderTasks.delete(internalRenderTask);\n              if (_this8.cleanupAfterRender || intentPrint) {\n                _this8.pendingCleanup = true;\n              }\n              _this8._tryCleanup();\n              if (error) {\n                internalRenderTask.capability.reject(error);\n                _this8._abortOperatorList({\n                  intentState: intentState,\n                  reason: error instanceof Error ? error : new Error(error)\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n              if (_this8._stats) {\n                _this8._stats.timeEnd(\"Rendering\");\n                _this8._stats.timeEnd(\"Overall\");\n              }\n            };\n            var internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext: canvasContext,\n                viewport: viewport,\n                transform: transform,\n                imageLayer: imageLayer,\n                background: background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              annotationCanvasMap: annotationCanvasMap,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: canvasFactoryInstance,\n              useRequestAnimationFrame: !intentPrint,\n              pdfBug: this._pdfBug,\n              pageColors: pageColors\n            });\n            ((_intentState = intentState).renderTasks || (_intentState.renderTasks = new Set())).add(internalRenderTask);\n            var renderTask = internalRenderTask.task;\n            Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(function (_ref6) {\n              var _ref7 = _slicedToArray(_ref6, 2),\n                transparency = _ref7[0],\n                optionalContentConfig = _ref7[1];\n              if (_this8.pendingCleanup) {\n                complete();\n                return;\n              }\n              if (_this8._stats) {\n                _this8._stats.time(\"Rendering\");\n              }\n              internalRenderTask.initializeGraphics({\n                transparency: transparency,\n                optionalContentConfig: optionalContentConfig\n              });\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList() {\n            var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref8$intent = _ref8.intent,\n              intent = _ref8$intent === void 0 ? \"display\" : _ref8$intent,\n              _ref8$annotationMode = _ref8.annotationMode,\n              annotationMode = _ref8$annotationMode === void 0 ? _util.AnnotationMode.ENABLE : _ref8$annotationMode,\n              _ref8$printAnnotation = _ref8.printAnnotationStorage,\n              printAnnotationStorage = _ref8$printAnnotation === void 0 ? null : _ref8$printAnnotation;\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                intentState.renderTasks.delete(opListTask);\n              }\n            }\n            var intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n            var intentState = this._intentStates.get(intentArgs.cacheKey);\n            if (!intentState) {\n              intentState = Object.create(null);\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n            var opListTask;\n            if (!intentState.opListReadCapability) {\n              var _intentState2;\n              opListTask = Object.create(null);\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n              ((_intentState2 = intentState).renderTasks || (_intentState2.renderTasks = new Set())).add(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n              this._pumpOperatorList(intentArgs);\n            }\n            return intentState.opListReadCapability.promise;\n          }\n        }, {\n          key: \"streamTextContent\",\n          value: function streamTextContent() {\n            var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref9$disableCombineT = _ref9.disableCombineTextItems,\n              disableCombineTextItems = _ref9$disableCombineT === void 0 ? false : _ref9$disableCombineT,\n              _ref9$includeMarkedCo = _ref9.includeMarkedContent,\n              includeMarkedContent = _ref9$includeMarkedCo === void 0 ? false : _ref9$includeMarkedCo;\n            var TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              combineTextItems: disableCombineTextItems !== true,\n              includeMarkedContent: includeMarkedContent === true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n              size: function size(textContent) {\n                return textContent.items.length;\n              }\n            });\n          }\n        }, {\n          key: \"getTextContent\",\n          value: function getTextContent() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            if (this._transport._htmlForXfa) {\n              return this.getXfa().then(function (xfa) {\n                return _xfa_text.XfaText.textContent(xfa);\n              });\n            }\n            var readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref10) {\n                  var _textContent$items;\n                  var value = _ref10.value,\n                    done = _ref10.done;\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n                  Object.assign(textContent.styles, value.styles);\n                  (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));\n                  pump();\n                }, reject);\n              }\n              var reader = readableStream.getReader();\n              var textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n        }, {\n          key: \"getStructTree\",\n          value: function getStructTree() {\n            return this._structTreePromise || (this._structTreePromise = this._transport.getStructTree(this._pageIndex));\n          }\n        }, {\n          key: \"_destroy\",\n          value: function _destroy() {\n            this.destroyed = true;\n            var waitOn = [];\n            var _iterator7 = _createForOfIteratorHelper(this._intentStates.values()),\n              _step7;\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var intentState = _step7.value;\n                this._abortOperatorList({\n                  intentState: intentState,\n                  reason: new Error(\"Page was destroyed.\"),\n                  force: true\n                });\n                if (intentState.opListReadCapability) {\n                  continue;\n                }\n                var _iterator9 = _createForOfIteratorHelper(intentState.renderTasks),\n                  _step9;\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    var internalRenderTask = _step9.value;\n                    waitOn.push(internalRenderTask.completed);\n                    internalRenderTask.cancel();\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n            this.objs.clear();\n            var _iterator8 = _createForOfIteratorHelper(this._bitmaps),\n              _step8;\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var bitmap = _step8.value;\n                bitmap.close();\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n            this._bitmaps.clear();\n            this._annotationPromises.clear();\n            this._jsActionsPromise = null;\n            this._structTreePromise = null;\n            this.pendingCleanup = false;\n            return Promise.all(waitOn);\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.pendingCleanup = true;\n            return this._tryCleanup(resetStats);\n          }\n        }, {\n          key: \"_tryCleanup\",\n          value: function _tryCleanup() {\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this.pendingCleanup) {\n              return false;\n            }\n            var _iterator10 = _createForOfIteratorHelper(this._intentStates.values()),\n              _step10;\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var _step10$value = _step10.value,\n                  renderTasks = _step10$value.renderTasks,\n                  operatorList = _step10$value.operatorList;\n                if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                  return false;\n                }\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n            this._intentStates.clear();\n            this.objs.clear();\n            this._annotationPromises.clear();\n            this._jsActionsPromise = null;\n            this._structTreePromise = null;\n            if (resetStats && this._stats) {\n              this._stats = new _display_utils.StatTimer();\n            }\n            var _iterator11 = _createForOfIteratorHelper(this._bitmaps),\n              _step11;\n            try {\n              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                var bitmap = _step11.value;\n                bitmap.close();\n              }\n            } catch (err) {\n              _iterator11.e(err);\n            } finally {\n              _iterator11.f();\n            }\n            this._bitmaps.clear();\n            this.pendingCleanup = false;\n            return true;\n          }\n        }, {\n          key: \"_startRenderPage\",\n          value: function _startRenderPage(transparency, cacheKey) {\n            var intentState = this._intentStates.get(cacheKey);\n            if (!intentState) {\n              return;\n            }\n            if (this._stats) {\n              this._stats.timeEnd(\"Page Request\");\n            }\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.resolve(transparency);\n            }\n          }\n        }, {\n          key: \"_renderPageChunk\",\n          value: function _renderPageChunk(operatorListChunk, intentState) {\n            for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n            intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n            var _iterator12 = _createForOfIteratorHelper(intentState.renderTasks),\n              _step12;\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var internalRenderTask = _step12.value;\n                internalRenderTask.operatorListChanged();\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n            if (operatorListChunk.lastChunk) {\n              this._tryCleanup();\n            }\n          }\n        }, {\n          key: \"_pumpOperatorList\",\n          value: function _pumpOperatorList(_ref11) {\n            var _this9 = this;\n            var renderingIntent = _ref11.renderingIntent,\n              cacheKey = _ref11.cacheKey,\n              annotationStorageMap = _ref11.annotationStorageMap;\n            var readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              cacheKey: cacheKey,\n              annotationStorage: annotationStorageMap\n            });\n            var reader = readableStream.getReader();\n            var intentState = this._intentStates.get(cacheKey);\n            intentState.streamReader = reader;\n            var pump = function pump() {\n              reader.read().then(function (_ref12) {\n                var value = _ref12.value,\n                  done = _ref12.done;\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n                if (_this9._transport.destroyed) {\n                  return;\n                }\n                _this9._renderPageChunk(value, intentState);\n                pump();\n              }, function (reason) {\n                intentState.streamReader = null;\n                if (_this9._transport.destroyed) {\n                  return;\n                }\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n                  var _iterator13 = _createForOfIteratorHelper(intentState.renderTasks),\n                    _step13;\n                  try {\n                    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                      var internalRenderTask = _step13.value;\n                      internalRenderTask.operatorListChanged();\n                    }\n                  } catch (err) {\n                    _iterator13.e(err);\n                  } finally {\n                    _iterator13.f();\n                  }\n                  _this9._tryCleanup();\n                }\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n            pump();\n          }\n        }, {\n          key: \"_abortOperatorList\",\n          value: function _abortOperatorList(_ref13) {\n            var _this10 = this;\n            var intentState = _ref13.intentState,\n              reason = _ref13.reason,\n              _ref13$force = _ref13.force,\n              force = _ref13$force === void 0 ? false : _ref13$force;\n            if (!intentState.streamReader) {\n              return;\n            }\n            if (!force) {\n              if (intentState.renderTasks.size > 0) {\n                return;\n              }\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                intentState.streamReaderCancelTimeout = setTimeout(function () {\n                  _this10._abortOperatorList({\n                    intentState: intentState,\n                    reason: reason,\n                    force: true\n                  });\n                  intentState.streamReaderCancelTimeout = null;\n                }, RENDERING_CANCELLED_TIMEOUT);\n                return;\n              }\n            }\n            intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(function () {});\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            var _iterator14 = _createForOfIteratorHelper(this._intentStates),\n              _step14;\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var _step14$value = _slicedToArray(_step14.value, 2),\n                  curCacheKey = _step14$value[0],\n                  curIntentState = _step14$value[1];\n                if (curIntentState === intentState) {\n                  this._intentStates.delete(curCacheKey);\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n            this.cleanup();\n          }\n        }, {\n          key: \"stats\",\n          get: function get() {\n            return this._stats;\n          }\n        }]);\n        return PDFPageProxy;\n      }();\n      exports.PDFPageProxy = PDFPageProxy;\n      var LoopbackPort = /*#__PURE__*/function () {\n        function LoopbackPort() {\n          _classCallCheck(this, LoopbackPort);\n          this._listeners = [];\n          this._deferred = Promise.resolve();\n        }\n        _createClass(LoopbackPort, [{\n          key: \"postMessage\",\n          value: function postMessage(obj, transfers) {\n            var _this11 = this;\n            var event = {\n              data: structuredClone(obj, transfers)\n            };\n            this._deferred.then(function () {\n              var _iterator15 = _createForOfIteratorHelper(_this11._listeners),\n                _step15;\n              try {\n                for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                  var listener = _step15.value;\n                  listener.call(_this11, event);\n                }\n              } catch (err) {\n                _iterator15.e(err);\n              } finally {\n                _iterator15.f();\n              }\n            });\n          }\n        }, {\n          key: \"addEventListener\",\n          value: function addEventListener(name, listener) {\n            this._listeners.push(listener);\n          }\n        }, {\n          key: \"removeEventListener\",\n          value: function removeEventListener(name, listener) {\n            var i = this._listeners.indexOf(listener);\n            this._listeners.splice(i, 1);\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate() {\n            this._listeners.length = 0;\n          }\n        }]);\n        return LoopbackPort;\n      }();\n      exports.LoopbackPort = LoopbackPort;\n      var PDFWorkerUtil = {\n        isWorkerDisabled: false,\n        fallbackWorkerSrc: null,\n        fakeWorkerId: 0\n      };\n      exports.PDFWorkerUtil = PDFWorkerUtil;\n      {\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          PDFWorkerUtil.isWorkerDisabled = true;\n          PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if (typeof document === \"object\") {\n          var _document, _document$currentScri;\n          var pdfjsFilePath = (_document = document) === null || _document === void 0 ? void 0 : (_document$currentScri = _document.currentScript) === null || _document$currentScri === void 0 ? void 0 : _document$currentScri.src;\n          if (pdfjsFilePath) {\n            PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n        PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n          var base;\n          try {\n            base = new URL(baseUrl);\n            if (!base.origin || base.origin === \"null\") {\n              return false;\n            }\n          } catch (e) {\n            return false;\n          }\n          var other = new URL(otherUrl, base);\n          return base.origin === other.origin;\n        };\n        PDFWorkerUtil.createCDNWrapper = function (url) {\n          var wrapper = \"importScripts(\\\"\".concat(url, \"\\\");\");\n          return URL.createObjectURL(new Blob([wrapper]));\n        };\n      }\n      var PDFWorker = /*#__PURE__*/function () {\n        function PDFWorker() {\n          var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref14$name = _ref14.name,\n            name = _ref14$name === void 0 ? null : _ref14$name,\n            _ref14$port = _ref14.port,\n            port = _ref14$port === void 0 ? null : _ref14$port,\n            _ref14$verbosity = _ref14.verbosity,\n            verbosity = _ref14$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref14$verbosity;\n          _classCallCheck(this, PDFWorker);\n          if (port && _workerPorts._.has(port)) {\n            throw new Error(\"Cannot use more than one PDFWorker per port.\");\n          }\n          this.name = name;\n          this.destroyed = false;\n          this.verbosity = verbosity;\n          this._readyCapability = (0, _util.createPromiseCapability)();\n          this._port = null;\n          this._webWorker = null;\n          this._messageHandler = null;\n          if (port) {\n            _workerPorts._.set(port, this);\n            this._initializeFromPort(port);\n            return;\n          }\n          this._initialize();\n        }\n        _createClass(PDFWorker, [{\n          key: \"promise\",\n          get: function get() {\n            return this._readyCapability.promise;\n          }\n        }, {\n          key: \"port\",\n          get: function get() {\n            return this._port;\n          }\n        }, {\n          key: \"messageHandler\",\n          get: function get() {\n            return this._messageHandler;\n          }\n        }, {\n          key: \"_initializeFromPort\",\n          value: function _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n            this._messageHandler.on(\"ready\", function () {});\n            this._readyCapability.resolve();\n          }\n        }, {\n          key: \"_initialize\",\n          value: function _initialize() {\n            var _this12 = this;\n            if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n              var workerSrc = PDFWorker.workerSrc;\n              try {\n                if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n                  workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n                var worker = new Worker(workerSrc);\n                var messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                var terminateEarly = function terminateEarly() {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n                  if (_this12.destroyed) {\n                    _this12._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    _this12._setupFakeWorker();\n                  }\n                };\n                var onWorkerError = function onWorkerError() {\n                  if (!_this12._webWorker) {\n                    terminateEarly();\n                  }\n                };\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", function (data) {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (_this12.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  if (data) {\n                    _this12._messageHandler = messageHandler;\n                    _this12._port = worker;\n                    _this12._webWorker = worker;\n                    _this12._readyCapability.resolve();\n                    messageHandler.send(\"configure\", {\n                      verbosity: _this12.verbosity\n                    });\n                  } else {\n                    _this12._setupFakeWorker();\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", function (data) {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (_this12.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  try {\n                    sendTest();\n                  } catch (e) {\n                    _this12._setupFakeWorker();\n                  }\n                });\n                var sendTest = function sendTest() {\n                  var testObj = new Uint8Array();\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                };\n                sendTest();\n                return;\n              } catch (e) {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n            this._setupFakeWorker();\n          }\n        }, {\n          key: \"_setupFakeWorker\",\n          value: function _setupFakeWorker() {\n            var _this13 = this;\n            if (!PDFWorkerUtil.isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              PDFWorkerUtil.isWorkerDisabled = true;\n            }\n            PDFWorker._setupFakeWorkerGlobal.then(function (WorkerMessageHandler) {\n              if (_this13.destroyed) {\n                _this13._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                return;\n              }\n              var port = new LoopbackPort();\n              _this13._port = port;\n              var id = \"fake\".concat(PDFWorkerUtil.fakeWorkerId++);\n              var workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              var messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              _this13._messageHandler = messageHandler;\n              _this13._readyCapability.resolve();\n              messageHandler.send(\"configure\", {\n                verbosity: _this13.verbosity\n              });\n            }).catch(function (reason) {\n              _this13._readyCapability.reject(new Error(\"Setting up fake worker failed: \\\"\".concat(reason.message, \"\\\".\")));\n            });\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.destroyed = true;\n            if (this._webWorker) {\n              this._webWorker.terminate();\n              this._webWorker = null;\n            }\n            _workerPorts._.delete(this._port);\n            this._port = null;\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n              this._messageHandler = null;\n            }\n          }\n        }], [{\n          key: \"fromPort\",\n          value: function fromPort(params) {\n            if (!(params !== null && params !== void 0 && params.port)) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n            if (_assertClassBrand(PDFWorker, this, _workerPorts)._.has(params.port)) {\n              return _assertClassBrand(PDFWorker, this, _workerPorts)._.get(params.port);\n            }\n            return new PDFWorker(params);\n          }\n        }, {\n          key: \"workerSrc\",\n          get: function get() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n            if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n              if (!_is_node.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n              return PDFWorkerUtil.fallbackWorkerSrc;\n            }\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n        }, {\n          key: \"_mainThreadWorkerMessageHandler\",\n          get: function get() {\n            try {\n              var _globalThis$pdfjsWork;\n              return ((_globalThis$pdfjsWork = globalThis.pdfjsWorker) === null || _globalThis$pdfjsWork === void 0 ? void 0 : _globalThis$pdfjsWork.WorkerMessageHandler) || null;\n            } catch (ex) {\n              return null;\n            }\n          }\n        }, {\n          key: \"_setupFakeWorkerGlobal\",\n          get: function get() {\n            var _this14 = this;\n            var loader = /*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                var mainWorkerMessageHandler, worker;\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      mainWorkerMessageHandler = _this14._mainThreadWorkerMessageHandler;\n                      if (!mainWorkerMessageHandler) {\n                        _context4.next = 3;\n                        break;\n                      }\n                      return _context4.abrupt(\"return\", mainWorkerMessageHandler);\n                    case 3:\n                      if (!(_is_node.isNodeJS && typeof require === \"function\")) {\n                        _context4.next = 6;\n                        break;\n                      }\n                      worker = eval(\"require\")(_this14.workerSrc);\n                      return _context4.abrupt(\"return\", worker.WorkerMessageHandler);\n                    case 6:\n                      _context4.next = 8;\n                      return (0, _display_utils.loadScript)(_this14.workerSrc);\n                    case 8:\n                      return _context4.abrupt(\"return\", window.pdfjsWorker.WorkerMessageHandler);\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              }));\n              return function loader() {\n                return _ref15.apply(this, arguments);\n              };\n            }();\n            return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n          }\n        }]);\n        return PDFWorker;\n      }();\n      var _workerPorts = {\n        _: new WeakMap()\n      };\n      exports.PDFWorker = PDFWorker;\n      {\n        PDFWorker.getWorkerSrc = function () {\n          (0, _display_utils.deprecated)(\"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\");\n          return this.workerSrc;\n        };\n      }\n      var _docStats = /*#__PURE__*/new WeakMap();\n      var _pageCache = /*#__PURE__*/new WeakMap();\n      var _pagePromises = /*#__PURE__*/new WeakMap();\n      var _metadataPromise = /*#__PURE__*/new WeakMap();\n      var WorkerTransport = /*#__PURE__*/function () {\n        function WorkerTransport(messageHandler, loadingTask, networkStream, params) {\n          _classCallCheck(this, WorkerTransport);\n          _classPrivateFieldInitSpec(this, _docStats, null);\n          _classPrivateFieldInitSpec(this, _pageCache, new Map());\n          _classPrivateFieldInitSpec(this, _pagePromises, new Map());\n          _classPrivateFieldInitSpec(this, _metadataPromise, null);\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            ownerDocument: params.ownerDocument,\n            styleElement: params.styleElement\n          });\n          this._params = params;\n          if (!params.useWorkerFetch) {\n            this.CMapReaderFactory = new params.CMapReaderFactory({\n              baseUrl: params.cMapUrl,\n              isCompressed: params.cMapPacked\n            });\n            this.StandardFontDataFactory = new params.StandardFontDataFactory({\n              baseUrl: params.standardFontDataUrl\n            });\n          }\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n        _createClass(WorkerTransport, [{\n          key: \"annotationStorage\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n          }\n        }, {\n          key: \"stats\",\n          get: function get() {\n            return _classPrivateFieldGet(_docStats, this);\n          }\n        }, {\n          key: \"getRenderingIntent\",\n          value: function getRenderingIntent(intent) {\n            var annotationMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;\n            var printAnnotationStorage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var isOpList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            var renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n            var annotationMap = null;\n            switch (intent) {\n              case \"any\":\n                renderingIntent = _util.RenderingIntentFlag.ANY;\n                break;\n              case \"display\":\n                break;\n              case \"print\":\n                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                break;\n              default:\n                (0, _util.warn)(\"getRenderingIntent - invalid intent: \".concat(intent));\n            }\n            switch (annotationMode) {\n              case _util.AnnotationMode.DISABLE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                break;\n              case _util.AnnotationMode.ENABLE:\n                break;\n              case _util.AnnotationMode.ENABLE_FORMS:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                break;\n              case _util.AnnotationMode.ENABLE_STORAGE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                var annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n                annotationMap = annotationStorage.serializable;\n                break;\n              default:\n                (0, _util.warn)(\"getRenderingIntent - invalid annotationMode: \".concat(annotationMode));\n            }\n            if (isOpList) {\n              renderingIntent += _util.RenderingIntentFlag.OPLIST;\n            }\n            return {\n              renderingIntent: renderingIntent,\n              cacheKey: \"\".concat(renderingIntent, \"_\").concat(_annotation_storage.AnnotationStorage.getHash(annotationMap)),\n              annotationStorageMap: annotationMap\n            };\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            var _this15 = this;\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n            this.destroyed = true;\n            this.destroyCapability = (0, _util.createPromiseCapability)();\n            if (this._passwordCapability) {\n              this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            }\n            var waitOn = [];\n            var _iterator16 = _createForOfIteratorHelper(_classPrivateFieldGet(_pageCache, this).values()),\n              _step16;\n            try {\n              for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                var page = _step16.value;\n                waitOn.push(page._destroy());\n              }\n            } catch (err) {\n              _iterator16.e(err);\n            } finally {\n              _iterator16.f();\n            }\n            _classPrivateFieldGet(_pageCache, this).clear();\n            _classPrivateFieldGet(_pagePromises, this).clear();\n            if (this.hasOwnProperty(\"annotationStorage\")) {\n              this.annotationStorage.resetModified();\n            }\n            var terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(function () {\n              _this15.commonObjs.clear();\n              _this15.fontLoader.clear();\n              _classPrivateFieldSet(_metadataPromise, _this15, null);\n              _this15._getFieldObjectsPromise = null;\n              _this15._hasJSActionsPromise = null;\n              if (_this15._networkStream) {\n                _this15._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              }\n              if (_this15.messageHandler) {\n                _this15.messageHandler.destroy();\n                _this15.messageHandler = null;\n              }\n              _this15.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n        }, {\n          key: \"setupMessageHandler\",\n          value: function setupMessageHandler() {\n            var _this16 = this;\n            var messageHandler = this.messageHandler,\n              loadingTask = this.loadingTask;\n            messageHandler.on(\"GetReader\", function (data, sink) {\n              (0, _util.assert)(_this16._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              _this16._fullReader = _this16._networkStream.getFullReader();\n              _this16._fullReader.onProgress = function (evt) {\n                _this16._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n              sink.onPull = function () {\n                _this16._fullReader.read().then(function (_ref16) {\n                  var value = _ref16.value,\n                    done = _ref16.done;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = function (reason) {\n                _this16._fullReader.cancel(reason);\n                sink.ready.catch(function (readyReason) {\n                  if (_this16.destroyed) {\n                    return;\n                  }\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", function (data) {\n              var headersCapability = (0, _util.createPromiseCapability)();\n              var fullReader = _this16._fullReader;\n              fullReader.headersReady.then(function () {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (_this16._lastProgress) {\n                    var _loadingTask$onProgre;\n                    (_loadingTask$onProgre = loadingTask.onProgress) === null || _loadingTask$onProgre === void 0 ? void 0 : _loadingTask$onProgre.call(loadingTask, _this16._lastProgress);\n                  }\n                  fullReader.onProgress = function (evt) {\n                    var _loadingTask$onProgre2;\n                    (_loadingTask$onProgre2 = loadingTask.onProgress) === null || _loadingTask$onProgre2 === void 0 ? void 0 : _loadingTask$onProgre2.call(loadingTask, {\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  };\n                }\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", function (data, sink) {\n              (0, _util.assert)(_this16._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n              var rangeReader = _this16._networkStream.getRangeReader(data.begin, data.end);\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n              sink.onPull = function () {\n                rangeReader.read().then(function (_ref17) {\n                  var value = _ref17.value,\n                    done = _ref17.done;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = function (reason) {\n                rangeReader.cancel(reason);\n                sink.ready.catch(function (readyReason) {\n                  if (_this16.destroyed) {\n                    return;\n                  }\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"GetDoc\", function (_ref18) {\n              var pdfInfo = _ref18.pdfInfo;\n              _this16._numPages = pdfInfo.numPages;\n              _this16._htmlForXfa = pdfInfo.htmlForXfa;\n              delete pdfInfo.htmlForXfa;\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, _this16));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              var reason;\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n                default:\n                  (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n              }\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", function (exception) {\n              _this16._passwordCapability = (0, _util.createPromiseCapability)();\n              if (loadingTask.onPassword) {\n                var updatePassword = function updatePassword(password) {\n                  if (password instanceof Error) {\n                    _this16._passwordCapability.reject(password);\n                  } else {\n                    _this16._passwordCapability.resolve({\n                      password: password\n                    });\n                  }\n                };\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  _this16._passwordCapability.reject(ex);\n                }\n              } else {\n                _this16._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n              return _this16._passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", function (data) {\n              var _loadingTask$onProgre3;\n              (_loadingTask$onProgre3 = loadingTask.onProgress) === null || _loadingTask$onProgre3 === void 0 ? void 0 : _loadingTask$onProgre3.call(loadingTask, {\n                loaded: data.length,\n                total: data.length\n              });\n              _this16.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", function (data) {\n              if (_this16.destroyed) {\n                return;\n              }\n              var page = _classPrivateFieldGet(_pageCache, _this16).get(data.pageIndex);\n              page._startRenderPage(data.transparency, data.cacheKey);\n            });\n            messageHandler.on(\"commonobj\", function (_ref19) {\n              var _globalThis$FontInspe;\n              var _ref20 = _slicedToArray(_ref19, 3),\n                id = _ref20[0],\n                type = _ref20[1],\n                exportedData = _ref20[2];\n              if (_this16.destroyed) {\n                return;\n              }\n              if (_this16.commonObjs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Font\":\n                  var params = _this16._params;\n                  if (\"error\" in exportedData) {\n                    var exportedError = exportedData.error;\n                    (0, _util.warn)(\"Error during font loading: \".concat(exportedError));\n                    _this16.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n                  var fontRegistry = null;\n                  if (params.pdfBug && (_globalThis$FontInspe = globalThis.FontInspector) !== null && _globalThis$FontInspe !== void 0 && _globalThis$FontInspe.enabled) {\n                    fontRegistry = {\n                      registerFont: function registerFont(font, url) {\n                        globalThis.FontInspector.fontAdded(font, url);\n                      }\n                    };\n                  }\n                  var font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    onUnsupportedFeature: _this16._onUnsupportedFeature.bind(_this16),\n                    fontRegistry: fontRegistry\n                  });\n                  _this16.fontLoader.bind(font).catch(function (reason) {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id: id\n                    });\n                  }).finally(function () {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n                    _this16.commonObjs.resolve(id, font);\n                  });\n                  break;\n                case \"FontPath\":\n                case \"Image\":\n                  _this16.commonObjs.resolve(id, exportedData);\n                  break;\n                default:\n                  throw new Error(\"Got unknown common object type \".concat(type));\n              }\n            });\n            messageHandler.on(\"obj\", function (_ref21) {\n              var _ref22 = _slicedToArray(_ref21, 4),\n                id = _ref22[0],\n                pageIndex = _ref22[1],\n                type = _ref22[2],\n                imageData = _ref22[3];\n              if (_this16.destroyed) {\n                return;\n              }\n              var pageProxy = _classPrivateFieldGet(_pageCache, _this16).get(pageIndex);\n              if (pageProxy.objs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n                  if (imageData) {\n                    var length;\n                    if (imageData.bitmap) {\n                      var bitmap = imageData.bitmap,\n                        width = imageData.width,\n                        height = imageData.height;\n                      length = width * height * 4;\n                      pageProxy._bitmaps.add(bitmap);\n                    } else {\n                      var _imageData$data;\n                      length = ((_imageData$data = imageData.data) === null || _imageData$data === void 0 ? void 0 : _imageData$data.length) || 0;\n                    }\n                    if (length > MAX_IMAGE_SIZE_TO_STORE) {\n                      pageProxy.cleanupAfterRender = true;\n                    }\n                  }\n                  break;\n                case \"Pattern\":\n                  pageProxy.objs.resolve(id, imageData);\n                  break;\n                default:\n                  throw new Error(\"Got unknown object type \".concat(type));\n              }\n            });\n            messageHandler.on(\"DocProgress\", function (data) {\n              var _loadingTask$onProgre4;\n              if (_this16.destroyed) {\n                return;\n              }\n              (_loadingTask$onProgre4 = loadingTask.onProgress) === null || _loadingTask$onProgre4 === void 0 ? void 0 : _loadingTask$onProgre4.call(loadingTask, {\n                loaded: data.loaded,\n                total: data.total\n              });\n            });\n            messageHandler.on(\"DocStats\", function (data) {\n              if (_this16.destroyed) {\n                return;\n              }\n              _classPrivateFieldSet(_docStats, _this16, Object.freeze({\n                streamTypes: Object.freeze(data.streamTypes),\n                fontTypes: Object.freeze(data.fontTypes)\n              }));\n            });\n            messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n            messageHandler.on(\"FetchBuiltInCMap\", function (data) {\n              if (_this16.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n              if (!_this16.CMapReaderFactory) {\n                return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n              return _this16.CMapReaderFactory.fetch(data);\n            });\n            messageHandler.on(\"FetchStandardFontData\", function (data) {\n              if (_this16.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n              if (!_this16.StandardFontDataFactory) {\n                return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n              return _this16.StandardFontDataFactory.fetch(data);\n            });\n          }\n        }, {\n          key: \"_onUnsupportedFeature\",\n          value: function _onUnsupportedFeature(_ref23) {\n            var _this$loadingTask$onU, _this$loadingTask;\n            var featureId = _ref23.featureId;\n            if (this.destroyed) {\n              return;\n            }\n            (_this$loadingTask$onU = (_this$loadingTask = this.loadingTask).onUnsupportedFeature) === null || _this$loadingTask$onU === void 0 ? void 0 : _this$loadingTask$onU.call(_this$loadingTask, featureId);\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            var _this17 = this;\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request.\"));\n            }\n            var pageIndex = pageNumber - 1,\n              cachedPromise = _classPrivateFieldGet(_pagePromises, this).get(pageIndex);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            var promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex: pageIndex\n            }).then(function (pageInfo) {\n              if (_this17.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n              var page = new PDFPageProxy(pageIndex, pageInfo, _this17, _this17._params.ownerDocument, _this17._params.pdfBug);\n              _classPrivateFieldGet(_pageCache, _this17).set(pageIndex, page);\n              return page;\n            });\n            _classPrivateFieldGet(_pagePromises, this).set(pageIndex, promise);\n            return promise;\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n              return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              num: ref.num,\n              gen: ref.gen\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex: pageIndex,\n              intent: intent\n            });\n          }\n        }, {\n          key: \"saveDocument\",\n          value: function saveDocument() {\n            var _this$_fullReader$fil,\n              _this$_fullReader,\n              _this18 = this;\n            return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n              isPureXfa: !!this._htmlForXfa,\n              numPages: this._numPages,\n              annotationStorage: this.annotationStorage.serializable,\n              filename: (_this$_fullReader$fil = (_this$_fullReader = this._fullReader) === null || _this$_fullReader === void 0 ? void 0 : _this$_fullReader.filename) !== null && _this$_fullReader$fil !== void 0 ? _this$_fullReader$fil : null\n            }).finally(function () {\n              _this18.annotationStorage.resetModified();\n            });\n          }\n        }, {\n          key: \"getFieldObjects\",\n          value: function getFieldObjects() {\n            return this._getFieldObjectsPromise || (this._getFieldObjectsPromise = this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n          }\n        }, {\n          key: \"hasJSActions\",\n          value: function hasJSActions() {\n            return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise(\"HasJSActions\", null));\n          }\n        }, {\n          key: \"getCalculationOrderIds\",\n          value: function getCalculationOrderIds() {\n            return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id: id\n            });\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n          }\n        }, {\n          key: \"getDocJSActions\",\n          value: function getDocJSActions() {\n            return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n          }\n        }, {\n          key: \"getPageJSActions\",\n          value: function getPageJSActions(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n              pageIndex: pageIndex\n            });\n          }\n        }, {\n          key: \"getStructTree\",\n          value: function getStructTree(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n              pageIndex: pageIndex\n            });\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n        }, {\n          key: \"getOptionalContentConfig\",\n          value: function getOptionalContentConfig() {\n            return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(function (results) {\n              return new _optional_content_config.OptionalContentConfig(results);\n            });\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            var _this19 = this;\n            return _classPrivateFieldGet(_metadataPromise, this) || _classPrivateFieldSet(_metadataPromise, this, this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(function (results) {\n              var _this19$_fullReader$f, _this19$_fullReader, _this19$_fullReader$c, _this19$_fullReader2;\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: (_this19$_fullReader$f = (_this19$_fullReader = _this19._fullReader) === null || _this19$_fullReader === void 0 ? void 0 : _this19$_fullReader.filename) !== null && _this19$_fullReader$f !== void 0 ? _this19$_fullReader$f : null,\n                contentLength: (_this19$_fullReader$c = (_this19$_fullReader2 = _this19._fullReader) === null || _this19$_fullReader2 === void 0 ? void 0 : _this19$_fullReader2.contentLength) !== null && _this19$_fullReader$c !== void 0 ? _this19$_fullReader$c : null\n              };\n            }));\n          }\n        }, {\n          key: \"getMarkInfo\",\n          value: function getMarkInfo() {\n            return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n          }\n        }, {\n          key: \"startCleanup\",\n          value: function () {\n            var _startCleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n              var keepLoadedFonts,\n                _iterator17,\n                _step17,\n                page,\n                cleanupSuccessful,\n                _args5 = arguments;\n              return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    keepLoadedFonts = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : false;\n                    _context5.next = 3;\n                    return this.messageHandler.sendWithPromise(\"Cleanup\", null);\n                  case 3:\n                    if (!this.destroyed) {\n                      _context5.next = 5;\n                      break;\n                    }\n                    return _context5.abrupt(\"return\");\n                  case 5:\n                    _iterator17 = _createForOfIteratorHelper(_classPrivateFieldGet(_pageCache, this).values());\n                    _context5.prev = 6;\n                    _iterator17.s();\n                  case 8:\n                    if ((_step17 = _iterator17.n()).done) {\n                      _context5.next = 15;\n                      break;\n                    }\n                    page = _step17.value;\n                    cleanupSuccessful = page.cleanup();\n                    if (cleanupSuccessful) {\n                      _context5.next = 13;\n                      break;\n                    }\n                    throw new Error(\"startCleanup: Page \".concat(page.pageNumber, \" is currently rendering.\"));\n                  case 13:\n                    _context5.next = 8;\n                    break;\n                  case 15:\n                    _context5.next = 20;\n                    break;\n                  case 17:\n                    _context5.prev = 17;\n                    _context5.t0 = _context5[\"catch\"](6);\n                    _iterator17.e(_context5.t0);\n                  case 20:\n                    _context5.prev = 20;\n                    _iterator17.f();\n                    return _context5.finish(20);\n                  case 23:\n                    this.commonObjs.clear();\n                    if (!keepLoadedFonts) {\n                      this.fontLoader.clear();\n                    }\n                    _classPrivateFieldSet(_metadataPromise, this, null);\n                    this._getFieldObjectsPromise = null;\n                    this._hasJSActionsPromise = null;\n                  case 28:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, this, [[6, 17, 20, 23]]);\n            }));\n            function startCleanup() {\n              return _startCleanup.apply(this, arguments);\n            }\n            return startCleanup;\n          }()\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            var params = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch: params.disableAutoFetch,\n              enableXfa: params.enableXfa\n            });\n          }\n        }]);\n        return WorkerTransport;\n      }();\n      var _objs = /*#__PURE__*/new WeakMap();\n      var _PDFObjects_brand = /*#__PURE__*/new WeakSet();\n      var PDFObjects = /*#__PURE__*/function () {\n        function PDFObjects() {\n          _classCallCheck(this, PDFObjects);\n          _classPrivateMethodInitSpec(this, _PDFObjects_brand);\n          _classPrivateFieldInitSpec(this, _objs, Object.create(null));\n        }\n        _createClass(PDFObjects, [{\n          key: \"get\",\n          value: function get(objId) {\n            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (callback) {\n              var _obj = _assertClassBrand(_PDFObjects_brand, this, _ensureObj).call(this, objId);\n              _obj.capability.promise.then(function () {\n                return callback(_obj.data);\n              });\n              return null;\n            }\n            var obj = _classPrivateFieldGet(_objs, this)[objId];\n            if (!(obj !== null && obj !== void 0 && obj.capability.settled)) {\n              throw new Error(\"Requesting object that isn't resolved yet \".concat(objId, \".\"));\n            }\n            return obj.data;\n          }\n        }, {\n          key: \"has\",\n          value: function has(objId) {\n            var obj = _classPrivateFieldGet(_objs, this)[objId];\n            return (obj === null || obj === void 0 ? void 0 : obj.capability.settled) || false;\n          }\n        }, {\n          key: \"resolve\",\n          value: function resolve(objId) {\n            var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var obj = _assertClassBrand(_PDFObjects_brand, this, _ensureObj).call(this, objId);\n            obj.data = data;\n            obj.capability.resolve();\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            _classPrivateFieldSet(_objs, this, Object.create(null));\n          }\n        }]);\n        return PDFObjects;\n      }();\n      function _ensureObj(objId) {\n        var obj = _classPrivateFieldGet(_objs, this)[objId];\n        if (obj) {\n          return obj;\n        }\n        return _classPrivateFieldGet(_objs, this)[objId] = {\n          capability: (0, _util.createPromiseCapability)(),\n          data: null\n        };\n      }\n      var _internalRenderTask = /*#__PURE__*/new WeakMap();\n      var RenderTask = /*#__PURE__*/function () {\n        function RenderTask(internalRenderTask) {\n          _classCallCheck(this, RenderTask);\n          _classPrivateFieldInitSpec(this, _internalRenderTask, null);\n          _classPrivateFieldSet(_internalRenderTask, this, internalRenderTask);\n          this.onContinue = null;\n        }\n        _createClass(RenderTask, [{\n          key: \"promise\",\n          get: function get() {\n            return _classPrivateFieldGet(_internalRenderTask, this).capability.promise;\n          }\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            _classPrivateFieldGet(_internalRenderTask, this).cancel();\n          }\n        }, {\n          key: \"separateAnnots\",\n          get: function get() {\n            var separateAnnots = _classPrivateFieldGet(_internalRenderTask, this).operatorList.separateAnnots;\n            if (!separateAnnots) {\n              return false;\n            }\n            var _classPrivateFieldGet2 = _classPrivateFieldGet(_internalRenderTask, this),\n              annotationCanvasMap = _classPrivateFieldGet2.annotationCanvasMap;\n            return separateAnnots.form || separateAnnots.canvas && (annotationCanvasMap === null || annotationCanvasMap === void 0 ? void 0 : annotationCanvasMap.size) > 0;\n          }\n        }]);\n        return RenderTask;\n      }();\n      exports.RenderTask = RenderTask;\n      var InternalRenderTask = /*#__PURE__*/function () {\n        function InternalRenderTask(_ref24) {\n          var callback = _ref24.callback,\n            params = _ref24.params,\n            objs = _ref24.objs,\n            commonObjs = _ref24.commonObjs,\n            annotationCanvasMap = _ref24.annotationCanvasMap,\n            operatorList = _ref24.operatorList,\n            pageIndex = _ref24.pageIndex,\n            canvasFactory = _ref24.canvasFactory,\n            _ref24$useRequestAnim = _ref24.useRequestAnimationFrame,\n            useRequestAnimationFrame = _ref24$useRequestAnim === void 0 ? false : _ref24$useRequestAnim,\n            _ref24$pdfBug = _ref24.pdfBug,\n            pdfBug = _ref24$pdfBug === void 0 ? false : _ref24$pdfBug,\n            _ref24$pageColors = _ref24.pageColors,\n            pageColors = _ref24$pageColors === void 0 ? null : _ref24$pageColors;\n          _classCallCheck(this, InternalRenderTask);\n          this.callback = callback;\n          this.params = params;\n          this.objs = objs;\n          this.commonObjs = commonObjs;\n          this.annotationCanvasMap = annotationCanvasMap;\n          this.operatorListIdx = null;\n          this.operatorList = operatorList;\n          this._pageIndex = pageIndex;\n          this.canvasFactory = canvasFactory;\n          this._pdfBug = pdfBug;\n          this.pageColors = pageColors;\n          this.running = false;\n          this.graphicsReadyCallback = null;\n          this.graphicsReady = false;\n          this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n          this.cancelled = false;\n          this.capability = (0, _util.createPromiseCapability)();\n          this.task = new RenderTask(this);\n          this._cancelBound = this.cancel.bind(this);\n          this._continueBound = this._continue.bind(this);\n          this._scheduleNextBound = this._scheduleNext.bind(this);\n          this._nextBound = this._next.bind(this);\n          this._canvas = params.canvasContext.canvas;\n        }\n        _createClass(InternalRenderTask, [{\n          key: \"completed\",\n          get: function get() {\n            return this.capability.promise.catch(function () {});\n          }\n        }, {\n          key: \"initializeGraphics\",\n          value: function initializeGraphics(_ref25) {\n            var _globalThis$StepperMa;\n            var _ref25$transparency = _ref25.transparency,\n              transparency = _ref25$transparency === void 0 ? false : _ref25$transparency,\n              optionalContentConfig = _ref25.optionalContentConfig;\n            if (this.cancelled) {\n              return;\n            }\n            if (this._canvas) {\n              if (_canvasInUse._.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n              _canvasInUse._.add(this._canvas);\n            }\n            if (this._pdfBug && (_globalThis$StepperMa = globalThis.StepperManager) !== null && _globalThis$StepperMa !== void 0 && _globalThis$StepperMa.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n            var _this$params = this.params,\n              canvasContext = _this$params.canvasContext,\n              viewport = _this$params.viewport,\n              transform = _this$params.transform,\n              imageLayer = _this$params.imageLayer,\n              background = _this$params.background;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig, this.annotationCanvasMap, this.pageColors);\n            this.gfx.beginDrawing({\n              transform: transform,\n              viewport: viewport,\n              transparency: transparency,\n              background: background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n            if (this.graphicsReadyCallback) {\n              this.graphicsReadyCallback();\n            }\n          }\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            this.running = false;\n            this.cancelled = true;\n            if (this.gfx) {\n              this.gfx.endDrawing();\n            }\n            if (this._canvas) {\n              _canvasInUse._.delete(this._canvas);\n            }\n            this.callback(error || new _display_utils.RenderingCancelledException(\"Rendering cancelled, page \".concat(this._pageIndex + 1), \"canvas\"));\n          }\n        }, {\n          key: \"operatorListChanged\",\n          value: function operatorListChanged() {\n            if (!this.graphicsReady) {\n              if (!this.graphicsReadyCallback) {\n                this.graphicsReadyCallback = this._continueBound;\n              }\n              return;\n            }\n            if (this.stepper) {\n              this.stepper.updateOperatorList(this.operatorList);\n            }\n            if (this.running) {\n              return;\n            }\n            this._continue();\n          }\n        }, {\n          key: \"_continue\",\n          value: function _continue() {\n            this.running = true;\n            if (this.cancelled) {\n              return;\n            }\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n        }, {\n          key: \"_scheduleNext\",\n          value: function _scheduleNext() {\n            var _this20 = this;\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(function () {\n                _this20._nextBound().catch(_this20._cancelBound);\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n            }\n          }\n        }, {\n          key: \"_next\",\n          value: function () {\n            var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n              return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    if (!this.cancelled) {\n                      _context6.next = 2;\n                      break;\n                    }\n                    return _context6.abrupt(\"return\");\n                  case 2:\n                    this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n                    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                      this.running = false;\n                      if (this.operatorList.lastChunk) {\n                        this.gfx.endDrawing();\n                        if (this._canvas) {\n                          _canvasInUse._.delete(this._canvas);\n                        }\n                        this.callback();\n                      }\n                    }\n                  case 4:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6, this);\n            }));\n            function _next() {\n              return _next2.apply(this, arguments);\n            }\n            return _next;\n          }()\n        }]);\n        return InternalRenderTask;\n      }();\n      var _canvasInUse = {\n        _: new WeakSet()\n      };\n      var version = '2.16.105';\n      exports.version = version;\n      var build = '172ccdbe5';\n      exports.build = build;\n\n      /***/\n    }), ( /* 5 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _editor = __w_pdfjs_require__(6);\n      var _murmurhash = __w_pdfjs_require__(10);\n      var _AnnotationStorage_brand = /*#__PURE__*/new WeakSet();\n      var AnnotationStorage = /*#__PURE__*/function () {\n        function AnnotationStorage() {\n          _classCallCheck(this, AnnotationStorage);\n          _classPrivateMethodInitSpec(this, _AnnotationStorage_brand);\n          this._storage = new Map();\n          this._modified = false;\n          this.onSetModified = null;\n          this.onResetModified = null;\n          this.onAnnotationEditor = null;\n        }\n        _createClass(AnnotationStorage, [{\n          key: \"getValue\",\n          value: function getValue(key, defaultValue) {\n            var value = this._storage.get(key);\n            if (value === undefined) {\n              return defaultValue;\n            }\n            return Object.assign(defaultValue, value);\n          }\n        }, {\n          key: \"getRawValue\",\n          value: function getRawValue(key) {\n            return this._storage.get(key);\n          }\n        }, {\n          key: \"remove\",\n          value: function remove(key) {\n            this._storage.delete(key);\n            if (this._storage.size === 0) {\n              this.resetModified();\n            }\n            if (typeof this.onAnnotationEditor === \"function\") {\n              var _iterator18 = _createForOfIteratorHelper(this._storage.values()),\n                _step18;\n              try {\n                for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                  var value = _step18.value;\n                  if (value instanceof _editor.AnnotationEditor) {\n                    return;\n                  }\n                }\n              } catch (err) {\n                _iterator18.e(err);\n              } finally {\n                _iterator18.f();\n              }\n              this.onAnnotationEditor(null);\n            }\n          }\n        }, {\n          key: \"setValue\",\n          value: function setValue(key, value) {\n            var obj = this._storage.get(key);\n            var modified = false;\n            if (obj !== undefined) {\n              for (var _i2 = 0, _Object$entries = Object.entries(value); _i2 < _Object$entries.length; _i2++) {\n                var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n                  entry = _Object$entries$_i[0],\n                  val = _Object$entries$_i[1];\n                if (obj[entry] !== val) {\n                  modified = true;\n                  obj[entry] = val;\n                }\n              }\n            } else {\n              modified = true;\n              this._storage.set(key, value);\n            }\n            if (modified) {\n              _assertClassBrand(_AnnotationStorage_brand, this, _setModified).call(this);\n            }\n            if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") {\n              this.onAnnotationEditor(value.constructor._type);\n            }\n          }\n        }, {\n          key: \"has\",\n          value: function has(key) {\n            return this._storage.has(key);\n          }\n        }, {\n          key: \"getAll\",\n          value: function getAll() {\n            return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null;\n          }\n        }, {\n          key: \"size\",\n          get: function get() {\n            return this._storage.size;\n          }\n        }, {\n          key: \"resetModified\",\n          value: function resetModified() {\n            if (this._modified) {\n              this._modified = false;\n              if (typeof this.onResetModified === \"function\") {\n                this.onResetModified();\n              }\n            }\n          }\n        }, {\n          key: \"print\",\n          get: function get() {\n            return new PrintAnnotationStorage(this);\n          }\n        }, {\n          key: \"serializable\",\n          get: function get() {\n            if (this._storage.size === 0) {\n              return null;\n            }\n            var clone = new Map();\n            var _iterator19 = _createForOfIteratorHelper(this._storage),\n              _step19;\n            try {\n              for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                var _step19$value = _slicedToArray(_step19.value, 2),\n                  key = _step19$value[0],\n                  val = _step19$value[1];\n                var serialized = val instanceof _editor.AnnotationEditor ? val.serialize() : val;\n                if (serialized) {\n                  clone.set(key, serialized);\n                }\n              }\n            } catch (err) {\n              _iterator19.e(err);\n            } finally {\n              _iterator19.f();\n            }\n            return clone;\n          }\n        }], [{\n          key: \"getHash\",\n          value: function getHash(map) {\n            if (!map) {\n              return \"\";\n            }\n            var hash = new _murmurhash.MurmurHash3_64();\n            var _iterator20 = _createForOfIteratorHelper(map),\n              _step20;\n            try {\n              for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                var _step20$value = _slicedToArray(_step20.value, 2),\n                  key = _step20$value[0],\n                  val = _step20$value[1];\n                hash.update(\"\".concat(key, \":\").concat(JSON.stringify(val)));\n              }\n            } catch (err) {\n              _iterator20.e(err);\n            } finally {\n              _iterator20.f();\n            }\n            return hash.hexdigest();\n          }\n        }]);\n        return AnnotationStorage;\n      }();\n      function _setModified() {\n        if (!this._modified) {\n          this._modified = true;\n          if (typeof this.onSetModified === \"function\") {\n            this.onSetModified();\n          }\n        }\n      }\n      exports.AnnotationStorage = AnnotationStorage;\n      var _serializable = /*#__PURE__*/new WeakMap();\n      var PrintAnnotationStorage = /*#__PURE__*/function (_AnnotationStorage2) {\n        _inherits(PrintAnnotationStorage, _AnnotationStorage2);\n        function PrintAnnotationStorage(parent) {\n          var _this21;\n          _classCallCheck(this, PrintAnnotationStorage);\n          _this21 = _callSuper(this, PrintAnnotationStorage);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this21), _serializable, null);\n          _classPrivateFieldSet(_serializable, _assertThisInitialized(_this21), structuredClone(parent.serializable));\n          return _this21;\n        }\n        _createClass(PrintAnnotationStorage, [{\n          key: \"print\",\n          get: function get() {\n            (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n          }\n        }, {\n          key: \"serializable\",\n          get: function get() {\n            return _classPrivateFieldGet(_serializable, this);\n          }\n        }]);\n        return PrintAnnotationStorage;\n      }(AnnotationStorage);\n      exports.PrintAnnotationStorage = PrintAnnotationStorage;\n\n      /***/\n    }), ( /* 6 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationEditor = void 0;\n      var _tools = __w_pdfjs_require__(7);\n      var _util = __w_pdfjs_require__(1);\n      var _boundFocusin = /*#__PURE__*/new WeakMap();\n      var _boundFocusout = /*#__PURE__*/new WeakMap();\n      var _hasBeenSelected = /*#__PURE__*/new WeakMap();\n      var _isEditing = /*#__PURE__*/new WeakMap();\n      var _isInEditMode = /*#__PURE__*/new WeakMap();\n      var _zIndex = /*#__PURE__*/new WeakMap();\n      var AnnotationEditor = /*#__PURE__*/function () {\n        function AnnotationEditor(parameters) {\n          _classCallCheck(this, AnnotationEditor);\n          _classPrivateFieldInitSpec(this, _boundFocusin, this.focusin.bind(this));\n          _classPrivateFieldInitSpec(this, _boundFocusout, this.focusout.bind(this));\n          _classPrivateFieldInitSpec(this, _hasBeenSelected, false);\n          _classPrivateFieldInitSpec(this, _isEditing, false);\n          _classPrivateFieldInitSpec(this, _isInEditMode, false);\n          _classPrivateFieldInitSpec(this, _zIndex, AnnotationEditor._zIndex++);\n          if (this.constructor === AnnotationEditor) {\n            (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n          }\n          this.parent = parameters.parent;\n          this.id = parameters.id;\n          this.width = this.height = null;\n          this.pageIndex = parameters.parent.pageIndex;\n          this.name = parameters.name;\n          this.div = null;\n          var _this$parent$viewport = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n            width = _this$parent$viewport[0],\n            height = _this$parent$viewport[1];\n          this.x = parameters.x / width;\n          this.y = parameters.y / height;\n          this.rotation = this.parent.viewport.rotation;\n          this.isAttachedToDOM = false;\n        }\n        _createClass(AnnotationEditor, [{\n          key: \"setInBackground\",\n          value: function setInBackground() {\n            this.div.style.zIndex = 0;\n          }\n        }, {\n          key: \"setInForeground\",\n          value: function setInForeground() {\n            this.div.style.zIndex = _classPrivateFieldGet(_zIndex, this);\n          }\n        }, {\n          key: \"focusin\",\n          value: function focusin(event) {\n            if (!_classPrivateFieldGet(_hasBeenSelected, this)) {\n              this.parent.setSelected(this);\n            } else {\n              _classPrivateFieldSet(_hasBeenSelected, this, false);\n            }\n          }\n        }, {\n          key: \"focusout\",\n          value: function focusout(event) {\n            if (!this.isAttachedToDOM) {\n              return;\n            }\n            var target = event.relatedTarget;\n            if (target !== null && target !== void 0 && target.closest(\"#\".concat(this.id))) {\n              return;\n            }\n            event.preventDefault();\n            if (!this.parent.isMultipleSelection) {\n              this.commitOrRemove();\n            }\n          }\n        }, {\n          key: \"commitOrRemove\",\n          value: function commitOrRemove() {\n            if (this.isEmpty()) {\n              this.remove();\n            } else {\n              this.commit();\n            }\n          }\n        }, {\n          key: \"commit\",\n          value: function commit() {\n            this.parent.addToAnnotationStorage(this);\n          }\n        }, {\n          key: \"dragstart\",\n          value: function dragstart(event) {\n            var rect = this.parent.div.getBoundingClientRect();\n            this.startX = event.clientX - rect.x;\n            this.startY = event.clientY - rect.y;\n            event.dataTransfer.setData(\"text/plain\", this.id);\n            event.dataTransfer.effectAllowed = \"move\";\n          }\n        }, {\n          key: \"setAt\",\n          value: function setAt(x, y, tx, ty) {\n            var _this$parent$viewport2 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n              width = _this$parent$viewport2[0],\n              height = _this$parent$viewport2[1];\n            var _this$screenToPageTra = this.screenToPageTranslation(tx, ty);\n            var _this$screenToPageTra2 = _slicedToArray(_this$screenToPageTra, 2);\n            tx = _this$screenToPageTra2[0];\n            ty = _this$screenToPageTra2[1];\n            this.x = (x + tx) / width;\n            this.y = (y + ty) / height;\n            this.div.style.left = \"\".concat(100 * this.x, \"%\");\n            this.div.style.top = \"\".concat(100 * this.y, \"%\");\n          }\n        }, {\n          key: \"translate\",\n          value: function translate(x, y) {\n            var _this$parent$viewport3 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n              width = _this$parent$viewport3[0],\n              height = _this$parent$viewport3[1];\n            var _this$screenToPageTra3 = this.screenToPageTranslation(x, y);\n            var _this$screenToPageTra4 = _slicedToArray(_this$screenToPageTra3, 2);\n            x = _this$screenToPageTra4[0];\n            y = _this$screenToPageTra4[1];\n            this.x += x / width;\n            this.y += y / height;\n            this.div.style.left = \"\".concat(100 * this.x, \"%\");\n            this.div.style.top = \"\".concat(100 * this.y, \"%\");\n          }\n        }, {\n          key: \"screenToPageTranslation\",\n          value: function screenToPageTranslation(x, y) {\n            var rotation = this.parent.viewport.rotation;\n            switch (rotation) {\n              case 90:\n                return [y, -x];\n              case 180:\n                return [-x, -y];\n              case 270:\n                return [-y, x];\n              default:\n                return [x, y];\n            }\n          }\n        }, {\n          key: \"setDims\",\n          value: function setDims(width, height) {\n            var _this$parent$viewport4 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n              parentWidth = _this$parent$viewport4[0],\n              parentHeight = _this$parent$viewport4[1];\n            this.div.style.width = \"\".concat(100 * width / parentWidth, \"%\");\n            this.div.style.height = \"\".concat(100 * height / parentHeight, \"%\");\n          }\n        }, {\n          key: \"getInitialTranslation\",\n          value: function getInitialTranslation() {\n            return [0, 0];\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            this.div = document.createElement(\"div\");\n            this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n            this.div.className = this.name;\n            this.div.setAttribute(\"id\", this.id);\n            this.div.setAttribute(\"tabIndex\", 0);\n            this.setInForeground();\n            this.div.addEventListener(\"focusin\", _classPrivateFieldGet(_boundFocusin, this));\n            this.div.addEventListener(\"focusout\", _classPrivateFieldGet(_boundFocusout, this));\n            var _this$getInitialTrans = this.getInitialTranslation(),\n              _this$getInitialTrans2 = _slicedToArray(_this$getInitialTrans, 2),\n              tx = _this$getInitialTrans2[0],\n              ty = _this$getInitialTrans2[1];\n            this.translate(tx, ty);\n            (0, _tools.bindEvents)(this, this.div, [\"dragstart\", \"pointerdown\"]);\n            return this.div;\n          }\n        }, {\n          key: \"pointerdown\",\n          value: function pointerdown(event) {\n            var isMac = _tools.KeyboardManager.platform.isMac;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              event.preventDefault();\n              return;\n            }\n            if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n              this.parent.toggleSelected(this);\n            } else {\n              this.parent.setSelected(this);\n            }\n            _classPrivateFieldSet(_hasBeenSelected, this, true);\n          }\n        }, {\n          key: \"getRect\",\n          value: function getRect(tx, ty) {\n            var _this$parent$viewport5 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n              parentWidth = _this$parent$viewport5[0],\n              parentHeight = _this$parent$viewport5[1];\n            var _this$parent$pageDime = _slicedToArray(this.parent.pageDimensions, 2),\n              pageWidth = _this$parent$pageDime[0],\n              pageHeight = _this$parent$pageDime[1];\n            var shiftX = pageWidth * tx / parentWidth;\n            var shiftY = pageHeight * ty / parentHeight;\n            var x = this.x * pageWidth;\n            var y = this.y * pageHeight;\n            var width = this.width * pageWidth;\n            var height = this.height * pageHeight;\n            switch (this.rotation) {\n              case 0:\n                return [x + shiftX, pageHeight - y - shiftY - height, x + shiftX + width, pageHeight - y - shiftY];\n              case 90:\n                return [x + shiftY, pageHeight - y + shiftX, x + shiftY + height, pageHeight - y + shiftX + width];\n              case 180:\n                return [x - shiftX - width, pageHeight - y + shiftY, x - shiftX, pageHeight - y + shiftY + height];\n              case 270:\n                return [x - shiftY - height, pageHeight - y - shiftX - width, x - shiftY, pageHeight - y - shiftX];\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n        }, {\n          key: \"getRectInCurrentCoords\",\n          value: function getRectInCurrentCoords(rect, pageHeight) {\n            var _rect = _slicedToArray(rect, 4),\n              x1 = _rect[0],\n              y1 = _rect[1],\n              x2 = _rect[2],\n              y2 = _rect[3];\n            var width = x2 - x1;\n            var height = y2 - y1;\n            switch (this.rotation) {\n              case 0:\n                return [x1, pageHeight - y2, width, height];\n              case 90:\n                return [x1, pageHeight - y1, height, width];\n              case 180:\n                return [x2, pageHeight - y1, width, height];\n              case 270:\n                return [x2, pageHeight - y2, height, width];\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n        }, {\n          key: \"onceAdded\",\n          value: function onceAdded() {}\n        }, {\n          key: \"isEmpty\",\n          value: function isEmpty() {\n            return false;\n          }\n        }, {\n          key: \"enableEditMode\",\n          value: function enableEditMode() {\n            _classPrivateFieldSet(_isInEditMode, this, true);\n          }\n        }, {\n          key: \"disableEditMode\",\n          value: function disableEditMode() {\n            _classPrivateFieldSet(_isInEditMode, this, false);\n          }\n        }, {\n          key: \"isInEditMode\",\n          value: function isInEditMode() {\n            return _classPrivateFieldGet(_isInEditMode, this);\n          }\n        }, {\n          key: \"shouldGetKeyboardEvents\",\n          value: function shouldGetKeyboardEvents() {\n            return false;\n          }\n        }, {\n          key: \"needsToBeRebuilt\",\n          value: function needsToBeRebuilt() {\n            return this.div && !this.isAttachedToDOM;\n          }\n        }, {\n          key: \"rebuild\",\n          value: function rebuild() {\n            var _this$div;\n            (_this$div = this.div) === null || _this$div === void 0 ? void 0 : _this$div.addEventListener(\"focusin\", _classPrivateFieldGet(_boundFocusin, this));\n          }\n        }, {\n          key: \"serialize\",\n          value: function serialize() {\n            (0, _util.unreachable)(\"An editor must be serializable\");\n          }\n        }, {\n          key: \"remove\",\n          value: function remove() {\n            this.div.removeEventListener(\"focusin\", _classPrivateFieldGet(_boundFocusin, this));\n            this.div.removeEventListener(\"focusout\", _classPrivateFieldGet(_boundFocusout, this));\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n            this.parent.remove(this);\n          }\n        }, {\n          key: \"select\",\n          value: function select() {\n            var _this$div2;\n            (_this$div2 = this.div) === null || _this$div2 === void 0 ? void 0 : _this$div2.classList.add(\"selectedEditor\");\n          }\n        }, {\n          key: \"unselect\",\n          value: function unselect() {\n            var _this$div3;\n            (_this$div3 = this.div) === null || _this$div3 === void 0 ? void 0 : _this$div3.classList.remove(\"selectedEditor\");\n          }\n        }, {\n          key: \"updateParams\",\n          value: function updateParams(type, value) {}\n        }, {\n          key: \"disableEditing\",\n          value: function disableEditing() {}\n        }, {\n          key: \"enableEditing\",\n          value: function enableEditing() {}\n        }, {\n          key: \"propertiesToUpdate\",\n          get: function get() {\n            return {};\n          }\n        }, {\n          key: \"contentDiv\",\n          get: function get() {\n            return this.div;\n          }\n        }, {\n          key: \"isEditing\",\n          get: function get() {\n            return _classPrivateFieldGet(_isEditing, this);\n          },\n          set: function set(value) {\n            _classPrivateFieldSet(_isEditing, this, value);\n            if (value) {\n              this.parent.setSelected(this);\n              this.parent.setActiveEditor(this);\n            } else {\n              this.parent.setActiveEditor(null);\n            }\n          }\n        }], [{\n          key: \"_defaultLineColor\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n          }\n        }, {\n          key: \"deserialize\",\n          value: function deserialize(data, parent) {\n            var editor = new this.prototype.constructor({\n              parent: parent,\n              id: parent.getNextId()\n            });\n            editor.rotation = data.rotation;\n            var _parent$pageDimension = _slicedToArray(parent.pageDimensions, 2),\n              pageWidth = _parent$pageDimension[0],\n              pageHeight = _parent$pageDimension[1];\n            var _editor$getRectInCurr = editor.getRectInCurrentCoords(data.rect, pageHeight),\n              _editor$getRectInCurr2 = _slicedToArray(_editor$getRectInCurr, 4),\n              x = _editor$getRectInCurr2[0],\n              y = _editor$getRectInCurr2[1],\n              width = _editor$getRectInCurr2[2],\n              height = _editor$getRectInCurr2[3];\n            editor.x = x / pageWidth;\n            editor.y = y / pageHeight;\n            editor.width = width / pageWidth;\n            editor.height = height / pageHeight;\n            return editor;\n          }\n        }]);\n        return AnnotationEditor;\n      }();\n      _defineProperty(AnnotationEditor, \"_colorManager\", new _tools.ColorManager());\n      _defineProperty(AnnotationEditor, \"_zIndex\", 1);\n      exports.AnnotationEditor = AnnotationEditor;\n\n      /***/\n    }), ( /* 7 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      var _AnnotationEditorUIManager;\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\n      exports.bindEvents = bindEvents;\n      exports.opacityToHex = opacityToHex;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(8);\n      function bindEvents(obj, element, names) {\n        var _iterator21 = _createForOfIteratorHelper(names),\n          _step21;\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var name = _step21.value;\n            element.addEventListener(name, obj[name].bind(obj));\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n      }\n      function opacityToHex(opacity) {\n        return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n      }\n      var _id = /*#__PURE__*/new WeakMap();\n      var IdManager = /*#__PURE__*/function () {\n        function IdManager() {\n          _classCallCheck(this, IdManager);\n          _classPrivateFieldInitSpec(this, _id, 0);\n        }\n        _createClass(IdManager, [{\n          key: \"getId\",\n          value: function getId() {\n            var _this$id, _this$id2;\n            return \"\".concat(_util.AnnotationEditorPrefix).concat((_classPrivateFieldSet(_id, this, (_this$id = _classPrivateFieldGet(_id, this), _this$id2 = _this$id++, _this$id)), _this$id2));\n          }\n        }]);\n        return IdManager;\n      }();\n      var _commands = /*#__PURE__*/new WeakMap();\n      var _locked = /*#__PURE__*/new WeakMap();\n      var _maxSize = /*#__PURE__*/new WeakMap();\n      var _position = /*#__PURE__*/new WeakMap();\n      var CommandManager = /*#__PURE__*/function () {\n        function CommandManager() {\n          var maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;\n          _classCallCheck(this, CommandManager);\n          _classPrivateFieldInitSpec(this, _commands, []);\n          _classPrivateFieldInitSpec(this, _locked, false);\n          _classPrivateFieldInitSpec(this, _maxSize, void 0);\n          _classPrivateFieldInitSpec(this, _position, -1);\n          _classPrivateFieldSet(_maxSize, this, maxSize);\n        }\n        _createClass(CommandManager, [{\n          key: \"add\",\n          value: function add(_ref26) {\n            var cmd = _ref26.cmd,\n              undo = _ref26.undo,\n              mustExec = _ref26.mustExec,\n              _ref26$type = _ref26.type,\n              type = _ref26$type === void 0 ? NaN : _ref26$type,\n              _ref26$overwriteIfSam = _ref26.overwriteIfSameType,\n              overwriteIfSameType = _ref26$overwriteIfSam === void 0 ? false : _ref26$overwriteIfSam,\n              _ref26$keepUndo = _ref26.keepUndo,\n              keepUndo = _ref26$keepUndo === void 0 ? false : _ref26$keepUndo;\n            if (mustExec) {\n              cmd();\n            }\n            if (_classPrivateFieldGet(_locked, this)) {\n              return;\n            }\n            var save = {\n              cmd: cmd,\n              undo: undo,\n              type: type\n            };\n            if (_classPrivateFieldGet(_position, this) === -1) {\n              if (_classPrivateFieldGet(_commands, this).length > 0) {\n                _classPrivateFieldGet(_commands, this).length = 0;\n              }\n              _classPrivateFieldSet(_position, this, 0);\n              _classPrivateFieldGet(_commands, this).push(save);\n              return;\n            }\n            if (overwriteIfSameType && _classPrivateFieldGet(_commands, this)[_classPrivateFieldGet(_position, this)].type === type) {\n              if (keepUndo) {\n                save.undo = _classPrivateFieldGet(_commands, this)[_classPrivateFieldGet(_position, this)].undo;\n              }\n              _classPrivateFieldGet(_commands, this)[_classPrivateFieldGet(_position, this)] = save;\n              return;\n            }\n            var next = _classPrivateFieldGet(_position, this) + 1;\n            if (next === _classPrivateFieldGet(_maxSize, this)) {\n              _classPrivateFieldGet(_commands, this).splice(0, 1);\n            } else {\n              _classPrivateFieldSet(_position, this, next);\n              if (next < _classPrivateFieldGet(_commands, this).length) {\n                _classPrivateFieldGet(_commands, this).splice(next);\n              }\n            }\n            _classPrivateFieldGet(_commands, this).push(save);\n          }\n        }, {\n          key: \"undo\",\n          value: function undo() {\n            if (_classPrivateFieldGet(_position, this) === -1) {\n              return;\n            }\n            _classPrivateFieldSet(_locked, this, true);\n            _classPrivateFieldGet(_commands, this)[_classPrivateFieldGet(_position, this)].undo();\n            _classPrivateFieldSet(_locked, this, false);\n            _classPrivateFieldSet(_position, this, _classPrivateFieldGet(_position, this) - 1);\n          }\n        }, {\n          key: \"redo\",\n          value: function redo() {\n            if (_classPrivateFieldGet(_position, this) < _classPrivateFieldGet(_commands, this).length - 1) {\n              _classPrivateFieldSet(_position, this, _classPrivateFieldGet(_position, this) + 1);\n              _classPrivateFieldSet(_locked, this, true);\n              _classPrivateFieldGet(_commands, this)[_classPrivateFieldGet(_position, this)].cmd();\n              _classPrivateFieldSet(_locked, this, false);\n            }\n          }\n        }, {\n          key: \"hasSomethingToUndo\",\n          value: function hasSomethingToUndo() {\n            return _classPrivateFieldGet(_position, this) !== -1;\n          }\n        }, {\n          key: \"hasSomethingToRedo\",\n          value: function hasSomethingToRedo() {\n            return _classPrivateFieldGet(_position, this) < _classPrivateFieldGet(_commands, this).length - 1;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            _classPrivateFieldSet(_commands, this, null);\n          }\n        }]);\n        return CommandManager;\n      }();\n      exports.CommandManager = CommandManager;\n      var _KeyboardManager_brand = /*#__PURE__*/new WeakSet();\n      var KeyboardManager = /*#__PURE__*/function () {\n        function KeyboardManager(callbacks) {\n          _classCallCheck(this, KeyboardManager);\n          _classPrivateMethodInitSpec(this, _KeyboardManager_brand);\n          this.buffer = [];\n          this.callbacks = new Map();\n          this.allKeys = new Set();\n          var isMac = KeyboardManager.platform.isMac;\n          var _iterator22 = _createForOfIteratorHelper(callbacks),\n            _step22;\n          try {\n            for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n              var _step22$value = _slicedToArray(_step22.value, 2),\n                keys = _step22$value[0],\n                callback = _step22$value[1];\n              var _iterator23 = _createForOfIteratorHelper(keys),\n                _step23;\n              try {\n                for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                  var key = _step23.value;\n                  var isMacKey = key.startsWith(\"mac+\");\n                  if (isMac && isMacKey) {\n                    this.callbacks.set(key.slice(4), callback);\n                    this.allKeys.add(key.split(\"+\").at(-1));\n                  } else if (!isMac && !isMacKey) {\n                    this.callbacks.set(key, callback);\n                    this.allKeys.add(key.split(\"+\").at(-1));\n                  }\n                }\n              } catch (err) {\n                _iterator23.e(err);\n              } finally {\n                _iterator23.f();\n              }\n            }\n          } catch (err) {\n            _iterator22.e(err);\n          } finally {\n            _iterator22.f();\n          }\n        }\n        _createClass(KeyboardManager, [{\n          key: \"exec\",\n          value: function exec(self, event) {\n            if (!this.allKeys.has(event.key)) {\n              return;\n            }\n            var callback = this.callbacks.get(_assertClassBrand(_KeyboardManager_brand, this, _serialize).call(this, event));\n            if (!callback) {\n              return;\n            }\n            callback.bind(self)();\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        }], [{\n          key: \"platform\",\n          get: function get() {\n            var platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n            return (0, _util.shadow)(this, \"platform\", {\n              isWin: platform.includes(\"Win\"),\n              isMac: platform.includes(\"Mac\")\n            });\n          }\n        }]);\n        return KeyboardManager;\n      }();\n      function _serialize(event) {\n        if (event.altKey) {\n          this.buffer.push(\"alt\");\n        }\n        if (event.ctrlKey) {\n          this.buffer.push(\"ctrl\");\n        }\n        if (event.metaKey) {\n          this.buffer.push(\"meta\");\n        }\n        if (event.shiftKey) {\n          this.buffer.push(\"shift\");\n        }\n        this.buffer.push(event.key);\n        var str = this.buffer.join(\"+\");\n        this.buffer.length = 0;\n        return str;\n      }\n      exports.KeyboardManager = KeyboardManager;\n      var _elements = /*#__PURE__*/new WeakMap();\n      var ClipboardManager = /*#__PURE__*/function () {\n        function ClipboardManager() {\n          _classCallCheck(this, ClipboardManager);\n          _classPrivateFieldInitSpec(this, _elements, null);\n        }\n        _createClass(ClipboardManager, [{\n          key: \"copy\",\n          value: function copy(element) {\n            if (!element) {\n              return;\n            }\n            if (Array.isArray(element)) {\n              _classPrivateFieldSet(_elements, this, element.map(function (el) {\n                return el.serialize();\n              }));\n            } else {\n              _classPrivateFieldSet(_elements, this, [element.serialize()]);\n            }\n            _classPrivateFieldSet(_elements, this, _classPrivateFieldGet(_elements, this).filter(function (el) {\n              return !!el;\n            }));\n            if (_classPrivateFieldGet(_elements, this).length === 0) {\n              _classPrivateFieldSet(_elements, this, null);\n            }\n          }\n        }, {\n          key: \"paste\",\n          value: function paste() {\n            return _classPrivateFieldGet(_elements, this);\n          }\n        }, {\n          key: \"isEmpty\",\n          value: function isEmpty() {\n            return _classPrivateFieldGet(_elements, this) === null;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            _classPrivateFieldSet(_elements, this, null);\n          }\n        }]);\n        return ClipboardManager;\n      }();\n      var ColorManager = /*#__PURE__*/function () {\n        function ColorManager() {\n          _classCallCheck(this, ColorManager);\n        }\n        _createClass(ColorManager, [{\n          key: \"_colors\",\n          get: function get() {\n            var colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n            (0, _display_utils.getColorValues)(colors);\n            return (0, _util.shadow)(this, \"_colors\", colors);\n          }\n        }, {\n          key: \"convert\",\n          value: function convert(color) {\n            var rgb = (0, _display_utils.getRGB)(color);\n            if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n              return rgb;\n            }\n            var _iterator24 = _createForOfIteratorHelper(this._colors),\n              _step24;\n            try {\n              for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                var _step24$value = _slicedToArray(_step24.value, 2),\n                  name = _step24$value[0],\n                  RGB = _step24$value[1];\n                if (RGB.every(function (x, i) {\n                  return x === rgb[i];\n                })) {\n                  return ColorManager._colorsMapping.get(name);\n                }\n              }\n            } catch (err) {\n              _iterator24.e(err);\n            } finally {\n              _iterator24.f();\n            }\n            return rgb;\n          }\n        }, {\n          key: \"getHexCode\",\n          value: function getHexCode(name) {\n            var _util$Util;\n            var rgb = this._colors.get(name);\n            if (!rgb) {\n              return name;\n            }\n            return (_util$Util = _util.Util).makeHexColor.apply(_util$Util, _toConsumableArray(rgb));\n          }\n        }]);\n        return ColorManager;\n      }();\n      _defineProperty(ColorManager, \"_colorsMapping\", new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]));\n      exports.ColorManager = ColorManager;\n      var _activeEditor = /*#__PURE__*/new WeakMap();\n      var _allEditors = /*#__PURE__*/new WeakMap();\n      var _allLayers = /*#__PURE__*/new WeakMap();\n      var _clipboardManager = /*#__PURE__*/new WeakMap();\n      var _commandManager = /*#__PURE__*/new WeakMap();\n      var _currentPageIndex = /*#__PURE__*/new WeakMap();\n      var _editorTypes = /*#__PURE__*/new WeakMap();\n      var _eventBus = /*#__PURE__*/new WeakMap();\n      var _idManager = /*#__PURE__*/new WeakMap();\n      var _isEnabled = /*#__PURE__*/new WeakMap();\n      var _mode = /*#__PURE__*/new WeakMap();\n      var _selectedEditors = /*#__PURE__*/new WeakMap();\n      var _boundKeydown = /*#__PURE__*/new WeakMap();\n      var _boundOnEditingAction = /*#__PURE__*/new WeakMap();\n      var _boundOnPageChanging = /*#__PURE__*/new WeakMap();\n      var _previousStates = /*#__PURE__*/new WeakMap();\n      var _container = /*#__PURE__*/new WeakMap();\n      var _AnnotationEditorUIManager_brand = /*#__PURE__*/new WeakSet();\n      var AnnotationEditorUIManager = /*#__PURE__*/function () {\n        function AnnotationEditorUIManager(container, eventBus) {\n          _classCallCheck(this, AnnotationEditorUIManager);\n          _classPrivateMethodInitSpec(this, _AnnotationEditorUIManager_brand);\n          _classPrivateFieldInitSpec(this, _activeEditor, null);\n          _classPrivateFieldInitSpec(this, _allEditors, new Map());\n          _classPrivateFieldInitSpec(this, _allLayers, new Map());\n          _classPrivateFieldInitSpec(this, _clipboardManager, new ClipboardManager());\n          _classPrivateFieldInitSpec(this, _commandManager, new CommandManager());\n          _classPrivateFieldInitSpec(this, _currentPageIndex, 0);\n          _classPrivateFieldInitSpec(this, _editorTypes, null);\n          _classPrivateFieldInitSpec(this, _eventBus, null);\n          _classPrivateFieldInitSpec(this, _idManager, new IdManager());\n          _classPrivateFieldInitSpec(this, _isEnabled, false);\n          _classPrivateFieldInitSpec(this, _mode, _util.AnnotationEditorType.NONE);\n          _classPrivateFieldInitSpec(this, _selectedEditors, new Set());\n          _classPrivateFieldInitSpec(this, _boundKeydown, this.keydown.bind(this));\n          _classPrivateFieldInitSpec(this, _boundOnEditingAction, this.onEditingAction.bind(this));\n          _classPrivateFieldInitSpec(this, _boundOnPageChanging, this.onPageChanging.bind(this));\n          _classPrivateFieldInitSpec(this, _previousStates, {\n            isEditing: false,\n            isEmpty: true,\n            hasEmptyClipboard: true,\n            hasSomethingToUndo: false,\n            hasSomethingToRedo: false,\n            hasSelectedEditor: false\n          });\n          _classPrivateFieldInitSpec(this, _container, null);\n          _classPrivateFieldSet(_container, this, container);\n          _classPrivateFieldSet(_eventBus, this, eventBus);\n          _classPrivateFieldGet(_eventBus, this)._on(\"editingaction\", _classPrivateFieldGet(_boundOnEditingAction, this));\n          _classPrivateFieldGet(_eventBus, this)._on(\"pagechanging\", _classPrivateFieldGet(_boundOnPageChanging, this));\n        }\n        _createClass(AnnotationEditorUIManager, [{\n          key: \"destroy\",\n          value: function destroy() {\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _removeKeyboardManager).call(this);\n            _classPrivateFieldGet(_eventBus, this)._off(\"editingaction\", _classPrivateFieldGet(_boundOnEditingAction, this));\n            _classPrivateFieldGet(_eventBus, this)._off(\"pagechanging\", _classPrivateFieldGet(_boundOnPageChanging, this));\n            var _iterator25 = _createForOfIteratorHelper(_classPrivateFieldGet(_allLayers, this).values()),\n              _step25;\n            try {\n              for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n                var layer = _step25.value;\n                layer.destroy();\n              }\n            } catch (err) {\n              _iterator25.e(err);\n            } finally {\n              _iterator25.f();\n            }\n            _classPrivateFieldGet(_allLayers, this).clear();\n            _classPrivateFieldGet(_allEditors, this).clear();\n            _classPrivateFieldSet(_activeEditor, this, null);\n            _classPrivateFieldGet(_selectedEditors, this).clear();\n            _classPrivateFieldGet(_clipboardManager, this).destroy();\n            _classPrivateFieldGet(_commandManager, this).destroy();\n          }\n        }, {\n          key: \"onPageChanging\",\n          value: function onPageChanging(_ref27) {\n            var pageNumber = _ref27.pageNumber;\n            _classPrivateFieldSet(_currentPageIndex, this, pageNumber - 1);\n          }\n        }, {\n          key: \"focusMainContainer\",\n          value: function focusMainContainer() {\n            _classPrivateFieldGet(_container, this).focus();\n          }\n        }, {\n          key: \"keydown\",\n          value: function keydown(event) {\n            var _this$getActive;\n            if (!((_this$getActive = this.getActive()) !== null && _this$getActive !== void 0 && _this$getActive.shouldGetKeyboardEvents())) {\n              AnnotationEditorUIManager._keyboardManager.exec(this, event);\n            }\n          }\n        }, {\n          key: \"onEditingAction\",\n          value: function onEditingAction(details) {\n            if ([\"undo\", \"redo\", \"cut\", \"copy\", \"paste\", \"delete\", \"selectAll\"].includes(details.name)) {\n              this[details.name]();\n            }\n          }\n        }, {\n          key: \"setEditingState\",\n          value: function setEditingState(isEditing) {\n            if (isEditing) {\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _addKeyboardManager).call(this);\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n                isEditing: _classPrivateFieldGet(_mode, this) !== _util.AnnotationEditorType.NONE,\n                isEmpty: _assertClassBrand(_AnnotationEditorUIManager_brand, this, _isEmpty).call(this),\n                hasSomethingToUndo: _classPrivateFieldGet(_commandManager, this).hasSomethingToUndo(),\n                hasSomethingToRedo: _classPrivateFieldGet(_commandManager, this).hasSomethingToRedo(),\n                hasSelectedEditor: false,\n                hasEmptyClipboard: _classPrivateFieldGet(_clipboardManager, this).isEmpty()\n              });\n            } else {\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _removeKeyboardManager).call(this);\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n                isEditing: false\n              });\n            }\n          }\n        }, {\n          key: \"registerEditorTypes\",\n          value: function registerEditorTypes(types) {\n            _classPrivateFieldSet(_editorTypes, this, types);\n            var _iterator26 = _createForOfIteratorHelper(_classPrivateFieldGet(_editorTypes, this)),\n              _step26;\n            try {\n              for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n                var editorType = _step26.value;\n                _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateUI).call(this, editorType.defaultPropertiesToUpdate);\n              }\n            } catch (err) {\n              _iterator26.e(err);\n            } finally {\n              _iterator26.f();\n            }\n          }\n        }, {\n          key: \"getId\",\n          value: function getId() {\n            return _classPrivateFieldGet(_idManager, this).getId();\n          }\n        }, {\n          key: \"addLayer\",\n          value: function addLayer(layer) {\n            _classPrivateFieldGet(_allLayers, this).set(layer.pageIndex, layer);\n            if (_classPrivateFieldGet(_isEnabled, this)) {\n              layer.enable();\n            } else {\n              layer.disable();\n            }\n          }\n        }, {\n          key: \"removeLayer\",\n          value: function removeLayer(layer) {\n            _classPrivateFieldGet(_allLayers, this).delete(layer.pageIndex);\n          }\n        }, {\n          key: \"updateMode\",\n          value: function updateMode(mode) {\n            _classPrivateFieldSet(_mode, this, mode);\n            if (mode === _util.AnnotationEditorType.NONE) {\n              this.setEditingState(false);\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _disableAll).call(this);\n            } else {\n              this.setEditingState(true);\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _enableAll).call(this);\n              var _iterator27 = _createForOfIteratorHelper(_classPrivateFieldGet(_allLayers, this).values()),\n                _step27;\n              try {\n                for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n                  var layer = _step27.value;\n                  layer.updateMode(mode);\n                }\n              } catch (err) {\n                _iterator27.e(err);\n              } finally {\n                _iterator27.f();\n              }\n            }\n          }\n        }, {\n          key: \"updateToolbar\",\n          value: function updateToolbar(mode) {\n            if (mode === _classPrivateFieldGet(_mode, this)) {\n              return;\n            }\n            _classPrivateFieldGet(_eventBus, this).dispatch(\"switchannotationeditormode\", {\n              source: this,\n              mode: mode\n            });\n          }\n        }, {\n          key: \"updateParams\",\n          value: function updateParams(type, value) {\n            var _iterator28 = _createForOfIteratorHelper(_classPrivateFieldGet(_selectedEditors, this)),\n              _step28;\n            try {\n              for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n                var editor = _step28.value;\n                editor.updateParams(type, value);\n              }\n            } catch (err) {\n              _iterator28.e(err);\n            } finally {\n              _iterator28.f();\n            }\n            var _iterator29 = _createForOfIteratorHelper(_classPrivateFieldGet(_editorTypes, this)),\n              _step29;\n            try {\n              for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n                var editorType = _step29.value;\n                editorType.updateDefaultParams(type, value);\n              }\n            } catch (err) {\n              _iterator29.e(err);\n            } finally {\n              _iterator29.f();\n            }\n          }\n        }, {\n          key: \"getEditors\",\n          value: function getEditors(pageIndex) {\n            var editors = [];\n            var _iterator30 = _createForOfIteratorHelper(_classPrivateFieldGet(_allEditors, this).values()),\n              _step30;\n            try {\n              for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n                var editor = _step30.value;\n                if (editor.pageIndex === pageIndex) {\n                  editors.push(editor);\n                }\n              }\n            } catch (err) {\n              _iterator30.e(err);\n            } finally {\n              _iterator30.f();\n            }\n            return editors;\n          }\n        }, {\n          key: \"getEditor\",\n          value: function getEditor(id) {\n            return _classPrivateFieldGet(_allEditors, this).get(id);\n          }\n        }, {\n          key: \"addEditor\",\n          value: function addEditor(editor) {\n            _classPrivateFieldGet(_allEditors, this).set(editor.id, editor);\n          }\n        }, {\n          key: \"removeEditor\",\n          value: function removeEditor(editor) {\n            _classPrivateFieldGet(_allEditors, this).delete(editor.id);\n            this.unselect(editor);\n          }\n        }, {\n          key: \"setActiveEditor\",\n          value: function setActiveEditor(editor) {\n            if (_classPrivateFieldGet(_activeEditor, this) === editor) {\n              return;\n            }\n            _classPrivateFieldSet(_activeEditor, this, editor);\n            if (editor) {\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            }\n          }\n        }, {\n          key: \"toggleSelected\",\n          value: function toggleSelected(editor) {\n            if (_classPrivateFieldGet(_selectedEditors, this).has(editor)) {\n              _classPrivateFieldGet(_selectedEditors, this).delete(editor);\n              editor.unselect();\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n                hasSelectedEditor: this.hasSelection\n              });\n              return;\n            }\n            _classPrivateFieldGet(_selectedEditors, this).add(editor);\n            editor.select();\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSelectedEditor: true\n            });\n          }\n        }, {\n          key: \"setSelected\",\n          value: function setSelected(editor) {\n            var _iterator31 = _createForOfIteratorHelper(_classPrivateFieldGet(_selectedEditors, this)),\n              _step31;\n            try {\n              for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n                var ed = _step31.value;\n                if (ed !== editor) {\n                  ed.unselect();\n                }\n              }\n            } catch (err) {\n              _iterator31.e(err);\n            } finally {\n              _iterator31.f();\n            }\n            _classPrivateFieldGet(_selectedEditors, this).clear();\n            _classPrivateFieldGet(_selectedEditors, this).add(editor);\n            editor.select();\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSelectedEditor: true\n            });\n          }\n        }, {\n          key: \"isSelected\",\n          value: function isSelected(editor) {\n            return _classPrivateFieldGet(_selectedEditors, this).has(editor);\n          }\n        }, {\n          key: \"unselect\",\n          value: function unselect(editor) {\n            editor.unselect();\n            _classPrivateFieldGet(_selectedEditors, this).delete(editor);\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSelectedEditor: this.hasSelection\n            });\n          }\n        }, {\n          key: \"hasSelection\",\n          get: function get() {\n            return _classPrivateFieldGet(_selectedEditors, this).size !== 0;\n          }\n        }, {\n          key: \"undo\",\n          value: function undo() {\n            _classPrivateFieldGet(_commandManager, this).undo();\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSomethingToUndo: _classPrivateFieldGet(_commandManager, this).hasSomethingToUndo(),\n              hasSomethingToRedo: true,\n              isEmpty: _assertClassBrand(_AnnotationEditorUIManager_brand, this, _isEmpty).call(this)\n            });\n          }\n        }, {\n          key: \"redo\",\n          value: function redo() {\n            _classPrivateFieldGet(_commandManager, this).redo();\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: _classPrivateFieldGet(_commandManager, this).hasSomethingToRedo(),\n              isEmpty: _assertClassBrand(_AnnotationEditorUIManager_brand, this, _isEmpty).call(this)\n            });\n          }\n        }, {\n          key: \"addCommands\",\n          value: function addCommands(params) {\n            _classPrivateFieldGet(_commandManager, this).add(params);\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: false,\n              isEmpty: _assertClassBrand(_AnnotationEditorUIManager_brand, this, _isEmpty).call(this)\n            });\n          }\n        }, {\n          key: \"delete\",\n          value: function _delete() {\n            var _this22 = this;\n            if (_classPrivateFieldGet(_activeEditor, this)) {\n              _classPrivateFieldGet(_activeEditor, this).commitOrRemove();\n            }\n            if (!this.hasSelection) {\n              return;\n            }\n            var editors = _toConsumableArray(_classPrivateFieldGet(_selectedEditors, this));\n            var cmd = function cmd() {\n              var _iterator32 = _createForOfIteratorHelper(editors),\n                _step32;\n              try {\n                for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n                  var editor = _step32.value;\n                  editor.remove();\n                }\n              } catch (err) {\n                _iterator32.e(err);\n              } finally {\n                _iterator32.f();\n              }\n            };\n            var undo = function undo() {\n              var _iterator33 = _createForOfIteratorHelper(editors),\n                _step33;\n              try {\n                for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n                  var editor = _step33.value;\n                  _assertClassBrand(_AnnotationEditorUIManager_brand, _this22, _addEditorToLayer).call(_this22, editor);\n                }\n              } catch (err) {\n                _iterator33.e(err);\n              } finally {\n                _iterator33.f();\n              }\n            };\n            this.addCommands({\n              cmd: cmd,\n              undo: undo,\n              mustExec: true\n            });\n          }\n        }, {\n          key: \"copy\",\n          value: function copy() {\n            if (_classPrivateFieldGet(_activeEditor, this)) {\n              _classPrivateFieldGet(_activeEditor, this).commitOrRemove();\n            }\n            if (this.hasSelection) {\n              var editors = [];\n              var _iterator34 = _createForOfIteratorHelper(_classPrivateFieldGet(_selectedEditors, this)),\n                _step34;\n              try {\n                for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n                  var editor = _step34.value;\n                  if (!editor.isEmpty()) {\n                    editors.push(editor);\n                  }\n                }\n              } catch (err) {\n                _iterator34.e(err);\n              } finally {\n                _iterator34.f();\n              }\n              if (editors.length === 0) {\n                return;\n              }\n              _classPrivateFieldGet(_clipboardManager, this).copy(editors);\n              _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n                hasEmptyClipboard: false\n              });\n            }\n          }\n        }, {\n          key: \"cut\",\n          value: function cut() {\n            this.copy();\n            this.delete();\n          }\n        }, {\n          key: \"paste\",\n          value: function paste() {\n            var _this23 = this;\n            if (_classPrivateFieldGet(_clipboardManager, this).isEmpty()) {\n              return;\n            }\n            this.unselectAll();\n            var layer = _classPrivateFieldGet(_allLayers, this).get(_classPrivateFieldGet(_currentPageIndex, this));\n            var newEditors = _classPrivateFieldGet(_clipboardManager, this).paste().map(function (data) {\n              return layer.deserialize(data);\n            });\n            var cmd = function cmd() {\n              var _iterator35 = _createForOfIteratorHelper(newEditors),\n                _step35;\n              try {\n                for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n                  var editor = _step35.value;\n                  _assertClassBrand(_AnnotationEditorUIManager_brand, _this23, _addEditorToLayer).call(_this23, editor);\n                }\n              } catch (err) {\n                _iterator35.e(err);\n              } finally {\n                _iterator35.f();\n              }\n              _assertClassBrand(_AnnotationEditorUIManager_brand, _this23, _selectEditors).call(_this23, newEditors);\n            };\n            var undo = function undo() {\n              var _iterator36 = _createForOfIteratorHelper(newEditors),\n                _step36;\n              try {\n                for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n                  var editor = _step36.value;\n                  editor.remove();\n                }\n              } catch (err) {\n                _iterator36.e(err);\n              } finally {\n                _iterator36.f();\n              }\n            };\n            this.addCommands({\n              cmd: cmd,\n              undo: undo,\n              mustExec: true\n            });\n          }\n        }, {\n          key: \"selectAll\",\n          value: function selectAll() {\n            var _iterator37 = _createForOfIteratorHelper(_classPrivateFieldGet(_selectedEditors, this)),\n              _step37;\n            try {\n              for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n                var editor = _step37.value;\n                editor.commit();\n              }\n            } catch (err) {\n              _iterator37.e(err);\n            } finally {\n              _iterator37.f();\n            }\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _selectEditors).call(this, _classPrivateFieldGet(_allEditors, this).values());\n          }\n        }, {\n          key: \"unselectAll\",\n          value: function unselectAll() {\n            if (_classPrivateFieldGet(_activeEditor, this)) {\n              _classPrivateFieldGet(_activeEditor, this).commitOrRemove();\n              return;\n            }\n            if (_assertClassBrand(_AnnotationEditorUIManager_brand, this, _selectEditors).size === 0) {\n              return;\n            }\n            var _iterator38 = _createForOfIteratorHelper(_classPrivateFieldGet(_selectedEditors, this)),\n              _step38;\n            try {\n              for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n                var editor = _step38.value;\n                editor.unselect();\n              }\n            } catch (err) {\n              _iterator38.e(err);\n            } finally {\n              _iterator38.f();\n            }\n            _classPrivateFieldGet(_selectedEditors, this).clear();\n            _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n              hasSelectedEditor: false\n            });\n          }\n        }, {\n          key: \"isActive\",\n          value: function isActive(editor) {\n            return _classPrivateFieldGet(_activeEditor, this) === editor;\n          }\n        }, {\n          key: \"getActive\",\n          value: function getActive() {\n            return _classPrivateFieldGet(_activeEditor, this);\n          }\n        }, {\n          key: \"getMode\",\n          value: function getMode() {\n            return _classPrivateFieldGet(_mode, this);\n          }\n        }]);\n        return AnnotationEditorUIManager;\n      }();\n      _AnnotationEditorUIManager = AnnotationEditorUIManager;\n      function _addKeyboardManager() {\n        _classPrivateFieldGet(_container, this).addEventListener(\"keydown\", _classPrivateFieldGet(_boundKeydown, this));\n      }\n      function _removeKeyboardManager() {\n        _classPrivateFieldGet(_container, this).removeEventListener(\"keydown\", _classPrivateFieldGet(_boundKeydown, this));\n      }\n      function _dispatchUpdateStates(details) {\n        var _this24 = this;\n        var hasChanged = Object.entries(details).some(function (_ref28) {\n          var _ref29 = _slicedToArray(_ref28, 2),\n            key = _ref29[0],\n            value = _ref29[1];\n          return _classPrivateFieldGet(_previousStates, _this24)[key] !== value;\n        });\n        if (hasChanged) {\n          _classPrivateFieldGet(_eventBus, this).dispatch(\"annotationeditorstateschanged\", {\n            source: this,\n            details: Object.assign(_classPrivateFieldGet(_previousStates, this), details)\n          });\n        }\n      }\n      function _dispatchUpdateUI(details) {\n        _classPrivateFieldGet(_eventBus, this).dispatch(\"annotationeditorparamschanged\", {\n          source: this,\n          details: details\n        });\n      }\n      function _enableAll() {\n        if (!_classPrivateFieldGet(_isEnabled, this)) {\n          _classPrivateFieldSet(_isEnabled, this, true);\n          var _iterator39 = _createForOfIteratorHelper(_classPrivateFieldGet(_allLayers, this).values()),\n            _step39;\n          try {\n            for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n              var layer = _step39.value;\n              layer.enable();\n            }\n          } catch (err) {\n            _iterator39.e(err);\n          } finally {\n            _iterator39.f();\n          }\n        }\n      }\n      function _disableAll() {\n        this.unselectAll();\n        if (_classPrivateFieldGet(_isEnabled, this)) {\n          _classPrivateFieldSet(_isEnabled, this, false);\n          var _iterator40 = _createForOfIteratorHelper(_classPrivateFieldGet(_allLayers, this).values()),\n            _step40;\n          try {\n            for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n              var layer = _step40.value;\n              layer.disable();\n            }\n          } catch (err) {\n            _iterator40.e(err);\n          } finally {\n            _iterator40.f();\n          }\n        }\n      }\n      function _addEditorToLayer(editor) {\n        var layer = _classPrivateFieldGet(_allLayers, this).get(editor.pageIndex);\n        if (layer) {\n          layer.addOrRebuild(editor);\n        } else {\n          this.addEditor(editor);\n        }\n      }\n      function _isEmpty() {\n        if (_classPrivateFieldGet(_allEditors, this).size === 0) {\n          return true;\n        }\n        if (_classPrivateFieldGet(_allEditors, this).size === 1) {\n          var _iterator41 = _createForOfIteratorHelper(_classPrivateFieldGet(_allEditors, this).values()),\n            _step41;\n          try {\n            for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n              var editor = _step41.value;\n              return editor.isEmpty();\n            }\n          } catch (err) {\n            _iterator41.e(err);\n          } finally {\n            _iterator41.f();\n          }\n        }\n        return false;\n      }\n      function _selectEditors(editors) {\n        _classPrivateFieldGet(_selectedEditors, this).clear();\n        var _iterator42 = _createForOfIteratorHelper(editors),\n          _step42;\n        try {\n          for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n            var editor = _step42.value;\n            if (editor.isEmpty()) {\n              continue;\n            }\n            _classPrivateFieldGet(_selectedEditors, this).add(editor);\n            editor.select();\n          }\n        } catch (err) {\n          _iterator42.e(err);\n        } finally {\n          _iterator42.f();\n        }\n        _assertClassBrand(_AnnotationEditorUIManager_brand, this, _dispatchUpdateStates).call(this, {\n          hasSelectedEditor: true\n        });\n      }\n      _defineProperty(AnnotationEditorUIManager, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], _AnnotationEditorUIManager.prototype.selectAll], [[\"ctrl+c\", \"mac+meta+c\"], _AnnotationEditorUIManager.prototype.copy], [[\"ctrl+v\", \"mac+meta+v\"], _AnnotationEditorUIManager.prototype.paste], [[\"ctrl+x\", \"mac+meta+x\"], _AnnotationEditorUIManager.prototype.cut], [[\"ctrl+z\", \"mac+meta+z\"], _AnnotationEditorUIManager.prototype.undo], [[\"ctrl+y\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], _AnnotationEditorUIManager.prototype.redo], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\"], _AnnotationEditorUIManager.prototype.delete], [[\"Escape\", \"mac+Escape\"], _AnnotationEditorUIManager.prototype.unselectAll]]));\n      exports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n\n      /***/\n    }), ( /* 8 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      var _PixelsPerInch;\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = exports.AnnotationPrefix = void 0;\n      exports.deprecated = deprecated;\n      exports.getColorValues = getColorValues;\n      exports.getCurrentTransform = getCurrentTransform;\n      exports.getCurrentTransformInverse = getCurrentTransformInverse;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n      exports.getRGB = getRGB;\n      exports.getXfaPageViewport = getXfaPageViewport;\n      exports.isDataScheme = isDataScheme;\n      exports.isPdfFile = isPdfFile;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      var _base_factory = __w_pdfjs_require__(9);\n      var _util = __w_pdfjs_require__(1);\n      var SVG_NS = \"http://www.w3.org/2000/svg\";\n      var AnnotationPrefix = \"pdfjs_internal_id_\";\n      exports.AnnotationPrefix = AnnotationPrefix;\n      var PixelsPerInch = /*#__PURE__*/_createClass(function PixelsPerInch() {\n        _classCallCheck(this, PixelsPerInch);\n      });\n      _PixelsPerInch = PixelsPerInch;\n      _defineProperty(PixelsPerInch, \"CSS\", 96.0);\n      _defineProperty(PixelsPerInch, \"PDF\", 72.0);\n      _defineProperty(PixelsPerInch, \"PDF_TO_CSS_UNITS\", _PixelsPerInch.CSS / _PixelsPerInch.PDF);\n      exports.PixelsPerInch = PixelsPerInch;\n      var DOMCanvasFactory = /*#__PURE__*/function (_base_factory$BaseCan) {\n        _inherits(DOMCanvasFactory, _base_factory$BaseCan);\n        function DOMCanvasFactory() {\n          var _this25;\n          var _ref30 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref30$ownerDocument = _ref30.ownerDocument,\n            ownerDocument = _ref30$ownerDocument === void 0 ? globalThis.document : _ref30$ownerDocument;\n          _classCallCheck(this, DOMCanvasFactory);\n          _this25 = _callSuper(this, DOMCanvasFactory);\n          _this25._document = ownerDocument;\n          return _this25;\n        }\n        _createClass(DOMCanvasFactory, [{\n          key: \"_createCanvas\",\n          value: function _createCanvas(width, height) {\n            var canvas = this._document.createElement(\"canvas\");\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n          }\n        }]);\n        return DOMCanvasFactory;\n      }(_base_factory.BaseCanvasFactory);\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n      function fetchData(_x5) {\n        return _fetchData.apply(this, arguments);\n      }\n      function _fetchData() {\n        _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(url) {\n          var asTypedArray,\n            response,\n            _args8 = arguments;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                asTypedArray = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : false;\n                if (!isValidFetchUrl(url, document.baseURI)) {\n                  _context8.next = 21;\n                  break;\n                }\n                _context8.next = 4;\n                return fetch(url);\n              case 4:\n                response = _context8.sent;\n                if (response.ok) {\n                  _context8.next = 7;\n                  break;\n                }\n                throw new Error(response.statusText);\n              case 7:\n                if (!asTypedArray) {\n                  _context8.next = 15;\n                  break;\n                }\n                _context8.t1 = Uint8Array;\n                _context8.next = 11;\n                return response.arrayBuffer();\n              case 11:\n                _context8.t2 = _context8.sent;\n                _context8.t0 = new _context8.t1(_context8.t2);\n                _context8.next = 20;\n                break;\n              case 15:\n                _context8.t3 = (0, _util.stringToBytes);\n                _context8.next = 18;\n                return response.text();\n              case 18:\n                _context8.t4 = _context8.sent;\n                _context8.t0 = (0, _context8.t3)(_context8.t4);\n              case 20:\n                return _context8.abrupt(\"return\", _context8.t0);\n              case 21:\n                return _context8.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var request = new XMLHttpRequest();\n                  request.open(\"GET\", url, true);\n                  if (asTypedArray) {\n                    request.responseType = \"arraybuffer\";\n                  }\n                  request.onreadystatechange = function () {\n                    if (request.readyState !== XMLHttpRequest.DONE) {\n                      return;\n                    }\n                    if (request.status === 200 || request.status === 0) {\n                      var data;\n                      if (asTypedArray && request.response) {\n                        data = new Uint8Array(request.response);\n                      } else if (!asTypedArray && request.responseText) {\n                        data = (0, _util.stringToBytes)(request.responseText);\n                      }\n                      if (data) {\n                        resolve(data);\n                        return;\n                      }\n                    }\n                    reject(new Error(request.statusText));\n                  };\n                  request.send(null);\n                }));\n              case 22:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8);\n        }));\n        return _fetchData.apply(this, arguments);\n      }\n      var DOMCMapReaderFactory = /*#__PURE__*/function (_base_factory$BaseCMa) {\n        _inherits(DOMCMapReaderFactory, _base_factory$BaseCMa);\n        function DOMCMapReaderFactory() {\n          _classCallCheck(this, DOMCMapReaderFactory);\n          return _callSuper(this, DOMCMapReaderFactory, arguments);\n        }\n        _createClass(DOMCMapReaderFactory, [{\n          key: \"_fetchData\",\n          value: function _fetchData(url, compressionType) {\n            return fetchData(url, this.isCompressed).then(function (data) {\n              return {\n                cMapData: data,\n                compressionType: compressionType\n              };\n            });\n          }\n        }]);\n        return DOMCMapReaderFactory;\n      }(_base_factory.BaseCMapReaderFactory);\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n      var DOMStandardFontDataFactory = /*#__PURE__*/function (_base_factory$BaseSta) {\n        _inherits(DOMStandardFontDataFactory, _base_factory$BaseSta);\n        function DOMStandardFontDataFactory() {\n          _classCallCheck(this, DOMStandardFontDataFactory);\n          return _callSuper(this, DOMStandardFontDataFactory, arguments);\n        }\n        _createClass(DOMStandardFontDataFactory, [{\n          key: \"_fetchData\",\n          value: function _fetchData(url) {\n            return fetchData(url, true);\n          }\n        }]);\n        return DOMStandardFontDataFactory;\n      }(_base_factory.BaseStandardFontDataFactory);\n      exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n      var DOMSVGFactory = /*#__PURE__*/function (_base_factory$BaseSVG) {\n        _inherits(DOMSVGFactory, _base_factory$BaseSVG);\n        function DOMSVGFactory() {\n          _classCallCheck(this, DOMSVGFactory);\n          return _callSuper(this, DOMSVGFactory, arguments);\n        }\n        _createClass(DOMSVGFactory, [{\n          key: \"_createSVG\",\n          value: function _createSVG(type) {\n            return document.createElementNS(SVG_NS, type);\n          }\n        }]);\n        return DOMSVGFactory;\n      }(_base_factory.BaseSVGFactory);\n      exports.DOMSVGFactory = DOMSVGFactory;\n      var PageViewport = /*#__PURE__*/function () {\n        function PageViewport(_ref31) {\n          var viewBox = _ref31.viewBox,\n            scale = _ref31.scale,\n            rotation = _ref31.rotation,\n            _ref31$offsetX = _ref31.offsetX,\n            offsetX = _ref31$offsetX === void 0 ? 0 : _ref31$offsetX,\n            _ref31$offsetY = _ref31.offsetY,\n            offsetY = _ref31$offsetY === void 0 ? 0 : _ref31$offsetY,\n            _ref31$dontFlip = _ref31.dontFlip,\n            dontFlip = _ref31$dontFlip === void 0 ? false : _ref31$dontFlip;\n          _classCallCheck(this, PageViewport);\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          var centerX = (viewBox[2] + viewBox[0]) / 2;\n          var centerY = (viewBox[3] + viewBox[1]) / 2;\n          var rotateA, rotateB, rotateC, rotateD;\n          rotation %= 360;\n          if (rotation < 0) {\n            rotation += 360;\n          }\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n            case 0:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n            default:\n              throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n          }\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n          var offsetCanvasX, offsetCanvasY;\n          var width, height;\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n        _createClass(PageViewport, [{\n          key: \"clone\",\n          value: function clone() {\n            var _ref32 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref32$scale = _ref32.scale,\n              scale = _ref32$scale === void 0 ? this.scale : _ref32$scale,\n              _ref32$rotation = _ref32.rotation,\n              rotation = _ref32$rotation === void 0 ? this.rotation : _ref32$rotation,\n              _ref32$offsetX = _ref32.offsetX,\n              offsetX = _ref32$offsetX === void 0 ? this.offsetX : _ref32$offsetX,\n              _ref32$offsetY = _ref32.offsetY,\n              offsetY = _ref32$offsetY === void 0 ? this.offsetY : _ref32$offsetY,\n              _ref32$dontFlip = _ref32.dontFlip,\n              dontFlip = _ref32$dontFlip === void 0 ? false : _ref32$dontFlip;\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"convertToViewportPoint\",\n          value: function convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n        }, {\n          key: \"convertToViewportRectangle\",\n          value: function convertToViewportRectangle(rect) {\n            var topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n            var bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n        }, {\n          key: \"convertToPdfPoint\",\n          value: function convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n        }]);\n        return PageViewport;\n      }();\n      exports.PageViewport = PageViewport;\n      var RenderingCancelledException = /*#__PURE__*/function (_util$BaseException) {\n        _inherits(RenderingCancelledException, _util$BaseException);\n        function RenderingCancelledException(msg, type) {\n          var _this26;\n          _classCallCheck(this, RenderingCancelledException);\n          _this26 = _callSuper(this, RenderingCancelledException, [msg, \"RenderingCancelledException\"]);\n          _this26.type = type;\n          return _this26;\n        }\n        return _createClass(RenderingCancelledException);\n      }(_util.BaseException);\n      exports.RenderingCancelledException = RenderingCancelledException;\n      function isDataScheme(url) {\n        var ii = url.length;\n        var i = 0;\n        while (i < ii && url[i].trim() === \"\") {\n          i++;\n        }\n        return url.substring(i, i + 5).toLowerCase() === \"data:\";\n      }\n      function isPdfFile(filename) {\n        return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n      }\n      function getFilenameFromUrl(url) {\n        var anchor = url.indexOf(\"#\");\n        var query = url.indexOf(\"?\");\n        var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n      function getPdfFilenameFromUrl(url) {\n        var defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n        if (typeof url !== \"string\") {\n          return defaultFilename;\n        }\n        if (isDataScheme(url)) {\n          (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n          return defaultFilename;\n        }\n        var reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n        var reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n        var splitURI = reURI.exec(url);\n        var suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n        if (suggestedFilename) {\n          suggestedFilename = suggestedFilename[0];\n          if (suggestedFilename.includes(\"%\")) {\n            try {\n              suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n            } catch (ex) {}\n          }\n        }\n        return suggestedFilename || defaultFilename;\n      }\n      var StatTimer = /*#__PURE__*/function () {\n        function StatTimer() {\n          _classCallCheck(this, StatTimer);\n          this.started = Object.create(null);\n          this.times = [];\n        }\n        _createClass(StatTimer, [{\n          key: \"time\",\n          value: function time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(\"Timer is already running for \".concat(name));\n            }\n            this.started[name] = Date.now();\n          }\n        }, {\n          key: \"timeEnd\",\n          value: function timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(\"Timer has not been started for \".concat(name));\n            }\n            this.times.push({\n              name: name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n        }, {\n          key: \"toString\",\n          value: function toString() {\n            var outBuf = [];\n            var longest = 0;\n            var _iterator43 = _createForOfIteratorHelper(this.times),\n              _step43;\n            try {\n              for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n                var time = _step43.value;\n                var name = time.name;\n                if (name.length > longest) {\n                  longest = name.length;\n                }\n              }\n            } catch (err) {\n              _iterator43.e(err);\n            } finally {\n              _iterator43.f();\n            }\n            var _iterator44 = _createForOfIteratorHelper(this.times),\n              _step44;\n            try {\n              for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n                var _time = _step44.value;\n                var duration = _time.end - _time.start;\n                outBuf.push(\"\".concat(_time.name.padEnd(longest), \" \").concat(duration, \"ms\\n\"));\n              }\n            } catch (err) {\n              _iterator44.e(err);\n            } finally {\n              _iterator44.f();\n            }\n            return outBuf.join(\"\");\n          }\n        }]);\n        return StatTimer;\n      }();\n      exports.StatTimer = StatTimer;\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          var _ref33 = baseUrl ? new URL(url, baseUrl) : new URL(url),\n            protocol = _ref33.protocol;\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n      function loadScript(src) {\n        var removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        return new Promise(function (resolve, reject) {\n          var script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = function (evt) {\n            if (removeScriptElement) {\n              script.remove();\n            }\n            resolve(evt);\n          };\n          script.onerror = function () {\n            reject(new Error(\"Cannot load script at: \".concat(script.src)));\n          };\n          (document.head || document.documentElement).append(script);\n        });\n      }\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n      var pdfDateStringRegex;\n      var PDFDateString = /*#__PURE__*/function () {\n        function PDFDateString() {\n          _classCallCheck(this, PDFDateString);\n        }\n        _createClass(PDFDateString, null, [{\n          key: \"toDateObject\",\n          value: function toDateObject(input) {\n            if (!input || typeof input !== \"string\") {\n              return null;\n            }\n            if (!pdfDateStringRegex) {\n              pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            }\n            var matches = pdfDateStringRegex.exec(input);\n            if (!matches) {\n              return null;\n            }\n            var year = parseInt(matches[1], 10);\n            var month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            var day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            var hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            var minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            var second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            var universalTimeRelation = matches[7] || \"Z\";\n            var offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            var offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n        }]);\n        return PDFDateString;\n      }();\n      exports.PDFDateString = PDFDateString;\n      function getXfaPageViewport(xfaPage, _ref34) {\n        var _ref34$scale = _ref34.scale,\n          scale = _ref34$scale === void 0 ? 1 : _ref34$scale,\n          _ref34$rotation = _ref34.rotation,\n          rotation = _ref34$rotation === void 0 ? 0 : _ref34$rotation;\n        var _xfaPage$attributes$s = xfaPage.attributes.style,\n          width = _xfaPage$attributes$s.width,\n          height = _xfaPage$attributes$s.height;\n        var viewBox = [0, 0, parseInt(width), parseInt(height)];\n        return new PageViewport({\n          viewBox: viewBox,\n          scale: scale,\n          rotation: rotation\n        });\n      }\n      function getRGB(color) {\n        if (color.startsWith(\"#\")) {\n          var colorRGB = parseInt(color.slice(1), 16);\n          return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n        }\n        if (color.startsWith(\"rgb(\")) {\n          return color.slice(4, -1).split(\",\").map(function (x) {\n            return parseInt(x);\n          });\n        }\n        if (color.startsWith(\"rgba(\")) {\n          return color.slice(5, -1).split(\",\").map(function (x) {\n            return parseInt(x);\n          }).slice(0, 3);\n        }\n        (0, _util.warn)(\"Not a valid color format: \\\"\".concat(color, \"\\\"\"));\n        return [0, 0, 0];\n      }\n      function getColorValues(colors) {\n        var span = document.createElement(\"span\");\n        span.style.visibility = \"hidden\";\n        document.body.append(span);\n        var _iterator45 = _createForOfIteratorHelper(colors.keys()),\n          _step45;\n        try {\n          for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n            var name = _step45.value;\n            span.style.color = name;\n            var computedColor = window.getComputedStyle(span).color;\n            colors.set(name, getRGB(computedColor));\n          }\n        } catch (err) {\n          _iterator45.e(err);\n        } finally {\n          _iterator45.f();\n        }\n        span.remove();\n      }\n      function getCurrentTransform(ctx) {\n        var _ctx$getTransform = ctx.getTransform(),\n          a = _ctx$getTransform.a,\n          b = _ctx$getTransform.b,\n          c = _ctx$getTransform.c,\n          d = _ctx$getTransform.d,\n          e = _ctx$getTransform.e,\n          f = _ctx$getTransform.f;\n        return [a, b, c, d, e, f];\n      }\n      function getCurrentTransformInverse(ctx) {\n        var _ctx$getTransform$inv = ctx.getTransform().invertSelf(),\n          a = _ctx$getTransform$inv.a,\n          b = _ctx$getTransform$inv.b,\n          c = _ctx$getTransform$inv.c,\n          d = _ctx$getTransform$inv.d,\n          e = _ctx$getTransform$inv.e,\n          f = _ctx$getTransform$inv.f;\n        return [a, b, c, d, e, f];\n      }\n\n      /***/\n    }), ( /* 9 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var BaseCanvasFactory = /*#__PURE__*/function () {\n        function BaseCanvasFactory() {\n          _classCallCheck(this, BaseCanvasFactory);\n          if (this.constructor === BaseCanvasFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n          }\n        }\n        _createClass(BaseCanvasFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            var canvas = this._createCanvas(width, height);\n            return {\n              canvas: canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n        }, {\n          key: \"reset\",\n          value: function reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n        }, {\n          key: \"_createCanvas\",\n          value: function _createCanvas(width, height) {\n            (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n          }\n        }]);\n        return BaseCanvasFactory;\n      }();\n      exports.BaseCanvasFactory = BaseCanvasFactory;\n      var BaseCMapReaderFactory = /*#__PURE__*/function () {\n        function BaseCMapReaderFactory(_ref35) {\n          var _ref35$baseUrl = _ref35.baseUrl,\n            baseUrl = _ref35$baseUrl === void 0 ? null : _ref35$baseUrl,\n            _ref35$isCompressed = _ref35.isCompressed,\n            isCompressed = _ref35$isCompressed === void 0 ? false : _ref35$isCompressed;\n          _classCallCheck(this, BaseCMapReaderFactory);\n          if (this.constructor === BaseCMapReaderFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n          }\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n        _createClass(BaseCMapReaderFactory, [{\n          key: \"fetch\",\n          value: function () {\n            var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_ref36) {\n              var _this27 = this;\n              var name, url, compressionType;\n              return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    name = _ref36.name;\n                    if (this.baseUrl) {\n                      _context9.next = 3;\n                      break;\n                    }\n                    throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n                  case 3:\n                    if (name) {\n                      _context9.next = 5;\n                      break;\n                    }\n                    throw new Error(\"CMap name must be specified.\");\n                  case 5:\n                    url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                    compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n                    return _context9.abrupt(\"return\", this._fetchData(url, compressionType).catch(function (reason) {\n                      throw new Error(\"Unable to load \".concat(_this27.isCompressed ? \"binary \" : \"\", \"CMap at: \").concat(url));\n                    }));\n                  case 8:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9, this);\n            }));\n            function fetch(_x6) {\n              return _fetch.apply(this, arguments);\n            }\n            return fetch;\n          }()\n        }, {\n          key: \"_fetchData\",\n          value: function _fetchData(url, compressionType) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n        }]);\n        return BaseCMapReaderFactory;\n      }();\n      exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n      var BaseStandardFontDataFactory = /*#__PURE__*/function () {\n        function BaseStandardFontDataFactory(_ref37) {\n          var _ref37$baseUrl = _ref37.baseUrl,\n            baseUrl = _ref37$baseUrl === void 0 ? null : _ref37$baseUrl;\n          _classCallCheck(this, BaseStandardFontDataFactory);\n          if (this.constructor === BaseStandardFontDataFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n          }\n          this.baseUrl = baseUrl;\n        }\n        _createClass(BaseStandardFontDataFactory, [{\n          key: \"fetch\",\n          value: function () {\n            var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(_ref38) {\n              var filename, url;\n              return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    filename = _ref38.filename;\n                    if (this.baseUrl) {\n                      _context10.next = 3;\n                      break;\n                    }\n                    throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n                  case 3:\n                    if (filename) {\n                      _context10.next = 5;\n                      break;\n                    }\n                    throw new Error(\"Font filename must be specified.\");\n                  case 5:\n                    url = \"\".concat(this.baseUrl).concat(filename);\n                    return _context10.abrupt(\"return\", this._fetchData(url).catch(function (reason) {\n                      throw new Error(\"Unable to load font data at: \".concat(url));\n                    }));\n                  case 7:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10, this);\n            }));\n            function fetch(_x7) {\n              return _fetch2.apply(this, arguments);\n            }\n            return fetch;\n          }()\n        }, {\n          key: \"_fetchData\",\n          value: function _fetchData(url) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n        }]);\n        return BaseStandardFontDataFactory;\n      }();\n      exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n      var BaseSVGFactory = /*#__PURE__*/function () {\n        function BaseSVGFactory() {\n          _classCallCheck(this, BaseSVGFactory);\n          if (this.constructor === BaseSVGFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n          }\n        }\n        _createClass(BaseSVGFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            var skipDimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid SVG dimensions\");\n            }\n            var svg = this._createSVG(\"svg:svg\");\n            svg.setAttribute(\"version\", \"1.1\");\n            if (!skipDimensions) {\n              svg.setAttribute(\"width\", \"\".concat(width, \"px\"));\n              svg.setAttribute(\"height\", \"\".concat(height, \"px\"));\n            }\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", \"0 0 \".concat(width, \" \").concat(height));\n            return svg;\n          }\n        }, {\n          key: \"createElement\",\n          value: function createElement(type) {\n            if (typeof type !== \"string\") {\n              throw new Error(\"Invalid SVG element type\");\n            }\n            return this._createSVG(type);\n          }\n        }, {\n          key: \"_createSVG\",\n          value: function _createSVG(type) {\n            (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n          }\n        }]);\n        return BaseSVGFactory;\n      }();\n      exports.BaseSVGFactory = BaseSVGFactory;\n\n      /***/\n    }), ( /* 10 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MurmurHash3_64 = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var SEED = 0xc3d2e1f0;\n      var MASK_HIGH = 0xffff0000;\n      var MASK_LOW = 0xffff;\n      var MurmurHash3_64 = /*#__PURE__*/function () {\n        function MurmurHash3_64(seed) {\n          _classCallCheck(this, MurmurHash3_64);\n          this.h1 = seed ? seed & 0xffffffff : SEED;\n          this.h2 = seed ? seed & 0xffffffff : SEED;\n        }\n        _createClass(MurmurHash3_64, [{\n          key: \"update\",\n          value: function update(input) {\n            var data, length;\n            if (typeof input === \"string\") {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n              for (var i = 0, ii = input.length; i < ii; i++) {\n                var code = input.charCodeAt(i);\n                if (code <= 0xff) {\n                  data[length++] = code;\n                } else {\n                  data[length++] = code >>> 8;\n                  data[length++] = code & 0xff;\n                }\n              }\n            } else if ((0, _util.isArrayBuffer)(input)) {\n              data = input.slice();\n              length = data.byteLength;\n            } else {\n              throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n            }\n            var blockCounts = length >> 2;\n            var tailLength = length - blockCounts * 4;\n            var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            var k1 = 0,\n              k2 = 0;\n            var h1 = this.h1,\n              h2 = this.h2;\n            var C1 = 0xcc9e2d51,\n              C2 = 0x1b873593;\n            var C1_LOW = C1 & MASK_LOW,\n              C2_LOW = C2 & MASK_LOW;\n            for (var _i3 = 0; _i3 < blockCounts; _i3++) {\n              if (_i3 & 1) {\n                k1 = dataUint32[_i3];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                h1 ^= k1;\n                h1 = h1 << 13 | h1 >>> 19;\n                h1 = h1 * 5 + 0xe6546b64;\n              } else {\n                k2 = dataUint32[_i3];\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                k2 = k2 << 15 | k2 >>> 17;\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                h2 ^= k2;\n                h2 = h2 << 13 | h2 >>> 19;\n                h2 = h2 * 5 + 0xe6546b64;\n              }\n            }\n            k1 = 0;\n            switch (tailLength) {\n              case 3:\n                k1 ^= data[blockCounts * 4 + 2] << 16;\n              case 2:\n                k1 ^= data[blockCounts * 4 + 1] << 8;\n              case 1:\n                k1 ^= data[blockCounts * 4];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                if (blockCounts & 1) {\n                  h1 ^= k1;\n                } else {\n                  h2 ^= k1;\n                }\n            }\n            this.h1 = h1;\n            this.h2 = h2;\n          }\n        }, {\n          key: \"hexdigest\",\n          value: function hexdigest() {\n            var h1 = this.h1,\n              h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            var hex1 = (h1 >>> 0).toString(16),\n              hex2 = (h2 >>> 0).toString(16);\n            return hex1.padStart(8, \"0\") + hex2.padStart(8, \"0\");\n          }\n        }]);\n        return MurmurHash3_64;\n      }();\n      exports.MurmurHash3_64 = MurmurHash3_64;\n\n      /***/\n    }), ( /* 11 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var BaseFontLoader = /*#__PURE__*/function () {\n        function BaseFontLoader(_ref39) {\n          var docId = _ref39.docId,\n            onUnsupportedFeature = _ref39.onUnsupportedFeature,\n            _ref39$ownerDocument = _ref39.ownerDocument,\n            ownerDocument = _ref39$ownerDocument === void 0 ? globalThis.document : _ref39$ownerDocument,\n            _ref39$styleElement = _ref39.styleElement,\n            styleElement = _ref39$styleElement === void 0 ? null : _ref39$styleElement;\n          _classCallCheck(this, BaseFontLoader);\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this._document = ownerDocument;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n        _createClass(BaseFontLoader, [{\n          key: \"addNativeFontFace\",\n          value: function addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.push(nativeFontFace);\n            this._document.fonts.add(nativeFontFace);\n          }\n        }, {\n          key: \"insertRule\",\n          value: function insertRule(rule) {\n            var styleElement = this.styleElement;\n            if (!styleElement) {\n              styleElement = this.styleElement = this._document.createElement(\"style\");\n              styleElement.id = \"PDFJS_FONT_STYLE_TAG_\".concat(this.docId);\n              this._document.documentElement.getElementsByTagName(\"head\")[0].append(styleElement);\n            }\n            var styleSheet = styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            var _iterator46 = _createForOfIteratorHelper(this.nativeFontFaces),\n              _step46;\n            try {\n              for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n                var nativeFontFace = _step46.value;\n                this._document.fonts.delete(nativeFontFace);\n              }\n            } catch (err) {\n              _iterator46.e(err);\n            } finally {\n              _iterator46.f();\n            }\n            this.nativeFontFaces.length = 0;\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n        }, {\n          key: \"bind\",\n          value: function () {\n            var _bind = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(font) {\n              var _this28 = this;\n              var nativeFontFace, rule;\n              return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    if (!(font.attached || font.missingFile)) {\n                      _context11.next = 2;\n                      break;\n                    }\n                    return _context11.abrupt(\"return\");\n                  case 2:\n                    font.attached = true;\n                    if (!this.isFontLoadingAPISupported) {\n                      _context11.next = 19;\n                      break;\n                    }\n                    nativeFontFace = font.createNativeFontFace();\n                    if (!nativeFontFace) {\n                      _context11.next = 18;\n                      break;\n                    }\n                    this.addNativeFontFace(nativeFontFace);\n                    _context11.prev = 7;\n                    _context11.next = 10;\n                    return nativeFontFace.loaded;\n                  case 10:\n                    _context11.next = 18;\n                    break;\n                  case 12:\n                    _context11.prev = 12;\n                    _context11.t0 = _context11[\"catch\"](7);\n                    this._onUnsupportedFeature({\n                      featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                    });\n                    (0, _util.warn)(\"Failed to load font '\".concat(nativeFontFace.family, \"': '\").concat(_context11.t0, \"'.\"));\n                    font.disableFontFace = true;\n                    throw _context11.t0;\n                  case 18:\n                    return _context11.abrupt(\"return\");\n                  case 19:\n                    rule = font.createFontFaceRule();\n                    if (!rule) {\n                      _context11.next = 26;\n                      break;\n                    }\n                    this.insertRule(rule);\n                    if (!this.isSyncFontLoadingSupported) {\n                      _context11.next = 24;\n                      break;\n                    }\n                    return _context11.abrupt(\"return\");\n                  case 24:\n                    _context11.next = 26;\n                    return new Promise(function (resolve) {\n                      var request = _this28._queueLoadingCallback(resolve);\n                      _this28._prepareFontLoadEvent([rule], [font], request);\n                    });\n                  case 26:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11, this, [[7, 12]]);\n            }));\n            function bind(_x8) {\n              return _bind.apply(this, arguments);\n            }\n            return bind;\n          }()\n        }, {\n          key: \"_queueLoadingCallback\",\n          value: function _queueLoadingCallback(callback) {\n            (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n          }\n        }, {\n          key: \"isFontLoadingAPISupported\",\n          get: function get() {\n            var _this$_document;\n            var hasFonts = !!((_this$_document = this._document) !== null && _this$_document !== void 0 && _this$_document.fonts);\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n          }\n        }, {\n          key: \"isSyncFontLoadingSupported\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n          }\n        }, {\n          key: \"_loadTestFont\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n          }\n        }, {\n          key: \"_prepareFontLoadEvent\",\n          value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {\n            (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n          }\n        }]);\n        return BaseFontLoader;\n      }();\n      var FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = /*#__PURE__*/function (_BaseFontLoader) {\n          _inherits(GenericFontLoader, _BaseFontLoader);\n          function GenericFontLoader(params) {\n            var _this29;\n            _classCallCheck(this, GenericFontLoader);\n            _this29 = _callSuper(this, GenericFontLoader, [params]);\n            _this29.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            _this29.loadTestFontId = 0;\n            return _this29;\n          }\n          _createClass(GenericFontLoader, [{\n            key: \"isSyncFontLoadingSupported\",\n            get: function get() {\n              var supported = false;\n              if (typeof navigator === \"undefined\") {\n                supported = true;\n              } else {\n                var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n                if ((m === null || m === void 0 ? void 0 : m[1]) >= 14) {\n                  supported = true;\n                }\n              }\n              return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n            }\n          }, {\n            key: \"_queueLoadingCallback\",\n            value: function _queueLoadingCallback(callback) {\n              function completeRequest() {\n                (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                request.done = true;\n                while (context.requests.length > 0 && context.requests[0].done) {\n                  var otherRequest = context.requests.shift();\n                  setTimeout(otherRequest.callback, 0);\n                }\n              }\n              var context = this.loadingContext;\n              var request = {\n                id: \"pdfjs-font-loading-\".concat(context.nextRequestId++),\n                done: false,\n                complete: completeRequest,\n                callback: callback\n              };\n              context.requests.push(request);\n              return request;\n            }\n          }, {\n            key: \"_loadTestFont\",\n            get: function get() {\n              var getLoadTestFont = function getLoadTestFont() {\n                return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n              };\n              return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n            }\n          }, {\n            key: \"_prepareFontLoadEvent\",\n            value: function _prepareFontLoadEvent(rules, fonts, request) {\n              function int32(data, offset) {\n                return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n              }\n              function spliceString(s, offset, remove, insert) {\n                var chunk1 = s.substring(0, offset);\n                var chunk2 = s.substring(offset + remove);\n                return chunk1 + insert + chunk2;\n              }\n              var i, ii;\n              var canvas = this._document.createElement(\"canvas\");\n              canvas.width = 1;\n              canvas.height = 1;\n              var ctx = canvas.getContext(\"2d\");\n              var called = 0;\n              function isFontReady(name, callback) {\n                called++;\n                if (called > 30) {\n                  (0, _util.warn)(\"Load test font never loaded.\");\n                  callback();\n                  return;\n                }\n                ctx.font = \"30px \" + name;\n                ctx.fillText(\".\", 0, 20);\n                var imageData = ctx.getImageData(0, 0, 1, 1);\n                if (imageData.data[3] > 0) {\n                  callback();\n                  return;\n                }\n                setTimeout(isFontReady.bind(null, name, callback));\n              }\n              var loadTestFontId = \"lt\".concat(Date.now()).concat(this.loadTestFontId++);\n              var data = this._loadTestFont;\n              var COMMENT_OFFSET = 976;\n              data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n              var CFF_CHECKSUM_OFFSET = 16;\n              var XXXX_VALUE = 0x58585858;\n              var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n              for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n              }\n              if (i < loadTestFontId.length) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n              }\n              data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n              var url = \"url(data:font/opentype;base64,\".concat(btoa(data), \");\");\n              var rule = \"@font-face {font-family:\\\"\".concat(loadTestFontId, \"\\\";src:\").concat(url, \"}\");\n              this.insertRule(rule);\n              var names = [];\n              var _iterator47 = _createForOfIteratorHelper(fonts),\n                _step47;\n              try {\n                for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n                  var font = _step47.value;\n                  names.push(font.loadedName);\n                }\n              } catch (err) {\n                _iterator47.e(err);\n              } finally {\n                _iterator47.f();\n              }\n              names.push(loadTestFontId);\n              var div = this._document.createElement(\"div\");\n              div.style.visibility = \"hidden\";\n              div.style.width = div.style.height = \"10px\";\n              div.style.position = \"absolute\";\n              div.style.top = div.style.left = \"0px\";\n              for (var _i4 = 0, _names = names; _i4 < _names.length; _i4++) {\n                var name = _names[_i4];\n                var span = this._document.createElement(\"span\");\n                span.textContent = \"Hi\";\n                span.style.fontFamily = name;\n                div.append(span);\n              }\n              this._document.body.append(div);\n              isFontReady(loadTestFontId, function () {\n                div.remove();\n                request.complete();\n              });\n            }\n          }]);\n          return GenericFontLoader;\n        }(BaseFontLoader);\n      }\n      var FontFaceObject = /*#__PURE__*/function () {\n        function FontFaceObject(translatedData, _ref40) {\n          var _ref40$isEvalSupporte = _ref40.isEvalSupported,\n            isEvalSupported = _ref40$isEvalSupporte === void 0 ? true : _ref40$isEvalSupporte,\n            _ref40$disableFontFac = _ref40.disableFontFace,\n            disableFontFace = _ref40$disableFontFac === void 0 ? false : _ref40$disableFontFac,\n            _ref40$ignoreErrors = _ref40.ignoreErrors,\n            ignoreErrors = _ref40$ignoreErrors === void 0 ? false : _ref40$ignoreErrors,\n            onUnsupportedFeature = _ref40.onUnsupportedFeature,\n            _ref40$fontRegistry = _ref40.fontRegistry,\n            fontRegistry = _ref40$fontRegistry === void 0 ? null : _ref40$fontRegistry;\n          _classCallCheck(this, FontFaceObject);\n          this.compiledGlyphs = Object.create(null);\n          for (var i in translatedData) {\n            this[i] = translatedData[i];\n          }\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n        _createClass(FontFaceObject, [{\n          key: \"createNativeFontFace\",\n          value: function createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            var nativeFontFace;\n            if (!this.cssFontInfo) {\n              nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            } else {\n              var css = {\n                weight: this.cssFontInfo.fontWeight\n              };\n              if (this.cssFontInfo.italicAngle) {\n                css.style = \"oblique \".concat(this.cssFontInfo.italicAngle, \"deg\");\n              }\n              nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n            }\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this);\n            }\n            return nativeFontFace;\n          }\n        }, {\n          key: \"createFontFaceRule\",\n          value: function createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            var data = (0, _util.bytesToString)(this.data);\n            var url = \"url(data:\".concat(this.mimetype, \";base64,\").concat(btoa(data), \");\");\n            var rule;\n            if (!this.cssFontInfo) {\n              rule = \"@font-face {font-family:\\\"\".concat(this.loadedName, \"\\\";src:\").concat(url, \"}\");\n            } else {\n              var css = \"font-weight: \".concat(this.cssFontInfo.fontWeight, \";\");\n              if (this.cssFontInfo.italicAngle) {\n                css += \"font-style: oblique \".concat(this.cssFontInfo.italicAngle, \"deg;\");\n              }\n              rule = \"@font-face {font-family:\\\"\".concat(this.cssFontInfo.fontFamily, \"\\\";\").concat(css, \"src:\").concat(url, \"}\");\n            }\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this, url);\n            }\n            return rule;\n          }\n        }, {\n          key: \"getPathGenerator\",\n          value: function getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n            var cmds;\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n              });\n              (0, _util.warn)(\"getPathGenerator - ignoring character: \\\"\".concat(ex, \"\\\".\"));\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n            if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n              var jsBuf = [];\n              var _iterator48 = _createForOfIteratorHelper(cmds),\n                _step48;\n              try {\n                for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n                  var current = _step48.value;\n                  var args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                  jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n                }\n              } catch (err) {\n                _iterator48.e(err);\n              } finally {\n                _iterator48.f();\n              }\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n            }\n            return this.compiledGlyphs[character] = function (c, size) {\n              var _iterator49 = _createForOfIteratorHelper(cmds),\n                _step49;\n              try {\n                for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n                  var _current = _step49.value;\n                  if (_current.cmd === \"scale\") {\n                    _current.args = [size, -size];\n                  }\n                  c[_current.cmd].apply(c, _current.args);\n                }\n              } catch (err) {\n                _iterator49.e(err);\n              } finally {\n                _iterator49.f();\n              }\n            };\n          }\n        }]);\n        return FontFaceObject;\n      }();\n      exports.FontFaceObject = FontFaceObject;\n\n      /***/\n    }), ( /* 12 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n      var _display_utils = __w_pdfjs_require__(8);\n      var _util = __w_pdfjs_require__(1);\n      var _pattern_helper = __w_pdfjs_require__(13);\n      var _image_utils = __w_pdfjs_require__(14);\n      var _is_node = __w_pdfjs_require__(3);\n      var MIN_FONT_SIZE = 16;\n      var MAX_FONT_SIZE = 100;\n      var MAX_GROUP_SIZE = 4096;\n      var EXECUTION_TIME = 15;\n      var EXECUTION_STEPS = 10;\n      var MAX_SIZE_TO_COMPILE = _is_node.isNodeJS && typeof Path2D === \"undefined\" ? -1 : 1000;\n      var FULL_CHUNK_HEIGHT = 16;\n      function mirrorContextOperations(ctx, destCtx) {\n        if (ctx._removeMirroring) {\n          throw new Error(\"Context is already forwarding operations.\");\n        }\n        ctx.__originalSave = ctx.save;\n        ctx.__originalRestore = ctx.restore;\n        ctx.__originalRotate = ctx.rotate;\n        ctx.__originalScale = ctx.scale;\n        ctx.__originalTranslate = ctx.translate;\n        ctx.__originalTransform = ctx.transform;\n        ctx.__originalSetTransform = ctx.setTransform;\n        ctx.__originalResetTransform = ctx.resetTransform;\n        ctx.__originalClip = ctx.clip;\n        ctx.__originalMoveTo = ctx.moveTo;\n        ctx.__originalLineTo = ctx.lineTo;\n        ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n        ctx.__originalRect = ctx.rect;\n        ctx.__originalClosePath = ctx.closePath;\n        ctx.__originalBeginPath = ctx.beginPath;\n        ctx._removeMirroring = function () {\n          ctx.save = ctx.__originalSave;\n          ctx.restore = ctx.__originalRestore;\n          ctx.rotate = ctx.__originalRotate;\n          ctx.scale = ctx.__originalScale;\n          ctx.translate = ctx.__originalTranslate;\n          ctx.transform = ctx.__originalTransform;\n          ctx.setTransform = ctx.__originalSetTransform;\n          ctx.resetTransform = ctx.__originalResetTransform;\n          ctx.clip = ctx.__originalClip;\n          ctx.moveTo = ctx.__originalMoveTo;\n          ctx.lineTo = ctx.__originalLineTo;\n          ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n          ctx.rect = ctx.__originalRect;\n          ctx.closePath = ctx.__originalClosePath;\n          ctx.beginPath = ctx.__originalBeginPath;\n          delete ctx._removeMirroring;\n        };\n        ctx.save = function ctxSave() {\n          destCtx.save();\n          this.__originalSave();\n        };\n        ctx.restore = function ctxRestore() {\n          destCtx.restore();\n          this.__originalRestore();\n        };\n        ctx.translate = function ctxTranslate(x, y) {\n          destCtx.translate(x, y);\n          this.__originalTranslate(x, y);\n        };\n        ctx.scale = function ctxScale(x, y) {\n          destCtx.scale(x, y);\n          this.__originalScale(x, y);\n        };\n        ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n          destCtx.transform(a, b, c, d, e, f);\n          this.__originalTransform(a, b, c, d, e, f);\n        };\n        ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n          destCtx.setTransform(a, b, c, d, e, f);\n          this.__originalSetTransform(a, b, c, d, e, f);\n        };\n        ctx.resetTransform = function ctxResetTransform() {\n          destCtx.resetTransform();\n          this.__originalResetTransform();\n        };\n        ctx.rotate = function ctxRotate(angle) {\n          destCtx.rotate(angle);\n          this.__originalRotate(angle);\n        };\n        ctx.clip = function ctxRotate(rule) {\n          destCtx.clip(rule);\n          this.__originalClip(rule);\n        };\n        ctx.moveTo = function (x, y) {\n          destCtx.moveTo(x, y);\n          this.__originalMoveTo(x, y);\n        };\n        ctx.lineTo = function (x, y) {\n          destCtx.lineTo(x, y);\n          this.__originalLineTo(x, y);\n        };\n        ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n          destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        };\n        ctx.rect = function (x, y, width, height) {\n          destCtx.rect(x, y, width, height);\n          this.__originalRect(x, y, width, height);\n        };\n        ctx.closePath = function () {\n          destCtx.closePath();\n          this.__originalClosePath();\n        };\n        ctx.beginPath = function () {\n          destCtx.beginPath();\n          this.__originalBeginPath();\n        };\n      }\n      var CachedCanvases = /*#__PURE__*/function () {\n        function CachedCanvases(canvasFactory) {\n          _classCallCheck(this, CachedCanvases);\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n        _createClass(CachedCanvases, [{\n          key: \"getCanvas\",\n          value: function getCanvas(id, width, height) {\n            var canvasEntry;\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n            return canvasEntry;\n          }\n        }, {\n          key: \"delete\",\n          value: function _delete(id) {\n            delete this.cache[id];\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            for (var id in this.cache) {\n              var canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n        }]);\n        return CachedCanvases;\n      }();\n      function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n        var _ref41 = (0, _display_utils.getCurrentTransform)(ctx),\n          _ref42 = _slicedToArray(_ref41, 6),\n          a = _ref42[0],\n          b = _ref42[1],\n          c = _ref42[2],\n          d = _ref42[3],\n          tx = _ref42[4],\n          ty = _ref42[5];\n        if (b === 0 && c === 0) {\n          var tlX = destX * a + tx;\n          var rTlX = Math.round(tlX);\n          var tlY = destY * d + ty;\n          var rTlY = Math.round(tlY);\n          var brX = (destX + destW) * a + tx;\n          var rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n          var brY = (destY + destH) * d + ty;\n          var rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n          ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n          ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n          ctx.setTransform(a, b, c, d, tx, ty);\n          return [rWidth, rHeight];\n        }\n        if (a === 0 && d === 0) {\n          var _tlX = destY * c + tx;\n          var _rTlX = Math.round(_tlX);\n          var _tlY = destX * b + ty;\n          var _rTlY = Math.round(_tlY);\n          var _brX = (destY + destH) * c + tx;\n          var _rWidth = Math.abs(Math.round(_brX) - _rTlX) || 1;\n          var _brY = (destX + destW) * b + ty;\n          var _rHeight = Math.abs(Math.round(_brY) - _rTlY) || 1;\n          ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, _rTlX, _rTlY);\n          ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, _rHeight, _rWidth);\n          ctx.setTransform(a, b, c, d, tx, ty);\n          return [_rHeight, _rWidth];\n        }\n        ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n        var scaleX = Math.hypot(a, b);\n        var scaleY = Math.hypot(c, d);\n        return [scaleX * destW, scaleY * destH];\n      }\n      function compileType3Glyph(imgData) {\n        var width = imgData.width,\n          height = imgData.height;\n        if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n          return null;\n        }\n        var POINT_TO_PROCESS_LIMIT = 1000;\n        var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        var width1 = width + 1;\n        var points = new Uint8Array(width1 * (height + 1));\n        var i, j, j0;\n        var lineSize = width + 7 & ~7;\n        var data = new Uint8Array(lineSize * height),\n          pos = 0;\n        var _iterator50 = _createForOfIteratorHelper(imgData.data),\n          _step50;\n        try {\n          for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n            var elem = _step50.value;\n            var mask = 128;\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n        } catch (err) {\n          _iterator50.e(err);\n        } finally {\n          _iterator50.f();\n        }\n        var count = 0;\n        pos = 0;\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n          var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n        var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        var path = new Path2D();\n        for (i = 0; count && i <= height; i++) {\n          var p = i * width1;\n          var end = p + width;\n          while (p < end && !points[p]) {\n            p++;\n          }\n          if (p === end) {\n            continue;\n          }\n          path.moveTo(p % width1, i);\n          var p0 = p;\n          var type = points[p];\n          do {\n            var step = steps[type];\n            do {\n              p += step;\n            } while (!points[p]);\n            var pp = points[p];\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n            path.lineTo(p % width1, p / width1 | 0);\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n          --i;\n        }\n        data = null;\n        points = null;\n        var drawOutline = function drawOutline(c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.fill(path);\n          c.beginPath();\n          c.restore();\n        };\n        return drawOutline;\n      }\n      var CanvasExtraState = /*#__PURE__*/function () {\n        function CanvasExtraState(width, height) {\n          _classCallCheck(this, CanvasExtraState);\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.transferMaps = null;\n          this.startNewPathAndClipBox([0, 0, width, height]);\n        }\n        _createClass(CanvasExtraState, [{\n          key: \"clone\",\n          value: function clone() {\n            var clone = Object.create(this);\n            clone.clipBox = this.clipBox.slice();\n            return clone;\n          }\n        }, {\n          key: \"setCurrentPoint\",\n          value: function setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        }, {\n          key: \"updatePathMinMax\",\n          value: function updatePathMinMax(transform, x, y) {\n            var _util$Util$applyTrans = _util.Util.applyTransform([x, y], transform);\n            var _util$Util$applyTrans2 = _slicedToArray(_util$Util$applyTrans, 2);\n            x = _util$Util$applyTrans2[0];\n            y = _util$Util$applyTrans2[1];\n            this.minX = Math.min(this.minX, x);\n            this.minY = Math.min(this.minY, y);\n            this.maxX = Math.max(this.maxX, x);\n            this.maxY = Math.max(this.maxY, y);\n          }\n        }, {\n          key: \"updateRectMinMax\",\n          value: function updateRectMinMax(transform, rect) {\n            var p1 = _util.Util.applyTransform(rect, transform);\n            var p2 = _util.Util.applyTransform(rect.slice(2), transform);\n            this.minX = Math.min(this.minX, p1[0], p2[0]);\n            this.minY = Math.min(this.minY, p1[1], p2[1]);\n            this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n            this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n          }\n        }, {\n          key: \"updateScalingPathMinMax\",\n          value: function updateScalingPathMinMax(transform, minMax) {\n            _util.Util.scaleMinMax(transform, minMax);\n            this.minX = Math.min(this.minX, minMax[0]);\n            this.maxX = Math.max(this.maxX, minMax[1]);\n            this.minY = Math.min(this.minY, minMax[2]);\n            this.maxY = Math.max(this.maxY, minMax[3]);\n          }\n        }, {\n          key: \"updateCurvePathMinMax\",\n          value: function updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n            var box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n            if (minMax) {\n              minMax[0] = Math.min(minMax[0], box[0], box[2]);\n              minMax[1] = Math.max(minMax[1], box[0], box[2]);\n              minMax[2] = Math.min(minMax[2], box[1], box[3]);\n              minMax[3] = Math.max(minMax[3], box[1], box[3]);\n              return;\n            }\n            this.updateRectMinMax(transform, box);\n          }\n        }, {\n          key: \"getPathBoundingBox\",\n          value: function getPathBoundingBox() {\n            var pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            var transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var box = [this.minX, this.minY, this.maxX, this.maxY];\n            if (pathType === _pattern_helper.PathType.STROKE) {\n              if (!transform) {\n                (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n              }\n              var scale = _util.Util.singularValueDecompose2dScale(transform);\n              var xStrokePad = scale[0] * this.lineWidth / 2;\n              var yStrokePad = scale[1] * this.lineWidth / 2;\n              box[0] -= xStrokePad;\n              box[1] -= yStrokePad;\n              box[2] += xStrokePad;\n              box[3] += yStrokePad;\n            }\n            return box;\n          }\n        }, {\n          key: \"updateClipFromPath\",\n          value: function updateClipFromPath() {\n            var intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n            this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n          }\n        }, {\n          key: \"isEmptyClip\",\n          value: function isEmptyClip() {\n            return this.minX === Infinity;\n          }\n        }, {\n          key: \"startNewPathAndClipBox\",\n          value: function startNewPathAndClipBox(box) {\n            this.clipBox = box;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = 0;\n            this.maxY = 0;\n          }\n        }, {\n          key: \"getClippedPathBoundingBox\",\n          value: function getClippedPathBoundingBox() {\n            var pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            var transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n          }\n        }]);\n        return CanvasExtraState;\n      }();\n      function putBinaryImageData(ctx, imgData) {\n        var transferMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n          ctx.putImageData(imgData, 0, 0);\n          return;\n        }\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0,\n          destPos;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        var i, j, thisChunkHeight, elemsInThisChunk;\n        var transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n        if (transferMaps) {\n          switch (transferMaps.length) {\n            case 1:\n              transferMapRed = transferMaps[0];\n              transferMapGreen = transferMaps[0];\n              transferMapBlue = transferMaps[0];\n              transferMapGray = transferMaps[0];\n              break;\n            case 4:\n              transferMapRed = transferMaps[0];\n              transferMapGreen = transferMaps[1];\n              transferMapBlue = transferMaps[2];\n              transferMapGray = transferMaps[3];\n              break;\n          }\n        }\n        if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n          var srcLength = src.byteLength;\n          var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n          var dest32DataLength = dest32.length;\n          var fullSrcDiff = width + 7 >> 3;\n          var white = 0xffffffff;\n          var black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n          if (transferMapGray) {\n            if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n              var _ref43 = [black, white];\n              white = _ref43[0];\n              black = _ref43[1];\n            }\n          }\n          for (i = 0; i < totalChunks; i++) {\n            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            destPos = 0;\n            for (j = 0; j < thisChunkHeight; j++) {\n              var srcDiff = srcLength - srcPos;\n              var k = 0;\n              var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n              var kEndUnrolled = kEnd & ~7;\n              var mask = 0;\n              var srcByte = 0;\n              for (; k < kEndUnrolled; k += 8) {\n                srcByte = src[srcPos++];\n                dest32[destPos++] = srcByte & 128 ? white : black;\n                dest32[destPos++] = srcByte & 64 ? white : black;\n                dest32[destPos++] = srcByte & 32 ? white : black;\n                dest32[destPos++] = srcByte & 16 ? white : black;\n                dest32[destPos++] = srcByte & 8 ? white : black;\n                dest32[destPos++] = srcByte & 4 ? white : black;\n                dest32[destPos++] = srcByte & 2 ? white : black;\n                dest32[destPos++] = srcByte & 1 ? white : black;\n              }\n              for (; k < kEnd; k++) {\n                if (mask === 0) {\n                  srcByte = src[srcPos++];\n                  mask = 128;\n                }\n                dest32[destPos++] = srcByte & mask ? white : black;\n                mask >>= 1;\n              }\n            }\n            while (destPos < dest32DataLength) {\n              dest32[destPos++] = 0;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n          var hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n          j = 0;\n          elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n          for (i = 0; i < fullChunks; i++) {\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            srcPos += elemsInThisChunk;\n            if (hasTransferMaps) {\n              for (var _k = 0; _k < elemsInThisChunk; _k += 4) {\n                if (transferMapRed) {\n                  dest[_k + 0] = transferMapRed[dest[_k + 0]];\n                }\n                if (transferMapGreen) {\n                  dest[_k + 1] = transferMapGreen[dest[_k + 1]];\n                }\n                if (transferMapBlue) {\n                  dest[_k + 2] = transferMapBlue[dest[_k + 2]];\n                }\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, j);\n            j += FULL_CHUNK_HEIGHT;\n          }\n          if (i < totalChunks) {\n            elemsInThisChunk = width * partialChunkHeight * 4;\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            if (hasTransferMaps) {\n              for (var _k2 = 0; _k2 < elemsInThisChunk; _k2 += 4) {\n                if (transferMapRed) {\n                  dest[_k2 + 0] = transferMapRed[dest[_k2 + 0]];\n                }\n                if (transferMapGreen) {\n                  dest[_k2 + 1] = transferMapGreen[dest[_k2 + 1]];\n                }\n                if (transferMapBlue) {\n                  dest[_k2 + 2] = transferMapBlue[dest[_k2 + 2]];\n                }\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, j);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n          var _hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n          thisChunkHeight = FULL_CHUNK_HEIGHT;\n          elemsInThisChunk = width * thisChunkHeight;\n          for (i = 0; i < totalChunks; i++) {\n            if (i >= fullChunks) {\n              thisChunkHeight = partialChunkHeight;\n              elemsInThisChunk = width * thisChunkHeight;\n            }\n            destPos = 0;\n            for (j = elemsInThisChunk; j--;) {\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = 255;\n            }\n            if (_hasTransferMaps) {\n              for (var _k3 = 0; _k3 < destPos; _k3 += 4) {\n                if (transferMapRed) {\n                  dest[_k3 + 0] = transferMapRed[dest[_k3 + 0]];\n                }\n                if (transferMapGreen) {\n                  dest[_k3 + 1] = transferMapGreen[dest[_k3 + 1]];\n                }\n                if (transferMapBlue) {\n                  dest[_k3 + 2] = transferMapBlue[dest[_k3 + 2]];\n                }\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else {\n          throw new Error(\"bad image kind: \".concat(imgData.kind));\n        }\n      }\n      function putBinaryImageMask(ctx, imgData) {\n        if (imgData.bitmap) {\n          ctx.drawImage(imgData.bitmap, 0, 0);\n          return;\n        }\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        for (var i = 0; i < totalChunks; i++) {\n          var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          var _ref44 = (0, _image_utils.applyMaskImageData)({\n            src: src,\n            srcPos: srcPos,\n            dest: dest,\n            width: width,\n            height: thisChunkHeight\n          });\n          srcPos = _ref44.srcPos;\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      }\n      function copyCtxState(sourceCtx, destCtx) {\n        var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n        for (var i = 0, ii = properties.length; i < ii; i++) {\n          var property = properties[i];\n          if (sourceCtx[property] !== undefined) {\n            destCtx[property] = sourceCtx[property];\n          }\n        }\n        if (sourceCtx.setLineDash !== undefined) {\n          destCtx.setLineDash(sourceCtx.getLineDash());\n          destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n        }\n      }\n      function resetCtxToDefault(ctx, foregroundColor) {\n        ctx.strokeStyle = ctx.fillStyle = foregroundColor || \"#000000\";\n        ctx.fillRule = \"nonzero\";\n        ctx.globalAlpha = 1;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"butt\";\n        ctx.lineJoin = \"miter\";\n        ctx.miterLimit = 10;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.font = \"10px sans-serif\";\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash([]);\n          ctx.lineDashOffset = 0;\n        }\n      }\n      function composeSMaskBackdrop(bytes, r0, g0, b0) {\n        var length = bytes.length;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = bytes[i];\n          if (alpha === 0) {\n            bytes[i - 3] = r0;\n            bytes[i - 2] = g0;\n            bytes[i - 1] = b0;\n          } else if (alpha < 255) {\n            var alpha_ = 255 - alpha;\n            bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n            bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n            bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n          }\n        }\n      }\n      function composeSMaskAlpha(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        var scale = 1 / 255;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n          layerData[i] = layerData[i] * alpha * scale | 0;\n        }\n      }\n      function composeSMaskLuminosity(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        for (var i = 3; i < length; i += 4) {\n          var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n          layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n        }\n      }\n      function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n        var hasBackdrop = !!backdrop;\n        var r0 = hasBackdrop ? backdrop[0] : 0;\n        var g0 = hasBackdrop ? backdrop[1] : 0;\n        var b0 = hasBackdrop ? backdrop[2] : 0;\n        var composeFn;\n        if (subtype === \"Luminosity\") {\n          composeFn = composeSMaskLuminosity;\n        } else {\n          composeFn = composeSMaskAlpha;\n        }\n        var PIXELS_TO_PROCESS = 1048576;\n        var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n        for (var row = 0; row < height; row += chunkSize) {\n          var chunkHeight = Math.min(chunkSize, height - row);\n          var maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n          var layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n          if (hasBackdrop) {\n            composeSMaskBackdrop(maskData.data, r0, g0, b0);\n          }\n          composeFn(maskData.data, layerData.data, transferMap);\n          layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n        }\n      }\n      function composeSMask(ctx, smask, layerCtx, layerBox) {\n        var layerOffsetX = layerBox[0];\n        var layerOffsetY = layerBox[1];\n        var layerWidth = layerBox[2] - layerOffsetX;\n        var layerHeight = layerBox[3] - layerOffsetY;\n        if (layerWidth === 0 || layerHeight === 0) {\n          return;\n        }\n        genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n        ctx.save();\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.drawImage(layerCtx.canvas, 0, 0);\n        ctx.restore();\n      }\n      function getImageSmoothingEnabled(transform, interpolate) {\n        var scale = _util.Util.singularValueDecompose2dScale(transform);\n        scale[0] = Math.fround(scale[0]);\n        scale[1] = Math.fround(scale[1]);\n        var actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n        if (interpolate !== undefined) {\n          return interpolate;\n        } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n          return true;\n        }\n        return false;\n      }\n      var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      var NORMAL_CLIP = {};\n      var EO_CLIP = {};\n      var _CanvasGraphics_brand = /*#__PURE__*/new WeakSet();\n      var CanvasGraphics = /*#__PURE__*/function () {\n        function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig, annotationCanvasMap, pageColors) {\n          _classCallCheck(this, CanvasGraphics);\n          _classPrivateMethodInitSpec(this, _CanvasGraphics_brand);\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.suspendedCtx = null;\n          this.contentVisible = true;\n          this.markedContentStack = [];\n          this.optionalContentConfig = optionalContentConfig;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n          this.cachedPatterns = new Map();\n          this.annotationCanvasMap = annotationCanvasMap;\n          this.viewportScale = 1;\n          this.outputScaleX = 1;\n          this.outputScaleY = 1;\n          this.backgroundColor = (pageColors === null || pageColors === void 0 ? void 0 : pageColors.background) || null;\n          this.foregroundColor = (pageColors === null || pageColors === void 0 ? void 0 : pageColors.foreground) || null;\n          this._cachedScaleForStroking = null;\n          this._cachedGetSinglePixelWidth = null;\n          this._cachedBitmapsMap = new Map();\n        }\n        _createClass(CanvasGraphics, [{\n          key: \"getObject\",\n          value: function getObject(data) {\n            var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n            return fallback;\n          }\n        }, {\n          key: \"beginDrawing\",\n          value: function beginDrawing(_ref45) {\n            var _this$ctx3;\n            var transform = _ref45.transform,\n              viewport = _ref45.viewport,\n              _ref45$transparency = _ref45.transparency,\n              transparency = _ref45$transparency === void 0 ? false : _ref45$transparency,\n              _ref45$background = _ref45.background,\n              background = _ref45$background === void 0 ? null : _ref45$background;\n            var width = this.ctx.canvas.width;\n            var height = this.ctx.canvas.height;\n            var defaultBackgroundColor = background || \"#ffffff\";\n            this.ctx.save();\n            if (this.foregroundColor && this.backgroundColor) {\n              this.ctx.fillStyle = this.foregroundColor;\n              var fg = this.foregroundColor = this.ctx.fillStyle;\n              this.ctx.fillStyle = this.backgroundColor;\n              var bg = this.backgroundColor = this.ctx.fillStyle;\n              var isValidDefaultBg = true;\n              var defaultBg = defaultBackgroundColor;\n              this.ctx.fillStyle = defaultBackgroundColor;\n              defaultBg = this.ctx.fillStyle;\n              isValidDefaultBg = typeof defaultBg === \"string\" && /^#[0-9A-Fa-f]{6}$/.test(defaultBg);\n              if (fg === \"#000000\" && bg === \"#ffffff\" || fg === bg || !isValidDefaultBg) {\n                this.foregroundColor = this.backgroundColor = null;\n              } else {\n                var _ref46 = (0, _display_utils.getRGB)(defaultBg),\n                  _ref47 = _slicedToArray(_ref46, 3),\n                  rB = _ref47[0],\n                  gB = _ref47[1],\n                  bB = _ref47[2];\n                var newComp = function newComp(x) {\n                  x /= 255;\n                  return x <= 0.03928 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n                };\n                var lumB = Math.round(0.2126 * newComp(rB) + 0.7152 * newComp(gB) + 0.0722 * newComp(bB));\n                this.selectColor = function (r, g, b) {\n                  var lumC = 0.2126 * newComp(r) + 0.7152 * newComp(g) + 0.0722 * newComp(b);\n                  return Math.round(lumC) === lumB ? bg : fg;\n                };\n              }\n            }\n            this.ctx.fillStyle = this.backgroundColor || defaultBackgroundColor;\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n            if (transparency) {\n              var _this$ctx;\n              var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              (_this$ctx = this.ctx).transform.apply(_this$ctx, _toConsumableArray((0, _display_utils.getCurrentTransform)(this.compositeCtx)));\n            }\n            this.ctx.save();\n            resetCtxToDefault(this.ctx, this.foregroundColor);\n            if (transform) {\n              var _this$ctx2;\n              (_this$ctx2 = this.ctx).transform.apply(_this$ctx2, _toConsumableArray(transform));\n              this.outputScaleX = transform[0];\n              this.outputScaleY = transform[0];\n            }\n            (_this$ctx3 = this.ctx).transform.apply(_this$ctx3, _toConsumableArray(viewport.transform));\n            this.viewportScale = viewport.scale;\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n            if (this.imageLayer) {\n              (0, _display_utils.deprecated)(\"The `imageLayer` functionality will be removed in the future.\");\n              this.imageLayer.beginLayout();\n            }\n          }\n        }, {\n          key: \"executeOperatorList\",\n          value: function executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var i = executionStartIdx || 0;\n            var argsArrayLen = argsArray.length;\n            if (argsArrayLen === i) {\n              return i;\n            }\n            var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            var steps = 0;\n            var commonObjs = this.commonObjs;\n            var objs = this.objs;\n            var fnId;\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n              fnId = fnArray[i];\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                var _iterator51 = _createForOfIteratorHelper(argsArray[i]),\n                  _step51;\n                try {\n                  for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n                    var depObjId = _step51.value;\n                    var objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                    if (!objsPool.has(depObjId)) {\n                      objsPool.get(depObjId, continueCallback);\n                      return i;\n                    }\n                  }\n                } catch (err) {\n                  _iterator51.e(err);\n                } finally {\n                  _iterator51.f();\n                }\n              }\n              i++;\n              if (i === argsArrayLen) {\n                return i;\n              }\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n                steps = 0;\n              }\n            }\n          }\n        }, {\n          key: \"endDrawing\",\n          value: function endDrawing() {\n            _assertClassBrand(_CanvasGraphics_brand, this, _restoreInitialState).call(this);\n            this.cachedCanvases.clear();\n            this.cachedPatterns.clear();\n            var _iterator52 = _createForOfIteratorHelper(this._cachedBitmapsMap.values()),\n              _step52;\n            try {\n              for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n                var cache = _step52.value;\n                var _iterator53 = _createForOfIteratorHelper(cache.values()),\n                  _step53;\n                try {\n                  for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n                    var canvas = _step53.value;\n                    if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n                      canvas.width = canvas.height = 0;\n                    }\n                  }\n                } catch (err) {\n                  _iterator53.e(err);\n                } finally {\n                  _iterator53.f();\n                }\n                cache.clear();\n              }\n            } catch (err) {\n              _iterator52.e(err);\n            } finally {\n              _iterator52.f();\n            }\n            this._cachedBitmapsMap.clear();\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          }\n        }, {\n          key: \"_scaleImage\",\n          value: function _scaleImage(img, inverseTransform) {\n            var width = img.width;\n            var height = img.height;\n            var widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n            var heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n            var paintWidth = width,\n              paintHeight = height;\n            var tmpCanvasId = \"prescale1\";\n            var tmpCanvas, tmpCtx;\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              var newWidth = paintWidth,\n                newHeight = paintHeight;\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              img = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n            return {\n              img: img,\n              paintWidth: paintWidth,\n              paintHeight: paintHeight\n            };\n          }\n        }, {\n          key: \"_createMaskCanvas\",\n          value: function _createMaskCanvas(img) {\n            var ctx = this.ctx;\n            var width = img.width,\n              height = img.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            var cache, cacheKey, scaled, maskCanvas;\n            if ((img.bitmap || img.data) && img.count > 1) {\n              var mainKey = img.bitmap || img.data.buffer;\n              var withoutTranslation = currentTransform.slice(0, 4);\n              cacheKey = JSON.stringify(isPatternFill ? withoutTranslation : [withoutTranslation, fillColor]);\n              cache = this._cachedBitmapsMap.get(mainKey);\n              if (!cache) {\n                cache = new Map();\n                this._cachedBitmapsMap.set(mainKey, cache);\n              }\n              var cachedImage = cache.get(cacheKey);\n              if (cachedImage && !isPatternFill) {\n                var _offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n                var _offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n                return {\n                  canvas: cachedImage,\n                  offsetX: _offsetX,\n                  offsetY: _offsetY\n                };\n              }\n              scaled = cachedImage;\n            }\n            if (!scaled) {\n              maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              putBinaryImageMask(maskCanvas.context, img);\n            }\n            var maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n            maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n            var cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n            var cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n            var rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n            var drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n            var drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n            var fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n            var fillCtx = fillCanvas.context;\n            var offsetX = Math.min(cord1[0], cord2[0]);\n            var offsetY = Math.min(cord1[1], cord2[1]);\n            fillCtx.translate(-offsetX, -offsetY);\n            fillCtx.transform.apply(fillCtx, _toConsumableArray(maskToCanvas));\n            if (!scaled) {\n              scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n              scaled = scaled.img;\n              if (cache && isPatternFill) {\n                cache.set(cacheKey, scaled);\n              }\n            }\n            fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n            drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n            fillCtx.globalCompositeOperation = \"source-in\";\n            var inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n            fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n            fillCtx.fillRect(0, 0, width, height);\n            if (cache && !isPatternFill) {\n              this.cachedCanvases.delete(\"fillCanvas\");\n              cache.set(cacheKey, fillCanvas.canvas);\n            }\n            return {\n              canvas: fillCanvas.canvas,\n              offsetX: Math.round(offsetX),\n              offsetY: Math.round(offsetY)\n            };\n          }\n        }, {\n          key: \"setLineWidth\",\n          value: function setLineWidth(width) {\n            if (width !== this.current.lineWidth) {\n              this._cachedScaleForStroking = null;\n            }\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          }\n        }, {\n          key: \"setLineCap\",\n          value: function setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          }\n        }, {\n          key: \"setLineJoin\",\n          value: function setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          }\n        }, {\n          key: \"setMiterLimit\",\n          value: function setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          }\n        }, {\n          key: \"setDash\",\n          value: function setDash(dashArray, dashPhase) {\n            var ctx = this.ctx;\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          }\n        }, {\n          key: \"setRenderingIntent\",\n          value: function setRenderingIntent(intent) {}\n        }, {\n          key: \"setFlatness\",\n          value: function setFlatness(flatness) {}\n        }, {\n          key: \"setGState\",\n          value: function setGState(states) {\n            for (var i = 0, ii = states.length; i < ii; i++) {\n              var state = states[i];\n              var key = state[0];\n              var value = state[1];\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n                case \"SMask\":\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  this.tempSMask = null;\n                  this.checkSMaskState();\n                  break;\n                case \"TR\":\n                  this.current.transferMaps = value;\n              }\n            }\n          }\n        }, {\n          key: \"inSMaskMode\",\n          get: function get() {\n            return !!this.suspendedCtx;\n          }\n        }, {\n          key: \"checkSMaskState\",\n          value: function checkSMaskState() {\n            var inSMaskMode = this.inSMaskMode;\n            if (this.current.activeSMask && !inSMaskMode) {\n              this.beginSMaskMode();\n            } else if (!this.current.activeSMask && inSMaskMode) {\n              this.endSMaskMode();\n            }\n          }\n        }, {\n          key: \"beginSMaskMode\",\n          value: function beginSMaskMode() {\n            if (this.inSMaskMode) {\n              throw new Error(\"beginSMaskMode called while already in smask mode\");\n            }\n            var drawnWidth = this.ctx.canvas.width;\n            var drawnHeight = this.ctx.canvas.height;\n            var cacheId = \"smaskGroupAt\" + this.groupLevel;\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            this.suspendedCtx = this.ctx;\n            this.ctx = scratchCanvas.context;\n            var ctx = this.ctx;\n            ctx.setTransform.apply(ctx, _toConsumableArray((0, _display_utils.getCurrentTransform)(this.suspendedCtx)));\n            copyCtxState(this.suspendedCtx, ctx);\n            mirrorContextOperations(ctx, this.suspendedCtx);\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          }\n        }, {\n          key: \"endSMaskMode\",\n          value: function endSMaskMode() {\n            if (!this.inSMaskMode) {\n              throw new Error(\"endSMaskMode called while not in smask mode\");\n            }\n            this.ctx._removeMirroring();\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.ctx = this.suspendedCtx;\n            this.suspendedCtx = null;\n          }\n        }, {\n          key: \"compose\",\n          value: function compose(dirtyBox) {\n            if (!this.current.activeSMask) {\n              return;\n            }\n            if (!dirtyBox) {\n              dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n            } else {\n              dirtyBox[0] = Math.floor(dirtyBox[0]);\n              dirtyBox[1] = Math.floor(dirtyBox[1]);\n              dirtyBox[2] = Math.ceil(dirtyBox[2]);\n              dirtyBox[3] = Math.ceil(dirtyBox[3]);\n            }\n            var smask = this.current.activeSMask;\n            var suspendedCtx = this.suspendedCtx;\n            composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n            this.ctx.restore();\n          }\n        }, {\n          key: \"save\",\n          value: function save() {\n            if (this.inSMaskMode) {\n              copyCtxState(this.ctx, this.suspendedCtx);\n              this.suspendedCtx.save();\n            } else {\n              this.ctx.save();\n            }\n            var old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n          }\n        }, {\n          key: \"restore\",\n          value: function restore() {\n            if (this.stateStack.length === 0 && this.inSMaskMode) {\n              this.endSMaskMode();\n            }\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              if (this.inSMaskMode) {\n                this.suspendedCtx.restore();\n                copyCtxState(this.suspendedCtx, this.ctx);\n              } else {\n                this.ctx.restore();\n              }\n              this.checkSMaskState();\n              this.pendingClip = null;\n              this._cachedScaleForStroking = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedScaleForStroking = null;\n            this._cachedGetSinglePixelWidth = null;\n          }\n        }, {\n          key: \"constructPath\",\n          value: function constructPath(ops, args, minMax) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var x = current.x,\n              y = current.y;\n            var startX, startY;\n            var currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            var isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n            var minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n            for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  var width = args[j++];\n                  var height = args[j++];\n                  var xw = x + width;\n                  var yh = y + height;\n                  ctx.moveTo(x, y);\n                  if (width === 0 || height === 0) {\n                    ctx.lineTo(xw, yh);\n                  } else {\n                    ctx.lineTo(xw, y);\n                    ctx.lineTo(xw, yh);\n                    ctx.lineTo(x, yh);\n                  }\n                  if (!isScalingMatrix) {\n                    current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n                  }\n                  ctx.closePath();\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n                  break;\n                case _util.OPS.curveTo:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  startX = x;\n                  startY = y;\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n            if (isScalingMatrix) {\n              current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n            }\n            current.setCurrentPoint(x, y);\n          }\n        }, {\n          key: \"closePath\",\n          value: function closePath() {\n            this.ctx.closePath();\n          }\n        }, {\n          key: \"stroke\",\n          value: function stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n            if (this.contentVisible) {\n              if (typeof strokeColor === \"object\" && strokeColor !== null && strokeColor !== void 0 && strokeColor.getPattern) {\n                ctx.save();\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n                this.rescaleAndStroke(false);\n                ctx.restore();\n              } else {\n                this.rescaleAndStroke(true);\n              }\n            }\n            if (consumePath) {\n              this.consumePath(this.current.getClippedPathBoundingBox());\n            }\n            ctx.globalAlpha = this.current.fillAlpha;\n          }\n        }, {\n          key: \"closeStroke\",\n          value: function closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n        }, {\n          key: \"fill\",\n          value: function fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var needRestore = false;\n            if (isPatternFill) {\n              ctx.save();\n              ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              needRestore = true;\n            }\n            var intersect = this.current.getClippedPathBoundingBox();\n            if (this.contentVisible && intersect !== null) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n            if (needRestore) {\n              ctx.restore();\n            }\n            if (consumePath) {\n              this.consumePath(intersect);\n            }\n          }\n        }, {\n          key: \"eoFill\",\n          value: function eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          }\n        }, {\n          key: \"fillStroke\",\n          value: function fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          }\n        }, {\n          key: \"eoFillStroke\",\n          value: function eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          }\n        }, {\n          key: \"closeFillStroke\",\n          value: function closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n        }, {\n          key: \"closeEOFillStroke\",\n          value: function closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          }\n        }, {\n          key: \"endPath\",\n          value: function endPath() {\n            this.consumePath();\n          }\n        }, {\n          key: \"clip\",\n          value: function clip() {\n            this.pendingClip = NORMAL_CLIP;\n          }\n        }, {\n          key: \"eoClip\",\n          value: function eoClip() {\n            this.pendingClip = EO_CLIP;\n          }\n        }, {\n          key: \"beginText\",\n          value: function beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n        }, {\n          key: \"endText\",\n          value: function endText() {\n            var paths = this.pendingTextPaths;\n            var ctx = this.ctx;\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            var _iterator54 = _createForOfIteratorHelper(paths),\n              _step54;\n            try {\n              for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n                var path = _step54.value;\n                ctx.setTransform.apply(ctx, _toConsumableArray(path.transform));\n                ctx.translate(path.x, path.y);\n                path.addToPath(ctx, path.fontSize);\n              }\n            } catch (err) {\n              _iterator54.e(err);\n            } finally {\n              _iterator54.f();\n            }\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          }\n        }, {\n          key: \"setCharSpacing\",\n          value: function setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          }\n        }, {\n          key: \"setWordSpacing\",\n          value: function setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          }\n        }, {\n          key: \"setHScale\",\n          value: function setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n        }, {\n          key: \"setLeading\",\n          value: function setLeading(leading) {\n            this.current.leading = -leading;\n          }\n        }, {\n          key: \"setFont\",\n          value: function setFont(fontRefName, size) {\n            var fontObj = this.commonObjs.get(fontRefName);\n            var current = this.current;\n            if (!fontObj) {\n              throw new Error(\"Can't find font for \".concat(fontRefName));\n            }\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n            if (fontObj.isType3Font) {\n              return;\n            }\n            var name = fontObj.loadedName || \"sans-serif\";\n            var bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            var typeface = \"\\\"\".concat(name, \"\\\", \").concat(fontObj.fallbackName);\n            var browserFontSize = size;\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = \"\".concat(italic, \" \").concat(bold, \" \").concat(browserFontSize, \"px \").concat(typeface);\n          }\n        }, {\n          key: \"setTextRenderingMode\",\n          value: function setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          }\n        }, {\n          key: \"setTextRise\",\n          value: function setTextRise(rise) {\n            this.current.textRise = rise;\n          }\n        }, {\n          key: \"moveText\",\n          value: function moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          }\n        }, {\n          key: \"setLeadingMoveText\",\n          value: function setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n        }, {\n          key: \"setTextMatrix\",\n          value: function setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.hypot(a, b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n        }, {\n          key: \"nextLine\",\n          value: function nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n        }, {\n          key: \"paintChar\",\n          value: function paintChar(character, x, y, patternTransform) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var textRenderingMode = current.textRenderingMode;\n            var fontSize = current.fontSize / current.fontSizeScale;\n            var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            var patternFill = current.patternFill && !font.missingFile;\n            var addToPath;\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, _toConsumableArray(patternTransform));\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n            if (isAddToPathSet) {\n              var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: (0, _display_utils.getCurrentTransform)(ctx),\n                x: x,\n                y: y,\n                fontSize: fontSize,\n                addToPath: addToPath\n              });\n            }\n          }\n        }, {\n          key: \"isFontSubpixelAAEnabled\",\n          get: function get() {\n            var _this$cachedCanvases$ = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10),\n              ctx = _this$cachedCanvases$.context;\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            var data = ctx.getImageData(0, 0, 10, 10).data;\n            var enabled = false;\n            for (var i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          }\n        }, {\n          key: \"showText\",\n          value: function showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n            var fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return undefined;\n            }\n            var ctx = this.ctx;\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var glyphsLength = glyphs.length;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            ctx.transform.apply(ctx, _toConsumableArray(current.textMatrix));\n            ctx.translate(current.x, current.y + current.textRise);\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n            var patternTransform;\n            if (current.patternFill) {\n              ctx.save();\n              var pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n            var lineWidth = current.lineWidth;\n            var scale = current.textMatrixScale;\n            if (scale === 0 || lineWidth === 0) {\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                lineWidth = this.getSinglePixelWidth();\n              }\n            } else {\n              lineWidth /= scale;\n            }\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n            ctx.lineWidth = lineWidth;\n            var x = 0,\n              i;\n            for (i = 0; i < glyphsLength; ++i) {\n              var glyph = glyphs[i];\n              if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              var restoreNeeded = false;\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var character = glyph.fontChar;\n              var accent = glyph.accent;\n              var scaledX = void 0,\n                scaledY = void 0;\n              var width = glyph.width;\n              if (vertical) {\n                var vmetric = glyph.vmetric || defaultVMetrics;\n                var vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                var vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (font.remeasure && width > 0) {\n                var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  var characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n                  if (accent) {\n                    var scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    var scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n              var charWidth = void 0;\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n              x += charWidth;\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            ctx.restore();\n            this.compose();\n            return undefined;\n          }\n        }, {\n          key: \"showType3Text\",\n          value: function showType3Text(glyphs) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            var fontDirection = current.fontDirection;\n            var spacingDir = font.vertical ? 1 : -1;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var textHScale = current.textHScale * fontDirection;\n            var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            var glyphsLength = glyphs.length;\n            var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            var i, glyph, width, spacingLength;\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n            this._cachedScaleForStroking = null;\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, _toConsumableArray(current.textMatrix));\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n              if (typeof glyph === \"number\") {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var operatorList = font.charProcOperatorList[glyph.operatorListId];\n              if (!operatorList) {\n                (0, _util.warn)(\"Type3 character \\\"\".concat(glyph.operatorListId, \"\\\" is not available.\"));\n                continue;\n              }\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform.apply(ctx, _toConsumableArray(fontMatrix));\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n              var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n            ctx.restore();\n            this.processingType3 = null;\n          }\n        }, {\n          key: \"setCharWidth\",\n          value: function setCharWidth(xWidth, yWidth) {}\n        }, {\n          key: \"setCharWidthAndBounds\",\n          value: function setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.ctx.clip();\n            this.endPath();\n          }\n        }, {\n          key: \"getColorN_Pattern\",\n          value: function getColorN_Pattern(IR) {\n            var _this30 = this;\n            var pattern;\n            if (IR[0] === \"TilingPattern\") {\n              var color = IR[1];\n              var baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n              var canvasGraphicsFactory = {\n                createCanvasGraphics: function createCanvasGraphics(ctx) {\n                  return new CanvasGraphics(ctx, _this30.commonObjs, _this30.objs, _this30.canvasFactory);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = this._getPattern(IR[1], IR[2]);\n            }\n            return pattern;\n          }\n        }, {\n          key: \"setStrokeColorN\",\n          value: function setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          }\n        }, {\n          key: \"setFillColorN\",\n          value: function setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          }\n        }, {\n          key: \"setStrokeRGBColor\",\n          value: function setStrokeRGBColor(r, g, b) {\n            var _this$selectColor;\n            var color = ((_this$selectColor = this.selectColor) === null || _this$selectColor === void 0 ? void 0 : _this$selectColor.call(this, r, g, b)) || _util.Util.makeHexColor(r, g, b);\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          }\n        }, {\n          key: \"setFillRGBColor\",\n          value: function setFillRGBColor(r, g, b) {\n            var _this$selectColor2;\n            var color = ((_this$selectColor2 = this.selectColor) === null || _this$selectColor2 === void 0 ? void 0 : _this$selectColor2.call(this, r, g, b)) || _util.Util.makeHexColor(r, g, b);\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          }\n        }, {\n          key: \"_getPattern\",\n          value: function _getPattern(objId) {\n            var matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var pattern;\n            if (this.cachedPatterns.has(objId)) {\n              pattern = this.cachedPatterns.get(objId);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPattern)(this.objs.get(objId));\n              this.cachedPatterns.set(objId, pattern);\n            }\n            if (matrix) {\n              pattern.matrix = matrix;\n            }\n            return pattern;\n          }\n        }, {\n          key: \"shadingFill\",\n          value: function shadingFill(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var ctx = this.ctx;\n            this.save();\n            var pattern = this._getPattern(objId);\n            ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n            var inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n            if (inv) {\n              var canvas = ctx.canvas;\n              var width = canvas.width;\n              var height = canvas.height;\n              var bl = _util.Util.applyTransform([0, 0], inv);\n              var br = _util.Util.applyTransform([0, height], inv);\n              var ul = _util.Util.applyTransform([width, 0], inv);\n              var ur = _util.Util.applyTransform([width, height], inv);\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n            this.compose(this.current.getClippedPathBoundingBox());\n            this.restore();\n          }\n        }, {\n          key: \"beginInlineImage\",\n          value: function beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          }\n        }, {\n          key: \"beginImageData\",\n          value: function beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          }\n        }, {\n          key: \"paintFormXObjectBegin\",\n          value: function paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, _toConsumableArray(matrix));\n            }\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n              this.clip();\n              this.endPath();\n            }\n          }\n        }, {\n          key: \"paintFormXObjectEnd\",\n          value: function paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          }\n        }, {\n          key: \"beginGroup\",\n          value: function beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.save();\n            if (this.inSMaskMode) {\n              this.endSMaskMode();\n              this.current.activeSMask = null;\n            }\n            var currentCtx = this.ctx;\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n            var currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, _toConsumableArray(group.matrix));\n            }\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n            var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n            var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            var offsetX = Math.floor(bounds[0]);\n            var offsetY = Math.floor(bounds[1]);\n            var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            var scaleX = 1,\n              scaleY = 1;\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n            this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n            var cacheId = \"groupAt\" + this.groupLevel;\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, _toConsumableArray(currentTransform));\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n              currentCtx.save();\n            }\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          }\n        }, {\n          key: \"endGroup\",\n          value: function endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.groupLevel--;\n            var groupCtx = this.ctx;\n            var ctx = this.groupStack.pop();\n            this.ctx = ctx;\n            this.ctx.imageSmoothingEnabled = false;\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n              this.restore();\n            } else {\n              var _this$ctx4;\n              this.ctx.restore();\n              var currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n              this.restore();\n              this.ctx.save();\n              (_this$ctx4 = this.ctx).setTransform.apply(_this$ctx4, _toConsumableArray(currentMtx));\n              var dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n              this.ctx.restore();\n              this.compose(dirtyBox);\n            }\n          }\n        }, {\n          key: \"beginAnnotation\",\n          value: function beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n            _assertClassBrand(_CanvasGraphics_brand, this, _restoreInitialState).call(this);\n            resetCtxToDefault(this.ctx, this.foregroundColor);\n            this.ctx.save();\n            this.save();\n            if (this.baseTransform) {\n              var _this$ctx5;\n              (_this$ctx5 = this.ctx).setTransform.apply(_this$ctx5, _toConsumableArray(this.baseTransform));\n            }\n            if (Array.isArray(rect) && rect.length === 4) {\n              var width = rect[2] - rect[0];\n              var height = rect[3] - rect[1];\n              if (hasOwnCanvas && this.annotationCanvasMap) {\n                transform = transform.slice();\n                transform[4] -= rect[0];\n                transform[5] -= rect[1];\n                rect = rect.slice();\n                rect[0] = rect[1] = 0;\n                rect[2] = width;\n                rect[3] = height;\n                var _util$Util$singularVa = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx)),\n                  _util$Util$singularVa2 = _slicedToArray(_util$Util$singularVa, 2),\n                  scaleX = _util$Util$singularVa2[0],\n                  scaleY = _util$Util$singularVa2[1];\n                var viewportScale = this.viewportScale;\n                var canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                var canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                var _this$annotationCanva = this.annotationCanvas,\n                  canvas = _this$annotationCanva.canvas,\n                  context = _this$annotationCanva.context;\n                this.annotationCanvasMap.set(id, canvas);\n                this.annotationCanvas.savedCtx = this.ctx;\n                this.ctx = context;\n                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                resetCtxToDefault(this.ctx, this.foregroundColor);\n              } else {\n                resetCtxToDefault(this.ctx, this.foregroundColor);\n                this.ctx.rect(rect[0], rect[1], width, height);\n                this.ctx.clip();\n                this.endPath();\n              }\n            }\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.transform.apply(this, _toConsumableArray(transform));\n            this.transform.apply(this, _toConsumableArray(matrix));\n          }\n        }, {\n          key: \"endAnnotation\",\n          value: function endAnnotation() {\n            if (this.annotationCanvas) {\n              this.ctx = this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas;\n            }\n          }\n        }, {\n          key: \"paintImageMaskXObject\",\n          value: function paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var count = img.count;\n            img = this.getObject(img.data, img);\n            img.count = count;\n            var ctx = this.ctx;\n            var glyph = this.processingType3;\n            if (glyph) {\n              if (glyph.compiled === undefined) {\n                glyph.compiled = compileType3Glyph(img);\n              }\n              if (glyph.compiled) {\n                glyph.compiled(ctx);\n                return;\n              }\n            }\n            var mask = this._createMaskCanvas(img);\n            var maskCanvas = mask.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n            ctx.restore();\n            this.compose();\n          }\n        }, {\n          key: \"paintImageMaskXObjectRepeat\",\n          value: function paintImageMaskXObjectRepeat(img, scaleX) {\n            var skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            var skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            var positions = arguments.length > 5 ? arguments[5] : undefined;\n            if (!this.contentVisible) {\n              return;\n            }\n            img = this.getObject(img.data, img);\n            var ctx = this.ctx;\n            ctx.save();\n            var currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n            var mask = this._createMaskCanvas(img);\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              var trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n              var _util$Util$applyTrans3 = _util.Util.applyTransform([0, 0], trans),\n                _util$Util$applyTrans4 = _slicedToArray(_util$Util$applyTrans3, 2),\n                x = _util$Util$applyTrans4[0],\n                y = _util$Util$applyTrans4[1];\n              ctx.drawImage(mask.canvas, x, y);\n            }\n            ctx.restore();\n            this.compose();\n          }\n        }, {\n          key: \"paintImageMaskXObjectGroup\",\n          value: function paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var _iterator55 = _createForOfIteratorHelper(images),\n              _step55;\n            try {\n              for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n                var image = _step55.value;\n                var data = image.data,\n                  width = image.width,\n                  height = image.height,\n                  transform = image.transform;\n                var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n                var maskCtx = maskCanvas.context;\n                maskCtx.save();\n                var img = this.getObject(data, image);\n                putBinaryImageMask(maskCtx, img);\n                maskCtx.globalCompositeOperation = \"source-in\";\n                maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n                maskCtx.fillRect(0, 0, width, height);\n                maskCtx.restore();\n                ctx.save();\n                ctx.transform.apply(ctx, _toConsumableArray(transform));\n                ctx.scale(1, -1);\n                drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n                ctx.restore();\n              }\n            } catch (err) {\n              _iterator55.e(err);\n            } finally {\n              _iterator55.f();\n            }\n            this.compose();\n          }\n        }, {\n          key: \"paintImageXObject\",\n          value: function paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n        }, {\n          key: \"paintImageXObjectRepeat\",\n          value: function paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            var width = imgData.width;\n            var height = imgData.height;\n            var map = [];\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n            this.paintInlineImageXObjectGroup(imgData, map);\n          }\n        }, {\n          key: \"paintInlineImageXObject\",\n          value: function paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var width = imgData.width;\n            var height = imgData.height;\n            var ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            var imgToPaint;\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              var tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n              imgToPaint = tmpCanvas.canvas;\n            }\n            var scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n            ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n            var _drawImageAtIntegerCo = drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height),\n              _drawImageAtIntegerCo2 = _slicedToArray(_drawImageAtIntegerCo, 2),\n              rWidth = _drawImageAtIntegerCo2[0],\n              rHeight = _drawImageAtIntegerCo2[1];\n            if (this.imageLayer) {\n              var _util$Util$applyTrans5 = _util.Util.applyTransform([0, -height], (0, _display_utils.getCurrentTransform)(this.ctx)),\n                _util$Util$applyTrans6 = _slicedToArray(_util$Util$applyTrans5, 2),\n                left = _util$Util$applyTrans6[0],\n                top = _util$Util$applyTrans6[1];\n              this.imageLayer.appendImage({\n                imgData: imgData,\n                left: left,\n                top: top,\n                width: rWidth,\n                height: rHeight\n              });\n            }\n            this.compose();\n            this.restore();\n          }\n        }, {\n          key: \"paintInlineImageXObjectGroup\",\n          value: function paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n            var ctx = this.ctx;\n            var w = imgData.width;\n            var h = imgData.height;\n            var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n            var _iterator56 = _createForOfIteratorHelper(map),\n              _step56;\n            try {\n              for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n                var entry = _step56.value;\n                ctx.save();\n                ctx.transform.apply(ctx, _toConsumableArray(entry.transform));\n                ctx.scale(1, -1);\n                drawImageAtIntegerCoords(ctx, tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n                if (this.imageLayer) {\n                  var _util$Util$applyTrans7 = _util.Util.applyTransform([entry.x, entry.y], (0, _display_utils.getCurrentTransform)(this.ctx)),\n                    _util$Util$applyTrans8 = _slicedToArray(_util$Util$applyTrans7, 2),\n                    left = _util$Util$applyTrans8[0],\n                    top = _util$Util$applyTrans8[1];\n                  this.imageLayer.appendImage({\n                    imgData: imgData,\n                    left: left,\n                    top: top,\n                    width: w,\n                    height: h\n                  });\n                }\n                ctx.restore();\n              }\n            } catch (err) {\n              _iterator56.e(err);\n            } finally {\n              _iterator56.f();\n            }\n            this.compose();\n          }\n        }, {\n          key: \"paintSolidColorImageMask\",\n          value: function paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.ctx.fillRect(0, 0, 1, 1);\n            this.compose();\n          }\n        }, {\n          key: \"markPoint\",\n          value: function markPoint(tag) {}\n        }, {\n          key: \"markPointProps\",\n          value: function markPointProps(tag, properties) {}\n        }, {\n          key: \"beginMarkedContent\",\n          value: function beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n        }, {\n          key: \"beginMarkedContentProps\",\n          value: function beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n            this.contentVisible = this.isContentVisible();\n          }\n        }, {\n          key: \"endMarkedContent\",\n          value: function endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          }\n        }, {\n          key: \"beginCompat\",\n          value: function beginCompat() {}\n        }, {\n          key: \"endCompat\",\n          value: function endCompat() {}\n        }, {\n          key: \"consumePath\",\n          value: function consumePath(clipBox) {\n            var isEmpty = this.current.isEmptyClip();\n            if (this.pendingClip) {\n              this.current.updateClipFromPath();\n            }\n            if (!this.pendingClip) {\n              this.compose(clipBox);\n            }\n            var ctx = this.ctx;\n            if (this.pendingClip) {\n              if (!isEmpty) {\n                if (this.pendingClip === EO_CLIP) {\n                  ctx.clip(\"evenodd\");\n                } else {\n                  ctx.clip();\n                }\n              }\n              this.pendingClip = null;\n            }\n            this.current.startNewPathAndClipBox(this.current.clipBox);\n            ctx.beginPath();\n          }\n        }, {\n          key: \"getSinglePixelWidth\",\n          value: function getSinglePixelWidth() {\n            if (!this._cachedGetSinglePixelWidth) {\n              var m = (0, _display_utils.getCurrentTransform)(this.ctx);\n              if (m[1] === 0 && m[2] === 0) {\n                this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n              } else {\n                var absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                var normX = Math.hypot(m[0], m[2]);\n                var normY = Math.hypot(m[1], m[3]);\n                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n              }\n            }\n            return this._cachedGetSinglePixelWidth;\n          }\n        }, {\n          key: \"getScaleForStroking\",\n          value: function getScaleForStroking() {\n            if (!this._cachedScaleForStroking) {\n              var lineWidth = this.current.lineWidth;\n              var m = (0, _display_utils.getCurrentTransform)(this.ctx);\n              var scaleX, scaleY;\n              if (m[1] === 0 && m[2] === 0) {\n                var normX = Math.abs(m[0]);\n                var normY = Math.abs(m[3]);\n                if (lineWidth === 0) {\n                  scaleX = 1 / normX;\n                  scaleY = 1 / normY;\n                } else {\n                  var scaledXLineWidth = normX * lineWidth;\n                  var scaledYLineWidth = normY * lineWidth;\n                  scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n                  scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n                }\n              } else {\n                var absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                var _normX = Math.hypot(m[0], m[1]);\n                var _normY = Math.hypot(m[2], m[3]);\n                if (lineWidth === 0) {\n                  scaleX = _normY / absDet;\n                  scaleY = _normX / absDet;\n                } else {\n                  var baseArea = lineWidth * absDet;\n                  scaleX = _normY > baseArea ? _normY / baseArea : 1;\n                  scaleY = _normX > baseArea ? _normX / baseArea : 1;\n                }\n              }\n              this._cachedScaleForStroking = [scaleX, scaleY];\n            }\n            return this._cachedScaleForStroking;\n          }\n        }, {\n          key: \"rescaleAndStroke\",\n          value: function rescaleAndStroke(saveRestore) {\n            var ctx = this.ctx;\n            var lineWidth = this.current.lineWidth;\n            var _this$getScaleForStro = this.getScaleForStroking(),\n              _this$getScaleForStro2 = _slicedToArray(_this$getScaleForStro, 2),\n              scaleX = _this$getScaleForStro2[0],\n              scaleY = _this$getScaleForStro2[1];\n            ctx.lineWidth = lineWidth || 1;\n            if (scaleX === 1 && scaleY === 1) {\n              ctx.stroke();\n              return;\n            }\n            var savedMatrix, savedDashes, savedDashOffset;\n            if (saveRestore) {\n              savedMatrix = (0, _display_utils.getCurrentTransform)(ctx);\n              savedDashes = ctx.getLineDash().slice();\n              savedDashOffset = ctx.lineDashOffset;\n            }\n            ctx.scale(scaleX, scaleY);\n            var scale = Math.max(scaleX, scaleY);\n            ctx.setLineDash(ctx.getLineDash().map(function (x) {\n              return x / scale;\n            }));\n            ctx.lineDashOffset /= scale;\n            ctx.stroke();\n            if (saveRestore) {\n              ctx.setTransform.apply(ctx, _toConsumableArray(savedMatrix));\n              ctx.setLineDash(savedDashes);\n              ctx.lineDashOffset = savedDashOffset;\n            }\n          }\n        }, {\n          key: \"isContentVisible\",\n          value: function isContentVisible() {\n            for (var i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n            return true;\n          }\n        }]);\n        return CanvasGraphics;\n      }();\n      function _restoreInitialState() {\n        while (this.stateStack.length || this.inSMaskMode) {\n          this.restore();\n        }\n        this.ctx.restore();\n        if (this.transparentCanvas) {\n          this.ctx = this.compositeCtx;\n          this.ctx.save();\n          this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n          this.ctx.drawImage(this.transparentCanvas, 0, 0);\n          this.ctx.restore();\n          this.transparentCanvas = null;\n        }\n      }\n      exports.CanvasGraphics = CanvasGraphics;\n      for (var op in _util.OPS) {\n        if (CanvasGraphics.prototype[op] !== undefined) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n      }\n\n      /***/\n    }), ( /* 13 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.TilingPattern = exports.PathType = void 0;\n      exports.getShadingPattern = getShadingPattern;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(8);\n      var _is_node = __w_pdfjs_require__(3);\n      var PathType = {\n        FILL: \"Fill\",\n        STROKE: \"Stroke\",\n        SHADING: \"Shading\"\n      };\n      exports.PathType = PathType;\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || _is_node.isNodeJS) {\n          return;\n        }\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        var region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n      var BaseShadingPattern = /*#__PURE__*/function () {\n        function BaseShadingPattern() {\n          _classCallCheck(this, BaseShadingPattern);\n          if (this.constructor === BaseShadingPattern) {\n            (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n          }\n        }\n        _createClass(BaseShadingPattern, [{\n          key: \"getPattern\",\n          value: function getPattern() {\n            (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n          }\n        }]);\n        return BaseShadingPattern;\n      }();\n      var RadialAxialShadingPattern = /*#__PURE__*/function (_BaseShadingPattern) {\n        _inherits(RadialAxialShadingPattern, _BaseShadingPattern);\n        function RadialAxialShadingPattern(IR) {\n          var _this31;\n          _classCallCheck(this, RadialAxialShadingPattern);\n          _this31 = _callSuper(this, RadialAxialShadingPattern);\n          _this31._type = IR[1];\n          _this31._bbox = IR[2];\n          _this31._colorStops = IR[3];\n          _this31._p0 = IR[4];\n          _this31._p1 = IR[5];\n          _this31._r0 = IR[6];\n          _this31._r1 = IR[7];\n          _this31.matrix = null;\n          return _this31;\n        }\n        _createClass(RadialAxialShadingPattern, [{\n          key: \"_createGradient\",\n          value: function _createGradient(ctx) {\n            var grad;\n            if (this._type === \"axial\") {\n              grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n            } else if (this._type === \"radial\") {\n              grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n            }\n            var _iterator57 = _createForOfIteratorHelper(this._colorStops),\n              _step57;\n            try {\n              for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n                var colorStop = _step57.value;\n                grad.addColorStop(colorStop[0], colorStop[1]);\n              }\n            } catch (err) {\n              _iterator57.e(err);\n            } finally {\n              _iterator57.f();\n            }\n            return grad;\n          }\n        }, {\n          key: \"getPattern\",\n          value: function getPattern(ctx, owner, inverse, pathType) {\n            var pattern;\n            if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n              var ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [0, 0, 0, 0];\n              var width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n              var height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n              var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n              var tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n              inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n              tmpCtx.transform.apply(tmpCtx, _toConsumableArray(owner.baseTransform));\n              if (this.matrix) {\n                tmpCtx.transform.apply(tmpCtx, _toConsumableArray(this.matrix));\n              }\n              applyBoundingBox(tmpCtx, this._bbox);\n              tmpCtx.fillStyle = this._createGradient(tmpCtx);\n              tmpCtx.fill();\n              pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n              var domMatrix = new DOMMatrix(inverse);\n              try {\n                pattern.setTransform(domMatrix);\n              } catch (ex) {\n                (0, _util.warn)(\"RadialAxialShadingPattern.getPattern: \\\"\".concat(ex === null || ex === void 0 ? void 0 : ex.message, \"\\\".\"));\n              }\n            } else {\n              applyBoundingBox(ctx, this._bbox);\n              pattern = this._createGradient(ctx);\n            }\n            return pattern;\n          }\n        }]);\n        return RadialAxialShadingPattern;\n      }(BaseShadingPattern);\n      function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n        var coords = context.coords,\n          colors = context.colors;\n        var bytes = data.data,\n          rowSize = data.width * 4;\n        var tmp;\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        if (coords[p2 + 1] > coords[p3 + 1]) {\n          tmp = p2;\n          p2 = p3;\n          p3 = tmp;\n          tmp = c2;\n          c2 = c3;\n          c3 = tmp;\n        }\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n        var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n        var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n        var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n        var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n        var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n        if (y1 >= y3) {\n          return;\n        }\n        var c1r = colors[c1],\n          c1g = colors[c1 + 1],\n          c1b = colors[c1 + 2];\n        var c2r = colors[c2],\n          c2g = colors[c2 + 1],\n          c2b = colors[c2 + 2];\n        var c3r = colors[c3],\n          c3g = colors[c3 + 1],\n          c3b = colors[c3 + 2];\n        var minY = Math.round(y1),\n          maxY = Math.round(y3);\n        var xa, car, cag, cab;\n        var xb, cbr, cbg, cbb;\n        for (var y = minY; y <= maxY; y++) {\n          if (y < y2) {\n            var _k4 = void 0;\n            if (y < y1) {\n              _k4 = 0;\n            } else {\n              _k4 = (y1 - y) / (y1 - y2);\n            }\n            xa = x1 - (x1 - x2) * _k4;\n            car = c1r - (c1r - c2r) * _k4;\n            cag = c1g - (c1g - c2g) * _k4;\n            cab = c1b - (c1b - c2b) * _k4;\n          } else {\n            var _k5 = void 0;\n            if (y > y3) {\n              _k5 = 1;\n            } else if (y2 === y3) {\n              _k5 = 0;\n            } else {\n              _k5 = (y2 - y) / (y2 - y3);\n            }\n            xa = x2 - (x2 - x3) * _k5;\n            car = c2r - (c2r - c3r) * _k5;\n            cag = c2g - (c2g - c3g) * _k5;\n            cab = c2b - (c2b - c3b) * _k5;\n          }\n          var k = void 0;\n          if (y < y1) {\n            k = 0;\n          } else if (y > y3) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y3);\n          }\n          xb = x1 - (x1 - x3) * k;\n          cbr = c1r - (c1r - c3r) * k;\n          cbg = c1g - (c1g - c3g) * k;\n          cbb = c1b - (c1b - c3b) * k;\n          var x1_ = Math.round(Math.min(xa, xb));\n          var x2_ = Math.round(Math.max(xa, xb));\n          var j = rowSize * y + x1_ * 4;\n          for (var x = x1_; x <= x2_; x++) {\n            k = (xa - x) / (xa - xb);\n            if (k < 0) {\n              k = 0;\n            } else if (k > 1) {\n              k = 1;\n            }\n            bytes[j++] = car - (car - cbr) * k | 0;\n            bytes[j++] = cag - (cag - cbg) * k | 0;\n            bytes[j++] = cab - (cab - cbb) * k | 0;\n            bytes[j++] = 255;\n          }\n        }\n      }\n      function drawFigure(data, figure, context) {\n        var ps = figure.coords;\n        var cs = figure.colors;\n        var i, ii;\n        switch (figure.type) {\n          case \"lattice\":\n            var verticesPerRow = figure.verticesPerRow;\n            var rows = Math.floor(ps.length / verticesPerRow) - 1;\n            var cols = verticesPerRow - 1;\n            for (i = 0; i < rows; i++) {\n              var q = i * verticesPerRow;\n              for (var j = 0; j < cols; j++, q++) {\n                drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n              }\n            }\n            break;\n          case \"triangles\":\n            for (i = 0, ii = ps.length; i < ii; i += 3) {\n              drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n            }\n            break;\n          default:\n            throw new Error(\"illegal figure\");\n        }\n      }\n      var MeshShadingPattern = /*#__PURE__*/function (_BaseShadingPattern2) {\n        _inherits(MeshShadingPattern, _BaseShadingPattern2);\n        function MeshShadingPattern(IR) {\n          var _this32;\n          _classCallCheck(this, MeshShadingPattern);\n          _this32 = _callSuper(this, MeshShadingPattern);\n          _this32._coords = IR[2];\n          _this32._colors = IR[3];\n          _this32._figures = IR[4];\n          _this32._bounds = IR[5];\n          _this32._bbox = IR[7];\n          _this32._background = IR[8];\n          _this32.matrix = null;\n          return _this32;\n        }\n        _createClass(MeshShadingPattern, [{\n          key: \"_createMeshCanvas\",\n          value: function _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n            var EXPECTED_SCALE = 1.1;\n            var MAX_PATTERN_SIZE = 3000;\n            var BORDER_SIZE = 2;\n            var offsetX = Math.floor(this._bounds[0]);\n            var offsetY = Math.floor(this._bounds[1]);\n            var boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n            var boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n            var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            var scaleX = boundsWidth / width;\n            var scaleY = boundsHeight / height;\n            var context = {\n              coords: this._coords,\n              colors: this._colors,\n              offsetX: -offsetX,\n              offsetY: -offsetY,\n              scaleX: 1 / scaleX,\n              scaleY: 1 / scaleY\n            };\n            var paddedWidth = width + BORDER_SIZE * 2;\n            var paddedHeight = height + BORDER_SIZE * 2;\n            var tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            var tmpCtx = tmpCanvas.context;\n            var data = tmpCtx.createImageData(width, height);\n            if (backgroundColor) {\n              var bytes = data.data;\n              for (var i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n            var _iterator58 = _createForOfIteratorHelper(this._figures),\n              _step58;\n            try {\n              for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n                var figure = _step58.value;\n                drawFigure(data, figure, context);\n              }\n            } catch (err) {\n              _iterator58.e(err);\n            } finally {\n              _iterator58.f();\n            }\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            var canvas = tmpCanvas.canvas;\n            return {\n              canvas: canvas,\n              offsetX: offsetX - BORDER_SIZE * scaleX,\n              offsetY: offsetY - BORDER_SIZE * scaleY,\n              scaleX: scaleX,\n              scaleY: scaleY\n            };\n          }\n        }, {\n          key: \"getPattern\",\n          value: function getPattern(ctx, owner, inverse, pathType) {\n            applyBoundingBox(ctx, this._bbox);\n            var scale;\n            if (pathType === PathType.SHADING) {\n              scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n              if (this.matrix) {\n                var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n            var temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n            if (pathType !== PathType.SHADING) {\n              ctx.setTransform.apply(ctx, _toConsumableArray(owner.baseTransform));\n              if (this.matrix) {\n                ctx.transform.apply(ctx, _toConsumableArray(this.matrix));\n              }\n            }\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n        }]);\n        return MeshShadingPattern;\n      }(BaseShadingPattern);\n      var DummyShadingPattern = /*#__PURE__*/function (_BaseShadingPattern3) {\n        _inherits(DummyShadingPattern, _BaseShadingPattern3);\n        function DummyShadingPattern() {\n          _classCallCheck(this, DummyShadingPattern);\n          return _callSuper(this, DummyShadingPattern, arguments);\n        }\n        _createClass(DummyShadingPattern, [{\n          key: \"getPattern\",\n          value: function getPattern() {\n            return \"hotpink\";\n          }\n        }]);\n        return DummyShadingPattern;\n      }(BaseShadingPattern);\n      function getShadingPattern(IR) {\n        switch (IR[0]) {\n          case \"RadialAxial\":\n            return new RadialAxialShadingPattern(IR);\n          case \"Mesh\":\n            return new MeshShadingPattern(IR);\n          case \"Dummy\":\n            return new DummyShadingPattern();\n        }\n        throw new Error(\"Unknown IR type: \".concat(IR[0]));\n      }\n      var PaintType = {\n        COLORED: 1,\n        UNCOLORED: 2\n      };\n      var TilingPattern = /*#__PURE__*/function () {\n        function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          _classCallCheck(this, TilingPattern);\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.ctx = ctx;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n        }\n        _createClass(TilingPattern, [{\n          key: \"createPatternCanvas\",\n          value: function createPatternCanvas(owner) {\n            var operatorList = this.operatorList;\n            var bbox = this.bbox;\n            var xstep = this.xstep;\n            var ystep = this.ystep;\n            var paintType = this.paintType;\n            var tilingType = this.tilingType;\n            var color = this.color;\n            var canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            var x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n            var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n            var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n            var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            var tmpCtx = tmpCanvas.context;\n            var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            var adjustedX0 = x0;\n            var adjustedY0 = y0;\n            var adjustedX1 = x1;\n            var adjustedY1 = y1;\n            if (x0 < 0) {\n              adjustedX0 = 0;\n              adjustedX1 += Math.abs(x0);\n            }\n            if (y0 < 0) {\n              adjustedY0 = 0;\n              adjustedY1 += Math.abs(y0);\n            }\n            tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            tmpCtx.save();\n            this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n            graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n            graphics.executeOperatorList(operatorList);\n            graphics.endDrawing();\n            return {\n              canvas: tmpCanvas.canvas,\n              scaleX: dimx.scale,\n              scaleY: dimy.scale,\n              offsetX: adjustedX0,\n              offsetY: adjustedY0\n            };\n          }\n        }, {\n          key: \"getSizeAndScale\",\n          value: function getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            var maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n            var size = Math.ceil(step * scale);\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n            return {\n              scale: scale,\n              size: size\n            };\n          }\n        }, {\n          key: \"clipBbox\",\n          value: function clipBbox(graphics, x0, y0, x1, y1) {\n            var bboxWidth = x1 - x0;\n            var bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [x0, y0, x1, y1]);\n            graphics.clip();\n            graphics.endPath();\n          }\n        }, {\n          key: \"setFillAndStrokeStyleToContext\",\n          value: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            var context = graphics.ctx,\n              current = graphics.current;\n            switch (paintType) {\n              case PaintType.COLORED:\n                var ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n              case PaintType.UNCOLORED:\n                var cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n              default:\n                throw new _util.FormatError(\"Unsupported paint type: \".concat(paintType));\n            }\n          }\n        }, {\n          key: \"getPattern\",\n          value: function getPattern(ctx, owner, inverse, pathType) {\n            var matrix = inverse;\n            if (pathType !== PathType.SHADING) {\n              matrix = _util.Util.transform(matrix, owner.baseTransform);\n              if (this.matrix) {\n                matrix = _util.Util.transform(matrix, this.matrix);\n              }\n            }\n            var temporaryPatternCanvas = this.createPatternCanvas(owner);\n            var domMatrix = new DOMMatrix(matrix);\n            domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n            var pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n            try {\n              pattern.setTransform(domMatrix);\n            } catch (ex) {\n              (0, _util.warn)(\"TilingPattern.getPattern: \\\"\".concat(ex === null || ex === void 0 ? void 0 : ex.message, \"\\\".\"));\n            }\n            return pattern;\n          }\n        }], [{\n          key: \"MAX_PATTERN_SIZE\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"MAX_PATTERN_SIZE\", 3000);\n          }\n        }]);\n        return TilingPattern;\n      }();\n      exports.TilingPattern = TilingPattern;\n\n      /***/\n    }), ( /* 14 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.applyMaskImageData = applyMaskImageData;\n      var _util = __w_pdfjs_require__(1);\n      function applyMaskImageData(_ref48) {\n        var src = _ref48.src,\n          _ref48$srcPos = _ref48.srcPos,\n          srcPos = _ref48$srcPos === void 0 ? 0 : _ref48$srcPos,\n          dest = _ref48.dest,\n          _ref48$destPos = _ref48.destPos,\n          destPos = _ref48$destPos === void 0 ? 0 : _ref48$destPos,\n          width = _ref48.width,\n          height = _ref48.height,\n          _ref48$inverseDecode = _ref48.inverseDecode,\n          inverseDecode = _ref48$inverseDecode === void 0 ? false : _ref48$inverseDecode;\n        var opaque = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n        var _ref49 = !inverseDecode ? [opaque, 0] : [0, opaque],\n          _ref50 = _slicedToArray(_ref49, 2),\n          zeroMapping = _ref50[0],\n          oneMapping = _ref50[1];\n        var widthInSource = width >> 3;\n        var widthRemainder = width & 7;\n        var srcLength = src.length;\n        dest = new Uint32Array(dest.buffer);\n        for (var i = 0; i < height; i++) {\n          for (var max = srcPos + widthInSource; srcPos < max; srcPos++) {\n            var _elem = srcPos < srcLength ? src[srcPos] : 255;\n            dest[destPos++] = _elem & 128 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 64 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 32 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 16 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 8 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 4 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 2 ? oneMapping : zeroMapping;\n            dest[destPos++] = _elem & 1 ? oneMapping : zeroMapping;\n          }\n          if (widthRemainder === 0) {\n            continue;\n          }\n          var elem = srcPos < srcLength ? src[srcPos++] : 255;\n          for (var j = 0; j < widthRemainder; j++) {\n            dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n          }\n        }\n        return {\n          srcPos: srcPos,\n          destPos: destPos\n        };\n      }\n\n      /***/\n    }), ( /* 15 */\n    /***/function (__unused_webpack_module, exports) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      var GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n      /***/\n    }), ( /* 16 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      var StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n      function wrapReason(reason) {\n        if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n          (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n        }\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n          case \"PasswordException\":\n            return new _util.PasswordException(reason.message, reason.code);\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n      var MessageHandler = /*#__PURE__*/function () {\n        function MessageHandler(sourceName, targetName, comObj) {\n          var _this33 = this;\n          _classCallCheck(this, MessageHandler);\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n          this._onComObjOnMessage = function (event) {\n            var data = event.data;\n            if (data.targetName !== _this33.sourceName) {\n              return;\n            }\n            if (data.stream) {\n              _this33._processStreamMessage(data);\n              return;\n            }\n            if (data.callback) {\n              var callbackId = data.callbackId;\n              var capability = _this33.callbackCapabilities[callbackId];\n              if (!capability) {\n                throw new Error(\"Cannot resolve callback \".concat(callbackId));\n              }\n              delete _this33.callbackCapabilities[callbackId];\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n              return;\n            }\n            var action = _this33.actionHandler[data.action];\n            if (!action) {\n              throw new Error(\"Unknown action from worker: \".concat(data.action));\n            }\n            if (data.callbackId) {\n              var cbSourceName = _this33.sourceName;\n              var cbTargetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n            if (data.streamId) {\n              _this33._createStreamSink(data);\n              return;\n            }\n            action(data.data);\n          };\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n        _createClass(MessageHandler, [{\n          key: \"on\",\n          value: function on(actionName, handler) {\n            var ah = this.actionHandler;\n            if (ah[actionName]) {\n              throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n            }\n            ah[actionName] = handler;\n          }\n        }, {\n          key: \"send\",\n          value: function send(actionName, data, transfers) {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data: data\n            }, transfers);\n          }\n        }, {\n          key: \"sendWithPromise\",\n          value: function sendWithPromise(actionName, data, transfers) {\n            var callbackId = this.callbackId++;\n            var capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n            try {\n              this.comObj.postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId: callbackId,\n                data: data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n            return capability.promise;\n          }\n        }, {\n          key: \"sendWithStream\",\n          value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n            var _this34 = this;\n            var streamId = this.streamId++,\n              sourceName = this.sourceName,\n              targetName = this.targetName,\n              comObj = this.comObj;\n            return new ReadableStream({\n              start: function start(controller) {\n                var startCapability = (0, _util.createPromiseCapability)();\n                _this34.streamControllers[streamId] = {\n                  controller: controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  action: actionName,\n                  streamId: streamId,\n                  data: data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: function pull(controller) {\n                var pullCapability = (0, _util.createPromiseCapability)();\n                _this34.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL,\n                  streamId: streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: function cancel(reason) {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                var cancelCapability = (0, _util.createPromiseCapability)();\n                _this34.streamControllers[streamId].cancelCall = cancelCapability;\n                _this34.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n        }, {\n          key: \"_createStreamSink\",\n          value: function _createStreamSink(data) {\n            var streamId = data.streamId,\n              sourceName = this.sourceName,\n              targetName = data.sourceName,\n              comObj = this.comObj;\n            var self = this,\n              action = this.actionHandler[data.action];\n            var streamSink = {\n              enqueue: function enqueue(chunk) {\n                var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                var transfers = arguments.length > 2 ? arguments[2] : undefined;\n                if (this.isCancelled) {\n                  return;\n                }\n                var lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId: streamId,\n                  chunk: chunk\n                }, transfers);\n              },\n              close: function close() {\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId: streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error: function error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ERROR,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n        }, {\n          key: \"_processStreamMessage\",\n          value: function _processStreamMessage(data) {\n            var streamId = data.streamId,\n              sourceName = this.sourceName,\n              targetName = data.sourceName,\n              comObj = this.comObj;\n            var streamController = this.streamControllers[streamId],\n              streamSink = this.streamSinks[streamId];\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  streamController.startCall.resolve();\n                } else {\n                  streamController.startCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  streamController.pullCall.resolve();\n                } else {\n                  streamController.pullCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL:\n                if (!streamSink) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                  break;\n                }\n                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                  streamSink.sinkCapability.resolve();\n                }\n                streamSink.desiredSize = data.desiredSize;\n                new Promise(function (resolve) {\n                  resolve(streamSink.onPull && streamSink.onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n                if (streamController.isClosed) {\n                  break;\n                }\n                streamController.controller.enqueue(data.chunk);\n                break;\n              case StreamKind.CLOSE:\n                (0, _util.assert)(streamController, \"close should have stream controller\");\n                if (streamController.isClosed) {\n                  break;\n                }\n                streamController.isClosed = true;\n                streamController.controller.close();\n                this._deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.ERROR:\n                (0, _util.assert)(streamController, \"error should have stream controller\");\n                streamController.controller.error(wrapReason(data.reason));\n                this._deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  streamController.cancelCall.resolve();\n                } else {\n                  streamController.cancelCall.reject(wrapReason(data.reason));\n                }\n                this._deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.CANCEL:\n                if (!streamSink) {\n                  break;\n                }\n                new Promise(function (resolve) {\n                  resolve(streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                streamSink.isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n        }, {\n          key: \"_deleteStreamController\",\n          value: function () {\n            var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(streamController, streamId) {\n              return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return Promise.allSettled([streamController.startCall && streamController.startCall.promise, streamController.pullCall && streamController.pullCall.promise, streamController.cancelCall && streamController.cancelCall.promise]);\n                  case 2:\n                    delete this.streamControllers[streamId];\n                  case 3:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12, this);\n            }));\n            function _deleteStreamController(_x9, _x10) {\n              return _deleteStreamController2.apply(this, arguments);\n            }\n            return _deleteStreamController;\n          }()\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }]);\n        return MessageHandler;\n      }();\n      exports.MessageHandler = MessageHandler;\n\n      /***/\n    }), ( /* 17 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _metadataMap = /*#__PURE__*/new WeakMap();\n      var _data = /*#__PURE__*/new WeakMap();\n      var Metadata = /*#__PURE__*/function () {\n        function Metadata(_ref51) {\n          var parsedData = _ref51.parsedData,\n            rawData = _ref51.rawData;\n          _classCallCheck(this, Metadata);\n          _classPrivateFieldInitSpec(this, _metadataMap, void 0);\n          _classPrivateFieldInitSpec(this, _data, void 0);\n          _classPrivateFieldSet(_metadataMap, this, parsedData);\n          _classPrivateFieldSet(_data, this, rawData);\n        }\n        _createClass(Metadata, [{\n          key: \"getRaw\",\n          value: function getRaw() {\n            return _classPrivateFieldGet(_data, this);\n          }\n        }, {\n          key: \"get\",\n          value: function get(name) {\n            var _classPrivateFieldGet3;\n            return (_classPrivateFieldGet3 = _classPrivateFieldGet(_metadataMap, this).get(name)) !== null && _classPrivateFieldGet3 !== void 0 ? _classPrivateFieldGet3 : null;\n          }\n        }, {\n          key: \"getAll\",\n          value: function getAll() {\n            return (0, _util.objectFromMap)(_classPrivateFieldGet(_metadataMap, this));\n          }\n        }, {\n          key: \"has\",\n          value: function has(name) {\n            return _classPrivateFieldGet(_metadataMap, this).has(name);\n          }\n        }]);\n        return Metadata;\n      }();\n      exports.Metadata = Metadata;\n\n      /***/\n    }), ( /* 18 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.OptionalContentConfig = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var INTERNAL = Symbol(\"INTERNAL\");\n      var _visible = /*#__PURE__*/new WeakMap();\n      var OptionalContentGroup = /*#__PURE__*/function () {\n        function OptionalContentGroup(name, intent) {\n          _classCallCheck(this, OptionalContentGroup);\n          _classPrivateFieldInitSpec(this, _visible, true);\n          this.name = name;\n          this.intent = intent;\n        }\n        _createClass(OptionalContentGroup, [{\n          key: \"visible\",\n          get: function get() {\n            return _classPrivateFieldGet(_visible, this);\n          }\n        }, {\n          key: \"_setVisible\",\n          value: function _setVisible(internal, visible) {\n            if (internal !== INTERNAL) {\n              (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n            }\n            _classPrivateFieldSet(_visible, this, visible);\n          }\n        }]);\n        return OptionalContentGroup;\n      }();\n      var _cachedHasInitialVisibility = /*#__PURE__*/new WeakMap();\n      var _groups = /*#__PURE__*/new WeakMap();\n      var _initialVisibility = /*#__PURE__*/new WeakMap();\n      var _order = /*#__PURE__*/new WeakMap();\n      var _OptionalContentConfig_brand = /*#__PURE__*/new WeakSet();\n      var OptionalContentConfig = /*#__PURE__*/function () {\n        function OptionalContentConfig(data) {\n          _classCallCheck(this, OptionalContentConfig);\n          _classPrivateMethodInitSpec(this, _OptionalContentConfig_brand);\n          _classPrivateFieldInitSpec(this, _cachedHasInitialVisibility, true);\n          _classPrivateFieldInitSpec(this, _groups, new Map());\n          _classPrivateFieldInitSpec(this, _initialVisibility, null);\n          _classPrivateFieldInitSpec(this, _order, null);\n          this.name = null;\n          this.creator = null;\n          if (data === null) {\n            return;\n          }\n          this.name = data.name;\n          this.creator = data.creator;\n          _classPrivateFieldSet(_order, this, data.order);\n          var _iterator59 = _createForOfIteratorHelper(data.groups),\n            _step59;\n          try {\n            for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n              var _group = _step59.value;\n              _classPrivateFieldGet(_groups, this).set(_group.id, new OptionalContentGroup(_group.name, _group.intent));\n            }\n          } catch (err) {\n            _iterator59.e(err);\n          } finally {\n            _iterator59.f();\n          }\n          if (data.baseState === \"OFF\") {\n            var _iterator60 = _createForOfIteratorHelper(_classPrivateFieldGet(_groups, this).values()),\n              _step60;\n            try {\n              for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n                var group = _step60.value;\n                group._setVisible(INTERNAL, false);\n              }\n            } catch (err) {\n              _iterator60.e(err);\n            } finally {\n              _iterator60.f();\n            }\n          }\n          var _iterator61 = _createForOfIteratorHelper(data.on),\n            _step61;\n          try {\n            for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n              var on = _step61.value;\n              _classPrivateFieldGet(_groups, this).get(on)._setVisible(INTERNAL, true);\n            }\n          } catch (err) {\n            _iterator61.e(err);\n          } finally {\n            _iterator61.f();\n          }\n          var _iterator62 = _createForOfIteratorHelper(data.off),\n            _step62;\n          try {\n            for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n              var off = _step62.value;\n              _classPrivateFieldGet(_groups, this).get(off)._setVisible(INTERNAL, false);\n            }\n          } catch (err) {\n            _iterator62.e(err);\n          } finally {\n            _iterator62.f();\n          }\n          _classPrivateFieldSet(_initialVisibility, this, new Map());\n          var _iterator63 = _createForOfIteratorHelper(_classPrivateFieldGet(_groups, this)),\n            _step63;\n          try {\n            for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n              var _step63$value = _slicedToArray(_step63.value, 2),\n                id = _step63$value[0],\n                _group2 = _step63$value[1];\n              _classPrivateFieldGet(_initialVisibility, this).set(id, _group2.visible);\n            }\n          } catch (err) {\n            _iterator63.e(err);\n          } finally {\n            _iterator63.f();\n          }\n        }\n        _createClass(OptionalContentConfig, [{\n          key: \"isVisible\",\n          value: function isVisible(group) {\n            if (_classPrivateFieldGet(_groups, this).size === 0) {\n              return true;\n            }\n            if (!group) {\n              (0, _util.warn)(\"Optional content group not defined.\");\n              return true;\n            }\n            if (group.type === \"OCG\") {\n              if (!_classPrivateFieldGet(_groups, this).has(group.id)) {\n                (0, _util.warn)(\"Optional content group not found: \".concat(group.id));\n                return true;\n              }\n              return _classPrivateFieldGet(_groups, this).get(group.id).visible;\n            } else if (group.type === \"OCMD\") {\n              if (group.expression) {\n                return _assertClassBrand(_OptionalContentConfig_brand, this, _evaluateVisibilityExpression).call(this, group.expression);\n              }\n              if (!group.policy || group.policy === \"AnyOn\") {\n                var _iterator64 = _createForOfIteratorHelper(group.ids),\n                  _step64;\n                try {\n                  for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n                    var id = _step64.value;\n                    if (!_classPrivateFieldGet(_groups, this).has(id)) {\n                      (0, _util.warn)(\"Optional content group not found: \".concat(id));\n                      return true;\n                    }\n                    if (_classPrivateFieldGet(_groups, this).get(id).visible) {\n                      return true;\n                    }\n                  }\n                } catch (err) {\n                  _iterator64.e(err);\n                } finally {\n                  _iterator64.f();\n                }\n                return false;\n              } else if (group.policy === \"AllOn\") {\n                var _iterator65 = _createForOfIteratorHelper(group.ids),\n                  _step65;\n                try {\n                  for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n                    var _id2 = _step65.value;\n                    if (!_classPrivateFieldGet(_groups, this).has(_id2)) {\n                      (0, _util.warn)(\"Optional content group not found: \".concat(_id2));\n                      return true;\n                    }\n                    if (!_classPrivateFieldGet(_groups, this).get(_id2).visible) {\n                      return false;\n                    }\n                  }\n                } catch (err) {\n                  _iterator65.e(err);\n                } finally {\n                  _iterator65.f();\n                }\n                return true;\n              } else if (group.policy === \"AnyOff\") {\n                var _iterator66 = _createForOfIteratorHelper(group.ids),\n                  _step66;\n                try {\n                  for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n                    var _id3 = _step66.value;\n                    if (!_classPrivateFieldGet(_groups, this).has(_id3)) {\n                      (0, _util.warn)(\"Optional content group not found: \".concat(_id3));\n                      return true;\n                    }\n                    if (!_classPrivateFieldGet(_groups, this).get(_id3).visible) {\n                      return true;\n                    }\n                  }\n                } catch (err) {\n                  _iterator66.e(err);\n                } finally {\n                  _iterator66.f();\n                }\n                return false;\n              } else if (group.policy === \"AllOff\") {\n                var _iterator67 = _createForOfIteratorHelper(group.ids),\n                  _step67;\n                try {\n                  for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n                    var _id4 = _step67.value;\n                    if (!_classPrivateFieldGet(_groups, this).has(_id4)) {\n                      (0, _util.warn)(\"Optional content group not found: \".concat(_id4));\n                      return true;\n                    }\n                    if (_classPrivateFieldGet(_groups, this).get(_id4).visible) {\n                      return false;\n                    }\n                  }\n                } catch (err) {\n                  _iterator67.e(err);\n                } finally {\n                  _iterator67.f();\n                }\n                return true;\n              }\n              (0, _util.warn)(\"Unknown optional content policy \".concat(group.policy, \".\"));\n              return true;\n            }\n            (0, _util.warn)(\"Unknown group type \".concat(group.type, \".\"));\n            return true;\n          }\n        }, {\n          key: \"setVisibility\",\n          value: function setVisibility(id) {\n            var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            if (!_classPrivateFieldGet(_groups, this).has(id)) {\n              (0, _util.warn)(\"Optional content group not found: \".concat(id));\n              return;\n            }\n            _classPrivateFieldGet(_groups, this).get(id)._setVisible(INTERNAL, !!visible);\n            _classPrivateFieldSet(_cachedHasInitialVisibility, this, null);\n          }\n        }, {\n          key: \"hasInitialVisibility\",\n          get: function get() {\n            if (_classPrivateFieldGet(_cachedHasInitialVisibility, this) !== null) {\n              return _classPrivateFieldGet(_cachedHasInitialVisibility, this);\n            }\n            var _iterator68 = _createForOfIteratorHelper(_classPrivateFieldGet(_groups, this)),\n              _step68;\n            try {\n              for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n                var _step68$value = _slicedToArray(_step68.value, 2),\n                  id = _step68$value[0],\n                  group = _step68$value[1];\n                var visible = _classPrivateFieldGet(_initialVisibility, this).get(id);\n                if (group.visible !== visible) {\n                  return _classPrivateFieldSet(_cachedHasInitialVisibility, this, false);\n                }\n              }\n            } catch (err) {\n              _iterator68.e(err);\n            } finally {\n              _iterator68.f();\n            }\n            return _classPrivateFieldSet(_cachedHasInitialVisibility, this, true);\n          }\n        }, {\n          key: \"getOrder\",\n          value: function getOrder() {\n            if (!_classPrivateFieldGet(_groups, this).size) {\n              return null;\n            }\n            if (_classPrivateFieldGet(_order, this)) {\n              return _classPrivateFieldGet(_order, this).slice();\n            }\n            return _toConsumableArray(_classPrivateFieldGet(_groups, this).keys());\n          }\n        }, {\n          key: \"getGroups\",\n          value: function getGroups() {\n            return _classPrivateFieldGet(_groups, this).size > 0 ? (0, _util.objectFromMap)(_classPrivateFieldGet(_groups, this)) : null;\n          }\n        }, {\n          key: \"getGroup\",\n          value: function getGroup(id) {\n            return _classPrivateFieldGet(_groups, this).get(id) || null;\n          }\n        }]);\n        return OptionalContentConfig;\n      }();\n      function _evaluateVisibilityExpression(array) {\n        var length = array.length;\n        if (length < 2) {\n          return true;\n        }\n        var operator = array[0];\n        for (var i = 1; i < length; i++) {\n          var element = array[i];\n          var state = void 0;\n          if (Array.isArray(element)) {\n            state = _assertClassBrand(_OptionalContentConfig_brand, this, _evaluateVisibilityExpression).call(this, element);\n          } else if (_classPrivateFieldGet(_groups, this).has(element)) {\n            state = _classPrivateFieldGet(_groups, this).get(element).visible;\n          } else {\n            (0, _util.warn)(\"Optional content group not found: \".concat(element));\n            return true;\n          }\n          switch (operator) {\n            case \"And\":\n              if (!state) {\n                return false;\n              }\n              break;\n            case \"Or\":\n              if (state) {\n                return true;\n              }\n              break;\n            case \"Not\":\n              return !state;\n            default:\n              return true;\n          }\n        }\n        return operator === \"And\";\n      }\n      exports.OptionalContentConfig = OptionalContentConfig;\n\n      /***/\n    }), ( /* 19 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(8);\n      var PDFDataTransportStream = /*#__PURE__*/function () {\n        function PDFDataTransportStream(params, pdfDataRangeTransport) {\n          var _this35 = this;\n          _classCallCheck(this, PDFDataTransportStream);\n          (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          this._contentDispositionFilename = params.contentDispositionFilename || null;\n          var initialData = params.initialData;\n          if ((initialData === null || initialData === void 0 ? void 0 : initialData.length) > 0) {\n            var buffer = new Uint8Array(initialData).buffer;\n            this._queuedChunks.push(buffer);\n          }\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n          this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\n            _this35._onReceiveData({\n              begin: begin,\n              chunk: chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressListener(function (loaded, total) {\n            _this35._onProgress({\n              loaded: loaded,\n              total: total\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\n            _this35._onReceiveData({\n              chunk: chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveDoneListener(function () {\n            _this35._onProgressiveDone();\n          });\n          this._pdfDataRangeTransport.transportReady();\n        }\n        _createClass(PDFDataTransportStream, [{\n          key: \"_onReceiveData\",\n          value: function _onReceiveData(args) {\n            var buffer = new Uint8Array(args.chunk).buffer;\n            if (args.begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              var found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== args.begin) {\n                  return false;\n                }\n                rangeReader._enqueue(buffer);\n                return true;\n              });\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n        }, {\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            var _this$_fullRequestRea, _this$_fullRequestRea2;\n            return (_this$_fullRequestRea = (_this$_fullRequestRea2 = this._fullRequestReader) === null || _this$_fullRequestRea2 === void 0 ? void 0 : _this$_fullRequestRea2._loaded) !== null && _this$_fullRequestRea !== void 0 ? _this$_fullRequestRea : 0;\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (evt.total === undefined) {\n              var firstReader = this._rangeReaders[0];\n              if (firstReader !== null && firstReader !== void 0 && firstReader.onProgress) {\n                firstReader.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            } else {\n              var fullReader = this._fullRequestReader;\n              if (fullReader !== null && fullReader !== void 0 && fullReader.onProgress) {\n                fullReader.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            }\n          }\n        }, {\n          key: \"_onProgressiveDone\",\n          value: function _onProgressiveDone() {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.progressiveDone();\n            }\n            this._progressiveDone = true;\n          }\n        }, {\n          key: \"_removeRangeReader\",\n          value: function _removeRangeReader(reader) {\n            var i = this._rangeReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            var queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n            this._rangeReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var _iterator69 = _createForOfIteratorHelper(this._rangeReaders.slice(0)),\n              _step69;\n            try {\n              for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n                var reader = _step69.value;\n                reader.cancel(reason);\n              }\n            } catch (err) {\n              _iterator69.e(err);\n            } finally {\n              _iterator69.f();\n            }\n            this._pdfDataRangeTransport.abort();\n          }\n        }]);\n        return PDFDataTransportStream;\n      }();\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n      var PDFDataTransportStreamReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamReader(stream, queuedChunks) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          var contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n          _classCallCheck(this, PDFDataTransportStreamReader);\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n          var _iterator70 = _createForOfIteratorHelper(this._queuedChunks),\n            _step70;\n          try {\n            for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n              var chunk = _step70.value;\n              this._loaded += chunk.byteLength;\n            }\n          } catch (err) {\n            _iterator70.e(err);\n          } finally {\n            _iterator70.f();\n          }\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n        _createClass(PDFDataTransportStreamReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n            this._loaded += chunk.byteLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReady;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._stream._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._stream._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._stream._contentLength;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    if (!(this._queuedChunks.length > 0)) {\n                      _context13.next = 3;\n                      break;\n                    }\n                    chunk = this._queuedChunks.shift();\n                    return _context13.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 3:\n                    if (!this._done) {\n                      _context13.next = 5;\n                      break;\n                    }\n                    return _context13.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 5:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context13.abrupt(\"return\", requestCapability.promise);\n                  case 8:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13, this);\n            }));\n            function read() {\n              return _read.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            var _iterator71 = _createForOfIteratorHelper(this._requests),\n              _step71;\n            try {\n              for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n                var requestCapability = _step71.value;\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n            } catch (err) {\n              _iterator71.e(err);\n            } finally {\n              _iterator71.f();\n            }\n            this._requests.length = 0;\n          }\n        }, {\n          key: \"progressiveDone\",\n          value: function progressiveDone() {\n            if (this._done) {\n              return;\n            }\n            this._done = true;\n          }\n        }]);\n        return PDFDataTransportStreamReader;\n      }();\n      var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamRangeReader(stream, begin, end) {\n          _classCallCheck(this, PDFDataTransportStreamRangeReader);\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n        _createClass(PDFDataTransportStreamRangeReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              var requestsCapability = this._requests.shift();\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n              var _iterator72 = _createForOfIteratorHelper(this._requests),\n                _step72;\n              try {\n                for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n                  var requestCapability = _step72.value;\n                  requestCapability.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator72.e(err);\n              } finally {\n                _iterator72.f();\n              }\n              this._requests.length = 0;\n            }\n            this._done = true;\n            this._stream._removeRangeReader(this);\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    if (!this._queuedChunk) {\n                      _context14.next = 4;\n                      break;\n                    }\n                    chunk = this._queuedChunk;\n                    this._queuedChunk = null;\n                    return _context14.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 4:\n                    if (!this._done) {\n                      _context14.next = 6;\n                      break;\n                    }\n                    return _context14.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 6:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context14.abrupt(\"return\", requestCapability.promise);\n                  case 9:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14, this);\n            }));\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            var _iterator73 = _createForOfIteratorHelper(this._requests),\n              _step73;\n            try {\n              for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n                var requestCapability = _step73.value;\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n            } catch (err) {\n              _iterator73.e(err);\n            } finally {\n              _iterator73.f();\n            }\n            this._requests.length = 0;\n            this._stream._removeRangeReader(this);\n          }\n        }]);\n        return PDFDataTransportStreamRangeReader;\n      }();\n      /***/\n    }), ( /* 20 */\n    /***/function (__unused_webpack_module, exports) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.XfaText = void 0;\n      var XfaText = /*#__PURE__*/function () {\n        function XfaText() {\n          _classCallCheck(this, XfaText);\n        }\n        _createClass(XfaText, null, [{\n          key: \"textContent\",\n          value: function textContent(xfa) {\n            var items = [];\n            var output = {\n              items: items,\n              styles: Object.create(null)\n            };\n            function walk(node) {\n              var _node$attributes;\n              if (!node) {\n                return;\n              }\n              var str = null;\n              var name = node.name;\n              if (name === \"#text\") {\n                str = node.value;\n              } else if (!XfaText.shouldBuildText(name)) {\n                return;\n              } else if (node !== null && node !== void 0 && (_node$attributes = node.attributes) !== null && _node$attributes !== void 0 && _node$attributes.textContent) {\n                str = node.attributes.textContent;\n              } else if (node.value) {\n                str = node.value;\n              }\n              if (str !== null) {\n                items.push({\n                  str: str\n                });\n              }\n              if (!node.children) {\n                return;\n              }\n              var _iterator74 = _createForOfIteratorHelper(node.children),\n                _step74;\n              try {\n                for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {\n                  var child = _step74.value;\n                  walk(child);\n                }\n              } catch (err) {\n                _iterator74.e(err);\n              } finally {\n                _iterator74.f();\n              }\n            }\n            walk(xfa);\n            return output;\n          }\n        }, {\n          key: \"shouldBuildText\",\n          value: function shouldBuildText(name) {\n            return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n          }\n        }]);\n        return XfaText;\n      }();\n      exports.XfaText = XfaText;\n\n      /***/\n    }), ( /* 21 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.NodeStandardFontDataFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n      var _base_factory = __w_pdfjs_require__(9);\n      ;\n      var fetchData = function fetchData(url) {\n        return new Promise(function (resolve, reject) {\n          var fs = require(\"fs\");\n          fs.readFile(url, function (error, data) {\n            if (error || !data) {\n              reject(new Error(error));\n              return;\n            }\n            resolve(new Uint8Array(data));\n          });\n        });\n      };\n      var NodeCanvasFactory = /*#__PURE__*/function (_base_factory$BaseCan2) {\n        _inherits(NodeCanvasFactory, _base_factory$BaseCan2);\n        function NodeCanvasFactory() {\n          _classCallCheck(this, NodeCanvasFactory);\n          return _callSuper(this, NodeCanvasFactory, arguments);\n        }\n        _createClass(NodeCanvasFactory, [{\n          key: \"_createCanvas\",\n          value: function _createCanvas(width, height) {\n            var Canvas = require(\"canvas\");\n            return Canvas.createCanvas(width, height);\n          }\n        }]);\n        return NodeCanvasFactory;\n      }(_base_factory.BaseCanvasFactory);\n      exports.NodeCanvasFactory = NodeCanvasFactory;\n      var NodeCMapReaderFactory = /*#__PURE__*/function (_base_factory$BaseCMa2) {\n        _inherits(NodeCMapReaderFactory, _base_factory$BaseCMa2);\n        function NodeCMapReaderFactory() {\n          _classCallCheck(this, NodeCMapReaderFactory);\n          return _callSuper(this, NodeCMapReaderFactory, arguments);\n        }\n        _createClass(NodeCMapReaderFactory, [{\n          key: \"_fetchData\",\n          value: function _fetchData(url, compressionType) {\n            return fetchData(url).then(function (data) {\n              return {\n                cMapData: data,\n                compressionType: compressionType\n              };\n            });\n          }\n        }]);\n        return NodeCMapReaderFactory;\n      }(_base_factory.BaseCMapReaderFactory);\n      exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n      var NodeStandardFontDataFactory = /*#__PURE__*/function (_base_factory$BaseSta2) {\n        _inherits(NodeStandardFontDataFactory, _base_factory$BaseSta2);\n        function NodeStandardFontDataFactory() {\n          _classCallCheck(this, NodeStandardFontDataFactory);\n          return _callSuper(this, NodeStandardFontDataFactory, arguments);\n        }\n        _createClass(NodeStandardFontDataFactory, [{\n          key: \"_fetchData\",\n          value: function _fetchData(url) {\n            return fetchData(url);\n          }\n        }]);\n        return NodeStandardFontDataFactory;\n      }(_base_factory.BaseStandardFontDataFactory);\n      exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n      /***/\n    }), ( /* 22 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationEditorLayer = void 0;\n      var _tools = __w_pdfjs_require__(7);\n      var _util = __w_pdfjs_require__(1);\n      var _freetext = __w_pdfjs_require__(23);\n      var _ink = __w_pdfjs_require__(24);\n      var _accessibilityManager = /*#__PURE__*/new WeakMap();\n      var _allowClick = /*#__PURE__*/new WeakMap();\n      var _boundPointerup = /*#__PURE__*/new WeakMap();\n      var _boundPointerdown = /*#__PURE__*/new WeakMap();\n      var _editors = /*#__PURE__*/new WeakMap();\n      var _hadPointerDown = /*#__PURE__*/new WeakMap();\n      var _isCleaningUp = /*#__PURE__*/new WeakMap();\n      var _uiManager = /*#__PURE__*/new WeakMap();\n      var _AnnotationEditorLayer_brand = /*#__PURE__*/new WeakSet();\n      var AnnotationEditorLayer = /*#__PURE__*/function () {\n        function AnnotationEditorLayer(options) {\n          _classCallCheck(this, AnnotationEditorLayer);\n          _classPrivateMethodInitSpec(this, _AnnotationEditorLayer_brand);\n          _classPrivateFieldInitSpec(this, _accessibilityManager, void 0);\n          _classPrivateFieldInitSpec(this, _allowClick, false);\n          _classPrivateFieldInitSpec(this, _boundPointerup, this.pointerup.bind(this));\n          _classPrivateFieldInitSpec(this, _boundPointerdown, this.pointerdown.bind(this));\n          _classPrivateFieldInitSpec(this, _editors, new Map());\n          _classPrivateFieldInitSpec(this, _hadPointerDown, false);\n          _classPrivateFieldInitSpec(this, _isCleaningUp, false);\n          _classPrivateFieldInitSpec(this, _uiManager, void 0);\n          if (!AnnotationEditorLayer._initialized) {\n            AnnotationEditorLayer._initialized = true;\n            _freetext.FreeTextEditor.initialize(options.l10n);\n            _ink.InkEditor.initialize(options.l10n);\n            options.uiManager.registerEditorTypes([_freetext.FreeTextEditor, _ink.InkEditor]);\n          }\n          _classPrivateFieldSet(_uiManager, this, options.uiManager);\n          this.annotationStorage = options.annotationStorage;\n          this.pageIndex = options.pageIndex;\n          this.div = options.div;\n          _classPrivateFieldSet(_accessibilityManager, this, options.accessibilityManager);\n          _classPrivateFieldGet(_uiManager, this).addLayer(this);\n        }\n        _createClass(AnnotationEditorLayer, [{\n          key: \"updateToolbar\",\n          value: function updateToolbar(mode) {\n            _classPrivateFieldGet(_uiManager, this).updateToolbar(mode);\n          }\n        }, {\n          key: \"updateMode\",\n          value: function updateMode() {\n            var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _classPrivateFieldGet(_uiManager, this).getMode();\n            _assertClassBrand(_AnnotationEditorLayer_brand, this, _cleanup).call(this);\n            if (mode === _util.AnnotationEditorType.INK) {\n              this.addInkEditorIfNeeded(false);\n              this.disableClick();\n            } else {\n              this.enableClick();\n            }\n            _classPrivateFieldGet(_uiManager, this).unselectAll();\n          }\n        }, {\n          key: \"addInkEditorIfNeeded\",\n          value: function addInkEditorIfNeeded(isCommitting) {\n            if (!isCommitting && _classPrivateFieldGet(_uiManager, this).getMode() !== _util.AnnotationEditorType.INK) {\n              return;\n            }\n            if (!isCommitting) {\n              var _iterator75 = _createForOfIteratorHelper(_classPrivateFieldGet(_editors, this).values()),\n                _step75;\n              try {\n                for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {\n                  var _editor2 = _step75.value;\n                  if (_editor2.isEmpty()) {\n                    _editor2.setInBackground();\n                    return;\n                  }\n                }\n              } catch (err) {\n                _iterator75.e(err);\n              } finally {\n                _iterator75.f();\n              }\n            }\n            var editor = _assertClassBrand(_AnnotationEditorLayer_brand, this, _createAndAddNewEditor).call(this, {\n              offsetX: 0,\n              offsetY: 0\n            });\n            editor.setInBackground();\n          }\n        }, {\n          key: \"setEditingState\",\n          value: function setEditingState(isEditing) {\n            _classPrivateFieldGet(_uiManager, this).setEditingState(isEditing);\n          }\n        }, {\n          key: \"addCommands\",\n          value: function addCommands(params) {\n            _classPrivateFieldGet(_uiManager, this).addCommands(params);\n          }\n        }, {\n          key: \"enable\",\n          value: function enable() {\n            this.div.style.pointerEvents = \"auto\";\n            var _iterator76 = _createForOfIteratorHelper(_classPrivateFieldGet(_editors, this).values()),\n              _step76;\n            try {\n              for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {\n                var editor = _step76.value;\n                editor.enableEditing();\n              }\n            } catch (err) {\n              _iterator76.e(err);\n            } finally {\n              _iterator76.f();\n            }\n          }\n        }, {\n          key: \"disable\",\n          value: function disable() {\n            this.div.style.pointerEvents = \"none\";\n            var _iterator77 = _createForOfIteratorHelper(_classPrivateFieldGet(_editors, this).values()),\n              _step77;\n            try {\n              for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {\n                var editor = _step77.value;\n                editor.disableEditing();\n              }\n            } catch (err) {\n              _iterator77.e(err);\n            } finally {\n              _iterator77.f();\n            }\n          }\n        }, {\n          key: \"setActiveEditor\",\n          value: function setActiveEditor(editor) {\n            var currentActive = _classPrivateFieldGet(_uiManager, this).getActive();\n            if (currentActive === editor) {\n              return;\n            }\n            _classPrivateFieldGet(_uiManager, this).setActiveEditor(editor);\n          }\n        }, {\n          key: \"enableClick\",\n          value: function enableClick() {\n            this.div.addEventListener(\"pointerdown\", _classPrivateFieldGet(_boundPointerdown, this));\n            this.div.addEventListener(\"pointerup\", _classPrivateFieldGet(_boundPointerup, this));\n          }\n        }, {\n          key: \"disableClick\",\n          value: function disableClick() {\n            this.div.removeEventListener(\"pointerdown\", _classPrivateFieldGet(_boundPointerdown, this));\n            this.div.removeEventListener(\"pointerup\", _classPrivateFieldGet(_boundPointerup, this));\n          }\n        }, {\n          key: \"attach\",\n          value: function attach(editor) {\n            _classPrivateFieldGet(_editors, this).set(editor.id, editor);\n          }\n        }, {\n          key: \"detach\",\n          value: function detach(editor) {\n            var _classPrivateFieldGet4;\n            _classPrivateFieldGet(_editors, this).delete(editor.id);\n            (_classPrivateFieldGet4 = _classPrivateFieldGet(_accessibilityManager, this)) === null || _classPrivateFieldGet4 === void 0 ? void 0 : _classPrivateFieldGet4.removePointerInTextLayer(editor.contentDiv);\n          }\n        }, {\n          key: \"remove\",\n          value: function remove(editor) {\n            var _this36 = this;\n            _classPrivateFieldGet(_uiManager, this).removeEditor(editor);\n            this.detach(editor);\n            this.annotationStorage.remove(editor.id);\n            editor.div.style.display = \"none\";\n            setTimeout(function () {\n              editor.div.style.display = \"\";\n              editor.div.remove();\n              editor.isAttachedToDOM = false;\n              if (document.activeElement === document.body) {\n                _classPrivateFieldGet(_uiManager, _this36).focusMainContainer();\n              }\n            }, 0);\n            if (!_classPrivateFieldGet(_isCleaningUp, this)) {\n              this.addInkEditorIfNeeded(false);\n            }\n          }\n        }, {\n          key: \"add\",\n          value: function add(editor) {\n            _assertClassBrand(_AnnotationEditorLayer_brand, this, _changeParent).call(this, editor);\n            _classPrivateFieldGet(_uiManager, this).addEditor(editor);\n            this.attach(editor);\n            if (!editor.isAttachedToDOM) {\n              var div = editor.render();\n              this.div.append(div);\n              editor.isAttachedToDOM = true;\n            }\n            this.moveEditorInDOM(editor);\n            editor.onceAdded();\n            this.addToAnnotationStorage(editor);\n          }\n        }, {\n          key: \"moveEditorInDOM\",\n          value: function moveEditorInDOM(editor) {\n            var _classPrivateFieldGet5;\n            (_classPrivateFieldGet5 = _classPrivateFieldGet(_accessibilityManager, this)) === null || _classPrivateFieldGet5 === void 0 ? void 0 : _classPrivateFieldGet5.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n          }\n        }, {\n          key: \"addToAnnotationStorage\",\n          value: function addToAnnotationStorage(editor) {\n            if (!editor.isEmpty() && !this.annotationStorage.has(editor.id)) {\n              this.annotationStorage.setValue(editor.id, editor);\n            }\n          }\n        }, {\n          key: \"addOrRebuild\",\n          value: function addOrRebuild(editor) {\n            if (editor.needsToBeRebuilt()) {\n              editor.rebuild();\n            } else {\n              this.add(editor);\n            }\n          }\n        }, {\n          key: \"addANewEditor\",\n          value: function addANewEditor(editor) {\n            var _this37 = this;\n            var cmd = function cmd() {\n              _this37.addOrRebuild(editor);\n            };\n            var undo = function undo() {\n              editor.remove();\n            };\n            this.addCommands({\n              cmd: cmd,\n              undo: undo,\n              mustExec: true\n            });\n          }\n        }, {\n          key: \"addUndoableEditor\",\n          value: function addUndoableEditor(editor) {\n            var _this38 = this;\n            var cmd = function cmd() {\n              _this38.addOrRebuild(editor);\n            };\n            var undo = function undo() {\n              editor.remove();\n            };\n            this.addCommands({\n              cmd: cmd,\n              undo: undo,\n              mustExec: false\n            });\n          }\n        }, {\n          key: \"getNextId\",\n          value: function getNextId() {\n            return _classPrivateFieldGet(_uiManager, this).getId();\n          }\n        }, {\n          key: \"deserialize\",\n          value: function deserialize(data) {\n            switch (data.annotationType) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return _freetext.FreeTextEditor.deserialize(data, this);\n              case _util.AnnotationEditorType.INK:\n                return _ink.InkEditor.deserialize(data, this);\n            }\n            return null;\n          }\n        }, {\n          key: \"setSelected\",\n          value: function setSelected(editor) {\n            _classPrivateFieldGet(_uiManager, this).setSelected(editor);\n          }\n        }, {\n          key: \"toggleSelected\",\n          value: function toggleSelected(editor) {\n            _classPrivateFieldGet(_uiManager, this).toggleSelected(editor);\n          }\n        }, {\n          key: \"isSelected\",\n          value: function isSelected(editor) {\n            return _classPrivateFieldGet(_uiManager, this).isSelected(editor);\n          }\n        }, {\n          key: \"unselect\",\n          value: function unselect(editor) {\n            _classPrivateFieldGet(_uiManager, this).unselect(editor);\n          }\n        }, {\n          key: \"pointerup\",\n          value: function pointerup(event) {\n            var isMac = _tools.KeyboardManager.platform.isMac;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            if (event.target !== this.div) {\n              return;\n            }\n            if (!_classPrivateFieldGet(_hadPointerDown, this)) {\n              return;\n            }\n            _classPrivateFieldSet(_hadPointerDown, this, false);\n            if (!_classPrivateFieldGet(_allowClick, this)) {\n              _classPrivateFieldSet(_allowClick, this, true);\n              return;\n            }\n            _assertClassBrand(_AnnotationEditorLayer_brand, this, _createAndAddNewEditor).call(this, event);\n          }\n        }, {\n          key: \"pointerdown\",\n          value: function pointerdown(event) {\n            var isMac = _tools.KeyboardManager.platform.isMac;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            if (event.target !== this.div) {\n              return;\n            }\n            _classPrivateFieldSet(_hadPointerDown, this, true);\n            var editor = _classPrivateFieldGet(_uiManager, this).getActive();\n            _classPrivateFieldSet(_allowClick, this, !editor || editor.isEmpty());\n          }\n        }, {\n          key: \"drop\",\n          value: function drop(event) {\n            var id = event.dataTransfer.getData(\"text/plain\");\n            var editor = _classPrivateFieldGet(_uiManager, this).getEditor(id);\n            if (!editor) {\n              return;\n            }\n            event.preventDefault();\n            event.dataTransfer.dropEffect = \"move\";\n            _assertClassBrand(_AnnotationEditorLayer_brand, this, _changeParent).call(this, editor);\n            var rect = this.div.getBoundingClientRect();\n            var endX = event.clientX - rect.x;\n            var endY = event.clientY - rect.y;\n            editor.translate(endX - editor.startX, endY - editor.startY);\n            this.moveEditorInDOM(editor);\n            editor.div.focus();\n          }\n        }, {\n          key: \"dragover\",\n          value: function dragover(event) {\n            event.preventDefault();\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            var _classPrivateFieldGet6;\n            if (((_classPrivateFieldGet6 = _classPrivateFieldGet(_uiManager, this).getActive()) === null || _classPrivateFieldGet6 === void 0 ? void 0 : _classPrivateFieldGet6.parent) === this) {\n              _classPrivateFieldGet(_uiManager, this).setActiveEditor(null);\n            }\n            var _iterator78 = _createForOfIteratorHelper(_classPrivateFieldGet(_editors, this).values()),\n              _step78;\n            try {\n              for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {\n                var _classPrivateFieldGet7;\n                var editor = _step78.value;\n                (_classPrivateFieldGet7 = _classPrivateFieldGet(_accessibilityManager, this)) === null || _classPrivateFieldGet7 === void 0 ? void 0 : _classPrivateFieldGet7.removePointerInTextLayer(editor.contentDiv);\n                editor.isAttachedToDOM = false;\n                editor.div.remove();\n                editor.parent = null;\n              }\n            } catch (err) {\n              _iterator78.e(err);\n            } finally {\n              _iterator78.f();\n            }\n            this.div = null;\n            _classPrivateFieldGet(_editors, this).clear();\n            _classPrivateFieldGet(_uiManager, this).removeLayer(this);\n          }\n        }, {\n          key: \"render\",\n          value: function render(parameters) {\n            this.viewport = parameters.viewport;\n            (0, _tools.bindEvents)(this, this.div, [\"dragover\", \"drop\"]);\n            this.setDimensions();\n            var _iterator79 = _createForOfIteratorHelper(_classPrivateFieldGet(_uiManager, this).getEditors(this.pageIndex)),\n              _step79;\n            try {\n              for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {\n                var editor = _step79.value;\n                this.add(editor);\n              }\n            } catch (err) {\n              _iterator79.e(err);\n            } finally {\n              _iterator79.f();\n            }\n            this.updateMode();\n          }\n        }, {\n          key: \"update\",\n          value: function update(parameters) {\n            this.viewport = parameters.viewport;\n            this.setDimensions();\n            this.updateMode();\n          }\n        }, {\n          key: \"scaleFactor\",\n          get: function get() {\n            return this.viewport.scale;\n          }\n        }, {\n          key: \"pageDimensions\",\n          get: function get() {\n            var _this$viewport$viewBo = _slicedToArray(this.viewport.viewBox, 4),\n              pageLLx = _this$viewport$viewBo[0],\n              pageLLy = _this$viewport$viewBo[1],\n              pageURx = _this$viewport$viewBo[2],\n              pageURy = _this$viewport$viewBo[3];\n            var width = pageURx - pageLLx;\n            var height = pageURy - pageLLy;\n            return [width, height];\n          }\n        }, {\n          key: \"viewportBaseDimensions\",\n          get: function get() {\n            var _this$viewport = this.viewport,\n              width = _this$viewport.width,\n              height = _this$viewport.height,\n              rotation = _this$viewport.rotation;\n            return rotation % 180 === 0 ? [width, height] : [height, width];\n          }\n        }, {\n          key: \"setDimensions\",\n          value: function setDimensions() {\n            var _this$viewport2 = this.viewport,\n              width = _this$viewport2.width,\n              height = _this$viewport2.height,\n              rotation = _this$viewport2.rotation;\n            var flipOrientation = rotation % 180 !== 0,\n              widthStr = Math.floor(width) + \"px\",\n              heightStr = Math.floor(height) + \"px\";\n            this.div.style.width = flipOrientation ? heightStr : widthStr;\n            this.div.style.height = flipOrientation ? widthStr : heightStr;\n            this.div.setAttribute(\"data-main-rotation\", rotation);\n          }\n        }]);\n        return AnnotationEditorLayer;\n      }();\n      function _changeParent(editor) {\n        var _editor$parent;\n        if (editor.parent === this) {\n          return;\n        }\n        this.attach(editor);\n        editor.pageIndex = this.pageIndex;\n        (_editor$parent = editor.parent) === null || _editor$parent === void 0 ? void 0 : _editor$parent.detach(editor);\n        editor.parent = this;\n        if (editor.div && editor.isAttachedToDOM) {\n          editor.div.remove();\n          this.div.append(editor.div);\n        }\n      }\n      function _createNewEditor(params) {\n        switch (_classPrivateFieldGet(_uiManager, this).getMode()) {\n          case _util.AnnotationEditorType.FREETEXT:\n            return new _freetext.FreeTextEditor(params);\n          case _util.AnnotationEditorType.INK:\n            return new _ink.InkEditor(params);\n        }\n        return null;\n      }\n      function _createAndAddNewEditor(event) {\n        var id = this.getNextId();\n        var editor = _assertClassBrand(_AnnotationEditorLayer_brand, this, _createNewEditor).call(this, {\n          parent: this,\n          id: id,\n          x: event.offsetX,\n          y: event.offsetY\n        });\n        if (editor) {\n          this.add(editor);\n        }\n        return editor;\n      }\n      function _cleanup() {\n        _classPrivateFieldSet(_isCleaningUp, this, true);\n        var _iterator80 = _createForOfIteratorHelper(_classPrivateFieldGet(_editors, this).values()),\n          _step80;\n        try {\n          for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {\n            var editor = _step80.value;\n            if (editor.isEmpty()) {\n              editor.remove();\n            }\n          }\n        } catch (err) {\n          _iterator80.e(err);\n        } finally {\n          _iterator80.f();\n        }\n        _classPrivateFieldSet(_isCleaningUp, this, false);\n      }\n      _defineProperty(AnnotationEditorLayer, \"_initialized\", false);\n      exports.AnnotationEditorLayer = AnnotationEditorLayer;\n\n      /***/\n    }), ( /* 23 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      var _FreeTextEditor;\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FreeTextEditor = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _tools = __w_pdfjs_require__(7);\n      var _editor = __w_pdfjs_require__(6);\n      var _boundEditorDivBlur = /*#__PURE__*/new WeakMap();\n      var _boundEditorDivFocus = /*#__PURE__*/new WeakMap();\n      var _boundEditorDivKeydown = /*#__PURE__*/new WeakMap();\n      var _color = /*#__PURE__*/new WeakMap();\n      var _content = /*#__PURE__*/new WeakMap();\n      var _hasAlreadyBeenCommitted = /*#__PURE__*/new WeakMap();\n      var _fontSize = /*#__PURE__*/new WeakMap();\n      var _FreeTextEditor_brand = /*#__PURE__*/new WeakSet();\n      var FreeTextEditor = /*#__PURE__*/function (_editor$AnnotationEdi) {\n        _inherits(FreeTextEditor, _editor$AnnotationEdi);\n        function FreeTextEditor(params) {\n          var _this39;\n          _classCallCheck(this, FreeTextEditor);\n          _this39 = _callSuper(this, FreeTextEditor, [_objectSpread(_objectSpread({}, params), {}, {\n            name: \"freeTextEditor\"\n          })]);\n          _classPrivateMethodInitSpec(_assertThisInitialized(_this39), _FreeTextEditor_brand);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _boundEditorDivBlur, _this39.editorDivBlur.bind(_assertThisInitialized(_this39)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _boundEditorDivFocus, _this39.editorDivFocus.bind(_assertThisInitialized(_this39)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _boundEditorDivKeydown, _this39.editorDivKeydown.bind(_assertThisInitialized(_this39)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _color, void 0);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _content, \"\");\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _hasAlreadyBeenCommitted, false);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _fontSize, void 0);\n          _classPrivateFieldSet(_color, _assertThisInitialized(_this39), params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor);\n          _classPrivateFieldSet(_fontSize, _assertThisInitialized(_this39), params.fontSize || FreeTextEditor._defaultFontSize);\n          return _this39;\n        }\n        _createClass(FreeTextEditor, [{\n          key: \"updateParams\",\n          value: function updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                _assertClassBrand(_FreeTextEditor_brand, this, _updateFontSize).call(this, value);\n                break;\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                _assertClassBrand(_FreeTextEditor_brand, this, _updateColor).call(this, value);\n                break;\n            }\n          }\n        }, {\n          key: \"propertiesToUpdate\",\n          get: function get() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, _classPrivateFieldGet(_fontSize, this)], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, _classPrivateFieldGet(_color, this)]];\n          }\n        }, {\n          key: \"getInitialTranslation\",\n          value: function getInitialTranslation() {\n            return [-FreeTextEditor._internalPadding * this.parent.scaleFactor, -(FreeTextEditor._internalPadding + _classPrivateFieldGet(_fontSize, this)) * this.parent.scaleFactor];\n          }\n        }, {\n          key: \"rebuild\",\n          value: function rebuild() {\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"rebuild\", this).call(this);\n            if (this.div === null) {\n              return;\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n        }, {\n          key: \"enableEditMode\",\n          value: function enableEditMode() {\n            if (this.isInEditMode()) {\n              return;\n            }\n            this.parent.setEditingState(false);\n            this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"enableEditMode\", this).call(this);\n            this.enableEditing();\n            this.overlayDiv.classList.remove(\"enabled\");\n            this.editorDiv.contentEditable = true;\n            this.div.draggable = false;\n            this.editorDiv.addEventListener(\"keydown\", _classPrivateFieldGet(_boundEditorDivKeydown, this));\n            this.editorDiv.addEventListener(\"focus\", _classPrivateFieldGet(_boundEditorDivFocus, this));\n            this.editorDiv.addEventListener(\"blur\", _classPrivateFieldGet(_boundEditorDivBlur, this));\n          }\n        }, {\n          key: \"disableEditMode\",\n          value: function disableEditMode() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n            this.parent.setEditingState(true);\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"disableEditMode\", this).call(this);\n            this.disableEditing();\n            this.overlayDiv.classList.add(\"enabled\");\n            this.editorDiv.contentEditable = false;\n            this.div.draggable = true;\n            this.editorDiv.removeEventListener(\"keydown\", _classPrivateFieldGet(_boundEditorDivKeydown, this));\n            this.editorDiv.removeEventListener(\"focus\", _classPrivateFieldGet(_boundEditorDivFocus, this));\n            this.editorDiv.removeEventListener(\"blur\", _classPrivateFieldGet(_boundEditorDivBlur, this));\n            this.div.focus();\n            this.isEditing = false;\n          }\n        }, {\n          key: \"focusin\",\n          value: function focusin(event) {\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"focusin\", this).call(this, event);\n            if (event.target !== this.editorDiv) {\n              this.editorDiv.focus();\n            }\n          }\n        }, {\n          key: \"onceAdded\",\n          value: function onceAdded() {\n            if (this.width) {\n              return;\n            }\n            this.enableEditMode();\n            this.editorDiv.focus();\n          }\n        }, {\n          key: \"isEmpty\",\n          value: function isEmpty() {\n            return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n          }\n        }, {\n          key: \"remove\",\n          value: function remove() {\n            this.isEditing = false;\n            this.parent.setEditingState(true);\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"remove\", this).call(this);\n          }\n        }, {\n          key: \"commit\",\n          value: function commit() {\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"commit\", this).call(this);\n            if (!_classPrivateFieldGet(_hasAlreadyBeenCommitted, this)) {\n              _classPrivateFieldSet(_hasAlreadyBeenCommitted, this, true);\n              this.parent.addUndoableEditor(this);\n            }\n            this.disableEditMode();\n            _classPrivateFieldSet(_content, this, _assertClassBrand(_FreeTextEditor_brand, this, _extractText).call(this).trimEnd());\n            _assertClassBrand(_FreeTextEditor_brand, this, _setEditorDimensions).call(this);\n          }\n        }, {\n          key: \"shouldGetKeyboardEvents\",\n          value: function shouldGetKeyboardEvents() {\n            return this.isInEditMode();\n          }\n        }, {\n          key: \"dblclick\",\n          value: function dblclick(event) {\n            this.enableEditMode();\n            this.editorDiv.focus();\n          }\n        }, {\n          key: \"keydown\",\n          value: function keydown(event) {\n            if (event.target === this.div && event.key === \"Enter\") {\n              this.enableEditMode();\n              this.editorDiv.focus();\n            }\n          }\n        }, {\n          key: \"editorDivKeydown\",\n          value: function editorDivKeydown(event) {\n            FreeTextEditor._keyboardManager.exec(this, event);\n          }\n        }, {\n          key: \"editorDivFocus\",\n          value: function editorDivFocus(event) {\n            this.isEditing = true;\n          }\n        }, {\n          key: \"editorDivBlur\",\n          value: function editorDivBlur(event) {\n            this.isEditing = false;\n          }\n        }, {\n          key: \"disableEditing\",\n          value: function disableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"comment\");\n            this.editorDiv.removeAttribute(\"aria-multiline\");\n          }\n        }, {\n          key: \"enableEditing\",\n          value: function enableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"textbox\");\n            this.editorDiv.setAttribute(\"aria-multiline\", true);\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            var _this40 = this;\n            if (this.div) {\n              return this.div;\n            }\n            var baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            _get(_getPrototypeOf(FreeTextEditor.prototype), \"render\", this).call(this);\n            this.editorDiv = document.createElement(\"div\");\n            this.editorDiv.className = \"internal\";\n            this.editorDiv.setAttribute(\"id\", \"\".concat(this.id, \"-editor\"));\n            this.enableEditing();\n            FreeTextEditor._l10nPromise.get(\"editor_free_text_aria_label\").then(function (msg) {\n              var _this40$editorDiv;\n              return (_this40$editorDiv = _this40.editorDiv) === null || _this40$editorDiv === void 0 ? void 0 : _this40$editorDiv.setAttribute(\"aria-label\", msg);\n            });\n            FreeTextEditor._l10nPromise.get(\"free_text_default_content\").then(function (msg) {\n              var _this40$editorDiv2;\n              return (_this40$editorDiv2 = _this40.editorDiv) === null || _this40$editorDiv2 === void 0 ? void 0 : _this40$editorDiv2.setAttribute(\"default-content\", msg);\n            });\n            this.editorDiv.contentEditable = true;\n            var style = this.editorDiv.style;\n            style.fontSize = \"calc(\".concat(_classPrivateFieldGet(_fontSize, this), \"px * var(--scale-factor))\");\n            style.color = _classPrivateFieldGet(_color, this);\n            this.div.append(this.editorDiv);\n            this.overlayDiv = document.createElement(\"div\");\n            this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n            this.div.append(this.overlayDiv);\n            (0, _tools.bindEvents)(this, this.div, [\"dblclick\", \"keydown\"]);\n            if (this.width) {\n              var _this$parent$viewport6 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n                parentWidth = _this$parent$viewport6[0],\n                parentHeight = _this$parent$viewport6[1];\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              var _iterator81 = _createForOfIteratorHelper(_classPrivateFieldGet(_content, this).split(\"\\n\")),\n                _step81;\n              try {\n                for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {\n                  var line = _step81.value;\n                  var div = document.createElement(\"div\");\n                  div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n                  this.editorDiv.append(div);\n                }\n              } catch (err) {\n                _iterator81.e(err);\n              } finally {\n                _iterator81.f();\n              }\n              this.div.draggable = true;\n              this.editorDiv.contentEditable = false;\n            } else {\n              this.div.draggable = false;\n              this.editorDiv.contentEditable = true;\n            }\n            return this.div;\n          }\n        }, {\n          key: \"contentDiv\",\n          get: function get() {\n            return this.editorDiv;\n          }\n        }, {\n          key: \"serialize\",\n          value: function serialize() {\n            if (this.isEmpty()) {\n              return null;\n            }\n            var padding = FreeTextEditor._internalPadding * this.parent.scaleFactor;\n            var rect = this.getRect(padding, padding);\n            var color = _editor.AnnotationEditor._colorManager.convert(getComputedStyle(this.editorDiv).color);\n            return {\n              annotationType: _util.AnnotationEditorType.FREETEXT,\n              color: color,\n              fontSize: _classPrivateFieldGet(_fontSize, this),\n              value: _classPrivateFieldGet(_content, this),\n              pageIndex: this.parent.pageIndex,\n              rect: rect,\n              rotation: this.rotation\n            };\n          }\n        }], [{\n          key: \"initialize\",\n          value: function initialize(l10n) {\n            this._l10nPromise = new Map([\"free_text_default_content\", \"editor_free_text_aria_label\"].map(function (str) {\n              return [str, l10n.get(str)];\n            }));\n            var style = getComputedStyle(document.documentElement);\n            this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n          }\n        }, {\n          key: \"updateDefaultParams\",\n          value: function updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                FreeTextEditor._defaultFontSize = value;\n                break;\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                FreeTextEditor._defaultColor = value;\n                break;\n            }\n          }\n        }, {\n          key: \"defaultPropertiesToUpdate\",\n          get: function get() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor]];\n          }\n        }, {\n          key: \"deserialize\",\n          value: function deserialize(data, parent) {\n            var _util$Util2;\n            var editor = _get(_getPrototypeOf(FreeTextEditor), \"deserialize\", this).call(this, data, parent);\n            _classPrivateFieldSet(_fontSize, editor, data.fontSize);\n            _classPrivateFieldSet(_color, editor, (_util$Util2 = _util.Util).makeHexColor.apply(_util$Util2, _toConsumableArray(data.color)));\n            _classPrivateFieldSet(_content, editor, data.value);\n            return editor;\n          }\n        }]);\n        return FreeTextEditor;\n      }(_editor.AnnotationEditor);\n      _FreeTextEditor = FreeTextEditor;\n      function _updateFontSize(fontSize) {\n        var _this41 = this;\n        var setFontsize = function setFontsize(size) {\n          _this41.editorDiv.style.fontSize = \"calc(\".concat(size, \"px * var(--scale-factor))\");\n          _this41.translate(0, -(size - _classPrivateFieldGet(_fontSize, _this41)) * _this41.parent.scaleFactor);\n          _classPrivateFieldSet(_fontSize, _this41, size);\n          _assertClassBrand(_FreeTextEditor_brand, _this41, _setEditorDimensions).call(_this41);\n        };\n        var savedFontsize = _classPrivateFieldGet(_fontSize, this);\n        this.parent.addCommands({\n          cmd: function cmd() {\n            setFontsize(fontSize);\n          },\n          undo: function undo() {\n            setFontsize(savedFontsize);\n          },\n          mustExec: true,\n          type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n          overwriteIfSameType: true,\n          keepUndo: true\n        });\n      }\n      function _updateColor(color) {\n        var _this42 = this;\n        var savedColor = _classPrivateFieldGet(_color, this);\n        this.parent.addCommands({\n          cmd: function cmd() {\n            _classPrivateFieldSet(_color, _this42, color);\n            _this42.editorDiv.style.color = color;\n          },\n          undo: function undo() {\n            _classPrivateFieldSet(_color, _this42, savedColor);\n            _this42.editorDiv.style.color = savedColor;\n          },\n          mustExec: true,\n          type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n          overwriteIfSameType: true,\n          keepUndo: true\n        });\n      }\n      function _extractText() {\n        var divs = this.editorDiv.getElementsByTagName(\"div\");\n        if (divs.length === 0) {\n          return this.editorDiv.innerText;\n        }\n        var buffer = [];\n        for (var i = 0, ii = divs.length; i < ii; i++) {\n          var div = divs[i];\n          var first = div.firstChild;\n          if ((first === null || first === void 0 ? void 0 : first.nodeName) === \"#text\") {\n            buffer.push(first.data);\n          } else {\n            buffer.push(\"\");\n          }\n        }\n        return buffer.join(\"\\n\");\n      }\n      function _setEditorDimensions() {\n        var _this$parent$viewport7 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n          parentWidth = _this$parent$viewport7[0],\n          parentHeight = _this$parent$viewport7[1];\n        var rect = this.div.getBoundingClientRect();\n        this.width = rect.width / parentWidth;\n        this.height = rect.height / parentHeight;\n      }\n      _defineProperty(FreeTextEditor, \"_freeTextDefaultContent\", \"\");\n      _defineProperty(FreeTextEditor, \"_l10nPromise\", void 0);\n      _defineProperty(FreeTextEditor, \"_internalPadding\", 0);\n      _defineProperty(FreeTextEditor, \"_defaultColor\", null);\n      _defineProperty(FreeTextEditor, \"_defaultFontSize\", 10);\n      _defineProperty(FreeTextEditor, \"_keyboardManager\", new _tools.KeyboardManager([[[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], _FreeTextEditor.prototype.commitOrRemove]]));\n      _defineProperty(FreeTextEditor, \"_type\", \"freetext\");\n      exports.FreeTextEditor = FreeTextEditor;\n\n      /***/\n    }), ( /* 24 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      var _InkEditor;\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.InkEditor = void 0;\n      Object.defineProperty(exports, \"fitCurve\", {\n        enumerable: true,\n        get: function get() {\n          return _pdfjsFitCurve.fitCurve;\n        }\n      });\n      var _util = __w_pdfjs_require__(1);\n      var _editor = __w_pdfjs_require__(6);\n      var _pdfjsFitCurve = __w_pdfjs_require__(25);\n      var _tools = __w_pdfjs_require__(7);\n      var RESIZER_SIZE = 16;\n      var _aspectRatio = /*#__PURE__*/new WeakMap();\n      var _baseHeight = /*#__PURE__*/new WeakMap();\n      var _baseWidth = /*#__PURE__*/new WeakMap();\n      var _boundCanvasPointermove = /*#__PURE__*/new WeakMap();\n      var _boundCanvasPointerleave = /*#__PURE__*/new WeakMap();\n      var _boundCanvasPointerup = /*#__PURE__*/new WeakMap();\n      var _boundCanvasPointerdown = /*#__PURE__*/new WeakMap();\n      var _disableEditing = /*#__PURE__*/new WeakMap();\n      var _isCanvasInitialized = /*#__PURE__*/new WeakMap();\n      var _lastPoint = /*#__PURE__*/new WeakMap();\n      var _observer = /*#__PURE__*/new WeakMap();\n      var _realWidth = /*#__PURE__*/new WeakMap();\n      var _realHeight = /*#__PURE__*/new WeakMap();\n      var _requestFrameCallback = /*#__PURE__*/new WeakMap();\n      var _InkEditor_brand = /*#__PURE__*/new WeakSet();\n      var InkEditor = /*#__PURE__*/function (_editor$AnnotationEdi2) {\n        _inherits(InkEditor, _editor$AnnotationEdi2);\n        function InkEditor(params) {\n          var _this43;\n          _classCallCheck(this, InkEditor);\n          _this43 = _callSuper(this, InkEditor, [_objectSpread(_objectSpread({}, params), {}, {\n            name: \"inkEditor\"\n          })]);\n          _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _InkEditor_brand);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _aspectRatio, 0);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _baseHeight, 0);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _baseWidth, 0);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _boundCanvasPointermove, _this43.canvasPointermove.bind(_assertThisInitialized(_this43)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _boundCanvasPointerleave, _this43.canvasPointerleave.bind(_assertThisInitialized(_this43)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _boundCanvasPointerup, _this43.canvasPointerup.bind(_assertThisInitialized(_this43)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _boundCanvasPointerdown, _this43.canvasPointerdown.bind(_assertThisInitialized(_this43)));\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _disableEditing, false);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _isCanvasInitialized, false);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _lastPoint, null);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _observer, null);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _realWidth, 0);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _realHeight, 0);\n          _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _requestFrameCallback, null);\n          _this43.color = params.color || null;\n          _this43.thickness = params.thickness || null;\n          _this43.opacity = params.opacity || null;\n          _this43.paths = [];\n          _this43.bezierPath2D = [];\n          _this43.currentPath = [];\n          _this43.scaleFactor = 1;\n          _this43.translationX = _this43.translationY = 0;\n          _this43.x = 0;\n          _this43.y = 0;\n          return _this43;\n        }\n        _createClass(InkEditor, [{\n          key: \"updateParams\",\n          value: function updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                _assertClassBrand(_InkEditor_brand, this, _updateThickness).call(this, value);\n                break;\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                _assertClassBrand(_InkEditor_brand, this, _updateColor2).call(this, value);\n                break;\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                _assertClassBrand(_InkEditor_brand, this, _updateOpacity).call(this, value);\n                break;\n            }\n          }\n        }, {\n          key: \"propertiesToUpdate\",\n          get: function get() {\n            var _this$opacity;\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * ((_this$opacity = this.opacity) !== null && _this$opacity !== void 0 ? _this$opacity : InkEditor._defaultOpacity))]];\n          }\n        }, {\n          key: \"rebuild\",\n          value: function rebuild() {\n            _get(_getPrototypeOf(InkEditor.prototype), \"rebuild\", this).call(this);\n            if (this.div === null) {\n              return;\n            }\n            if (!this.canvas) {\n              _assertClassBrand(_InkEditor_brand, this, _createCanvas2).call(this);\n              _assertClassBrand(_InkEditor_brand, this, _createObserver).call(this);\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n              _assertClassBrand(_InkEditor_brand, this, _setCanvasDims).call(this);\n            }\n            _assertClassBrand(_InkEditor_brand, this, _fitToContent).call(this);\n          }\n        }, {\n          key: \"remove\",\n          value: function remove() {\n            if (this.canvas === null) {\n              return;\n            }\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.remove();\n            this.canvas = null;\n            _classPrivateFieldGet(_observer, this).disconnect();\n            _classPrivateFieldSet(_observer, this, null);\n            _get(_getPrototypeOf(InkEditor.prototype), \"remove\", this).call(this);\n          }\n        }, {\n          key: \"enableEditMode\",\n          value: function enableEditMode() {\n            if (_classPrivateFieldGet(_disableEditing, this) || this.canvas === null) {\n              return;\n            }\n            _get(_getPrototypeOf(InkEditor.prototype), \"enableEditMode\", this).call(this);\n            this.div.draggable = false;\n            this.canvas.addEventListener(\"pointerdown\", _classPrivateFieldGet(_boundCanvasPointerdown, this));\n            this.canvas.addEventListener(\"pointerup\", _classPrivateFieldGet(_boundCanvasPointerup, this));\n          }\n        }, {\n          key: \"disableEditMode\",\n          value: function disableEditMode() {\n            if (!this.isInEditMode() || this.canvas === null) {\n              return;\n            }\n            _get(_getPrototypeOf(InkEditor.prototype), \"disableEditMode\", this).call(this);\n            this.div.draggable = !this.isEmpty();\n            this.div.classList.remove(\"editing\");\n            this.canvas.removeEventListener(\"pointerdown\", _classPrivateFieldGet(_boundCanvasPointerdown, this));\n            this.canvas.removeEventListener(\"pointerup\", _classPrivateFieldGet(_boundCanvasPointerup, this));\n          }\n        }, {\n          key: \"onceAdded\",\n          value: function onceAdded() {\n            this.div.draggable = !this.isEmpty();\n          }\n        }, {\n          key: \"isEmpty\",\n          value: function isEmpty() {\n            return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n          }\n        }, {\n          key: \"commit\",\n          value: function commit() {\n            if (_classPrivateFieldGet(_disableEditing, this)) {\n              return;\n            }\n            _get(_getPrototypeOf(InkEditor.prototype), \"commit\", this).call(this);\n            this.isEditing = false;\n            this.disableEditMode();\n            this.setInForeground();\n            _classPrivateFieldSet(_disableEditing, this, true);\n            this.div.classList.add(\"disabled\");\n            _assertClassBrand(_InkEditor_brand, this, _fitToContent).call(this, true);\n            this.parent.addInkEditorIfNeeded(true);\n            this.parent.moveEditorInDOM(this);\n            this.div.focus();\n          }\n        }, {\n          key: \"focusin\",\n          value: function focusin(event) {\n            _get(_getPrototypeOf(InkEditor.prototype), \"focusin\", this).call(this, event);\n            this.enableEditMode();\n          }\n        }, {\n          key: \"canvasPointerdown\",\n          value: function canvasPointerdown(event) {\n            if (event.button !== 0 || !this.isInEditMode() || _classPrivateFieldGet(_disableEditing, this)) {\n              return;\n            }\n            this.setInForeground();\n            if (event.type !== \"mouse\") {\n              this.div.focus();\n            }\n            event.stopPropagation();\n            this.canvas.addEventListener(\"pointerleave\", _classPrivateFieldGet(_boundCanvasPointerleave, this));\n            this.canvas.addEventListener(\"pointermove\", _classPrivateFieldGet(_boundCanvasPointermove, this));\n            _assertClassBrand(_InkEditor_brand, this, _startDrawing).call(this, event.offsetX, event.offsetY);\n          }\n        }, {\n          key: \"canvasPointermove\",\n          value: function canvasPointermove(event) {\n            event.stopPropagation();\n            _assertClassBrand(_InkEditor_brand, this, _draw).call(this, event.offsetX, event.offsetY);\n          }\n        }, {\n          key: \"canvasPointerup\",\n          value: function canvasPointerup(event) {\n            if (event.button !== 0) {\n              return;\n            }\n            if (this.isInEditMode() && this.currentPath.length !== 0) {\n              event.stopPropagation();\n              _assertClassBrand(_InkEditor_brand, this, _endDrawing).call(this, event);\n              this.setInBackground();\n            }\n          }\n        }, {\n          key: \"canvasPointerleave\",\n          value: function canvasPointerleave(event) {\n            _assertClassBrand(_InkEditor_brand, this, _endDrawing).call(this, event);\n            this.setInBackground();\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            var _this44 = this;\n            if (this.div) {\n              return this.div;\n            }\n            var baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            _get(_getPrototypeOf(InkEditor.prototype), \"render\", this).call(this);\n            InkEditor._l10nPromise.get(\"editor_ink_aria_label\").then(function (msg) {\n              var _this44$div;\n              return (_this44$div = _this44.div) === null || _this44$div === void 0 ? void 0 : _this44$div.setAttribute(\"aria-label\", msg);\n            });\n            var _assertClassBrand$cal = _assertClassBrand(_InkEditor_brand, this, _getInitialBBox).call(this),\n              _assertClassBrand$cal2 = _slicedToArray(_assertClassBrand$cal, 4),\n              x = _assertClassBrand$cal2[0],\n              y = _assertClassBrand$cal2[1],\n              w = _assertClassBrand$cal2[2],\n              h = _assertClassBrand$cal2[3];\n            this.setAt(x, y, 0, 0);\n            this.setDims(w, h);\n            _assertClassBrand(_InkEditor_brand, this, _createCanvas2).call(this);\n            if (this.width) {\n              var _this$parent$viewport8 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n                parentWidth = _this$parent$viewport8[0],\n                parentHeight = _this$parent$viewport8[1];\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              _classPrivateFieldSet(_isCanvasInitialized, this, true);\n              _assertClassBrand(_InkEditor_brand, this, _setCanvasDims).call(this);\n              this.setDims(this.width * parentWidth, this.height * parentHeight);\n              _assertClassBrand(_InkEditor_brand, this, _redraw).call(this);\n              _assertClassBrand(_InkEditor_brand, this, _setMinDims).call(this);\n              this.div.classList.add(\"disabled\");\n            } else {\n              this.div.classList.add(\"editing\");\n              this.enableEditMode();\n            }\n            _assertClassBrand(_InkEditor_brand, this, _createObserver).call(this);\n            return this.div;\n          }\n        }, {\n          key: \"setDimensions\",\n          value: function setDimensions(width, height) {\n            var roundedWidth = Math.round(width);\n            var roundedHeight = Math.round(height);\n            if (_classPrivateFieldGet(_realWidth, this) === roundedWidth && _classPrivateFieldGet(_realHeight, this) === roundedHeight) {\n              return;\n            }\n            _classPrivateFieldSet(_realWidth, this, roundedWidth);\n            _classPrivateFieldSet(_realHeight, this, roundedHeight);\n            this.canvas.style.visibility = \"hidden\";\n            if (_classPrivateFieldGet(_aspectRatio, this) && Math.abs(_classPrivateFieldGet(_aspectRatio, this) - width / height) > 1e-2) {\n              height = Math.ceil(width / _classPrivateFieldGet(_aspectRatio, this));\n              this.setDims(width, height);\n            }\n            var _this$parent$viewport9 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n              parentWidth = _this$parent$viewport9[0],\n              parentHeight = _this$parent$viewport9[1];\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            if (_classPrivateFieldGet(_disableEditing, this)) {\n              _assertClassBrand(_InkEditor_brand, this, _setScaleFactor).call(this, width, height);\n            }\n            _assertClassBrand(_InkEditor_brand, this, _setCanvasDims).call(this);\n            _assertClassBrand(_InkEditor_brand, this, _redraw).call(this);\n            this.canvas.style.visibility = \"visible\";\n          }\n        }, {\n          key: \"serialize\",\n          value: function serialize() {\n            if (this.isEmpty()) {\n              return null;\n            }\n            var rect = this.getRect(0, 0);\n            var height = this.rotation % 180 === 0 ? rect[3] - rect[1] : rect[2] - rect[0];\n            var color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n            return {\n              annotationType: _util.AnnotationEditorType.INK,\n              color: color,\n              thickness: this.thickness,\n              opacity: this.opacity,\n              paths: _assertClassBrand(_InkEditor_brand, this, _serializePaths).call(this, this.scaleFactor / this.parent.scaleFactor, this.translationX, this.translationY, height),\n              pageIndex: this.parent.pageIndex,\n              rect: rect,\n              rotation: this.rotation\n            };\n          }\n        }], [{\n          key: \"initialize\",\n          value: function initialize(l10n) {\n            this._l10nPromise = new Map([\"editor_ink_canvas_aria_label\", \"editor_ink_aria_label\"].map(function (str) {\n              return [str, l10n.get(str)];\n            }));\n          }\n        }, {\n          key: \"updateDefaultParams\",\n          value: function updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                InkEditor._defaultThickness = value;\n                break;\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                InkEditor._defaultColor = value;\n                break;\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                InkEditor._defaultOpacity = value / 100;\n                break;\n            }\n          }\n        }, {\n          key: \"defaultPropertiesToUpdate\",\n          get: function get() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(InkEditor._defaultOpacity * 100)]];\n          }\n        }, {\n          key: \"deserialize\",\n          value: function deserialize(data, parent) {\n            var _util$Util3;\n            var editor = _get(_getPrototypeOf(InkEditor), \"deserialize\", this).call(this, data, parent);\n            editor.thickness = data.thickness;\n            editor.color = (_util$Util3 = _util.Util).makeHexColor.apply(_util$Util3, _toConsumableArray(data.color));\n            editor.opacity = data.opacity;\n            var _parent$pageDimension2 = _slicedToArray(parent.pageDimensions, 2),\n              pageWidth = _parent$pageDimension2[0],\n              pageHeight = _parent$pageDimension2[1];\n            var width = editor.width * pageWidth;\n            var height = editor.height * pageHeight;\n            var scaleFactor = parent.scaleFactor;\n            var padding = data.thickness / 2;\n            _classPrivateFieldSet(_aspectRatio, editor, width / height);\n            _classPrivateFieldSet(_disableEditing, editor, true);\n            _classPrivateFieldSet(_realWidth, editor, Math.round(width));\n            _classPrivateFieldSet(_realHeight, editor, Math.round(height));\n            var _iterator82 = _createForOfIteratorHelper(data.paths),\n              _step82;\n            try {\n              for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {\n                var bezier = _step82.value.bezier;\n                var path = [];\n                editor.paths.push(path);\n                var p0 = scaleFactor * (bezier[0] - padding);\n                var p1 = scaleFactor * (height - bezier[1] - padding);\n                for (var i = 2, ii = bezier.length; i < ii; i += 6) {\n                  var p10 = scaleFactor * (bezier[i] - padding);\n                  var p11 = scaleFactor * (height - bezier[i + 1] - padding);\n                  var p20 = scaleFactor * (bezier[i + 2] - padding);\n                  var p21 = scaleFactor * (height - bezier[i + 3] - padding);\n                  var p30 = scaleFactor * (bezier[i + 4] - padding);\n                  var p31 = scaleFactor * (height - bezier[i + 5] - padding);\n                  path.push([[p0, p1], [p10, p11], [p20, p21], [p30, p31]]);\n                  p0 = p30;\n                  p1 = p31;\n                }\n                var path2D = _assertClassBrand(InkEditor, this, _buildPath2D).call(this, path);\n                editor.bezierPath2D.push(path2D);\n              }\n            } catch (err) {\n              _iterator82.e(err);\n            } finally {\n              _iterator82.f();\n            }\n            var bbox = _assertClassBrand(_InkEditor_brand, editor, _getBbox).call(editor);\n            _classPrivateFieldSet(_baseWidth, editor, Math.max(RESIZER_SIZE, bbox[2] - bbox[0]));\n            _classPrivateFieldSet(_baseHeight, editor, Math.max(RESIZER_SIZE, bbox[3] - bbox[1]));\n            _assertClassBrand(_InkEditor_brand, editor, _setScaleFactor).call(editor, width, height);\n            return editor;\n          }\n        }]);\n        return InkEditor;\n      }(_editor.AnnotationEditor);\n      _InkEditor = InkEditor;\n      function _updateThickness(thickness) {\n        var _this45 = this;\n        var savedThickness = this.thickness;\n        this.parent.addCommands({\n          cmd: function cmd() {\n            _this45.thickness = thickness;\n            _assertClassBrand(_InkEditor_brand, _this45, _fitToContent).call(_this45);\n          },\n          undo: function undo() {\n            _this45.thickness = savedThickness;\n            _assertClassBrand(_InkEditor_brand, _this45, _fitToContent).call(_this45);\n          },\n          mustExec: true,\n          type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n          overwriteIfSameType: true,\n          keepUndo: true\n        });\n      }\n      function _updateColor2(color) {\n        var _this46 = this;\n        var savedColor = this.color;\n        this.parent.addCommands({\n          cmd: function cmd() {\n            _this46.color = color;\n            _assertClassBrand(_InkEditor_brand, _this46, _redraw).call(_this46);\n          },\n          undo: function undo() {\n            _this46.color = savedColor;\n            _assertClassBrand(_InkEditor_brand, _this46, _redraw).call(_this46);\n          },\n          mustExec: true,\n          type: _util.AnnotationEditorParamsType.INK_COLOR,\n          overwriteIfSameType: true,\n          keepUndo: true\n        });\n      }\n      function _updateOpacity(opacity) {\n        var _this47 = this;\n        opacity /= 100;\n        var savedOpacity = this.opacity;\n        this.parent.addCommands({\n          cmd: function cmd() {\n            _this47.opacity = opacity;\n            _assertClassBrand(_InkEditor_brand, _this47, _redraw).call(_this47);\n          },\n          undo: function undo() {\n            _this47.opacity = savedOpacity;\n            _assertClassBrand(_InkEditor_brand, _this47, _redraw).call(_this47);\n          },\n          mustExec: true,\n          type: _util.AnnotationEditorParamsType.INK_OPACITY,\n          overwriteIfSameType: true,\n          keepUndo: true\n        });\n      }\n      function _getInitialBBox() {\n        var _this$parent$viewport10 = this.parent.viewport,\n          width = _this$parent$viewport10.width,\n          height = _this$parent$viewport10.height,\n          rotation = _this$parent$viewport10.rotation;\n        switch (rotation) {\n          case 90:\n            return [0, width, width, height];\n          case 180:\n            return [width, height, width, height];\n          case 270:\n            return [height, 0, width, height];\n          default:\n            return [0, 0, width, height];\n        }\n      }\n      function _setStroke() {\n        this.ctx.lineWidth = this.thickness * this.parent.scaleFactor / this.scaleFactor;\n        this.ctx.lineCap = \"round\";\n        this.ctx.lineJoin = \"round\";\n        this.ctx.miterLimit = 10;\n        this.ctx.strokeStyle = \"\".concat(this.color).concat((0, _tools.opacityToHex)(this.opacity));\n      }\n      function _startDrawing(x, y) {\n        var _this48 = this;\n        this.isEditing = true;\n        if (!_classPrivateFieldGet(_isCanvasInitialized, this)) {\n          var _this$opacity2;\n          _classPrivateFieldSet(_isCanvasInitialized, this, true);\n          _assertClassBrand(_InkEditor_brand, this, _setCanvasDims).call(this);\n          this.thickness || (this.thickness = _InkEditor._defaultThickness);\n          this.color || (this.color = _InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor);\n          (_this$opacity2 = this.opacity) !== null && _this$opacity2 !== void 0 ? _this$opacity2 : this.opacity = _InkEditor._defaultOpacity;\n        }\n        this.currentPath.push([x, y]);\n        _classPrivateFieldSet(_lastPoint, this, null);\n        _assertClassBrand(_InkEditor_brand, this, _setStroke).call(this);\n        this.ctx.beginPath();\n        this.ctx.moveTo(x, y);\n        _classPrivateFieldSet(_requestFrameCallback, this, function () {\n          if (!_classPrivateFieldGet(_requestFrameCallback, _this48)) {\n            return;\n          }\n          if (_classPrivateFieldGet(_lastPoint, _this48)) {\n            var _this48$ctx;\n            if (_this48.isEmpty()) {\n              _this48.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              _this48.ctx.clearRect(0, 0, _this48.canvas.width, _this48.canvas.height);\n            } else {\n              _assertClassBrand(_InkEditor_brand, _this48, _redraw).call(_this48);\n            }\n            (_this48$ctx = _this48.ctx).lineTo.apply(_this48$ctx, _toConsumableArray(_classPrivateFieldGet(_lastPoint, _this48)));\n            _classPrivateFieldSet(_lastPoint, _this48, null);\n            _this48.ctx.stroke();\n          }\n          window.requestAnimationFrame(_classPrivateFieldGet(_requestFrameCallback, _this48));\n        });\n        window.requestAnimationFrame(_classPrivateFieldGet(_requestFrameCallback, this));\n      }\n      function _draw(x, y) {\n        var _this$currentPath$at = this.currentPath.at(-1),\n          _this$currentPath$at2 = _slicedToArray(_this$currentPath$at, 2),\n          lastX = _this$currentPath$at2[0],\n          lastY = _this$currentPath$at2[1];\n        if (x === lastX && y === lastY) {\n          return;\n        }\n        this.currentPath.push([x, y]);\n        _classPrivateFieldSet(_lastPoint, this, [x, y]);\n      }\n      function _stopDrawing(x, y) {\n        var _this49 = this;\n        this.ctx.closePath();\n        _classPrivateFieldSet(_requestFrameCallback, this, null);\n        x = Math.min(Math.max(x, 0), this.canvas.width);\n        y = Math.min(Math.max(y, 0), this.canvas.height);\n        var _this$currentPath$at3 = this.currentPath.at(-1),\n          _this$currentPath$at4 = _slicedToArray(_this$currentPath$at3, 2),\n          lastX = _this$currentPath$at4[0],\n          lastY = _this$currentPath$at4[1];\n        if (x !== lastX || y !== lastY) {\n          this.currentPath.push([x, y]);\n        }\n        var bezier;\n        if (this.currentPath.length !== 1) {\n          bezier = (0, _pdfjsFitCurve.fitCurve)(this.currentPath, 30, null);\n        } else {\n          var xy = [x, y];\n          bezier = [[xy, xy.slice(), xy.slice(), xy]];\n        }\n        var path2D = _buildPath2D.call(_InkEditor, bezier);\n        this.currentPath.length = 0;\n        var cmd = function cmd() {\n          _this49.paths.push(bezier);\n          _this49.bezierPath2D.push(path2D);\n          _this49.rebuild();\n        };\n        var undo = function undo() {\n          _this49.paths.pop();\n          _this49.bezierPath2D.pop();\n          if (_this49.paths.length === 0) {\n            _this49.remove();\n          } else {\n            if (!_this49.canvas) {\n              _assertClassBrand(_InkEditor_brand, _this49, _createCanvas2).call(_this49);\n              _assertClassBrand(_InkEditor_brand, _this49, _createObserver).call(_this49);\n            }\n            _assertClassBrand(_InkEditor_brand, _this49, _fitToContent).call(_this49);\n          }\n        };\n        this.parent.addCommands({\n          cmd: cmd,\n          undo: undo,\n          mustExec: true\n        });\n      }\n      function _redraw() {\n        if (this.isEmpty()) {\n          _assertClassBrand(_InkEditor_brand, this, _updateTransform).call(this);\n          return;\n        }\n        _assertClassBrand(_InkEditor_brand, this, _setStroke).call(this);\n        var canvas = this.canvas,\n          ctx = this.ctx;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        _assertClassBrand(_InkEditor_brand, this, _updateTransform).call(this);\n        var _iterator83 = _createForOfIteratorHelper(this.bezierPath2D),\n          _step83;\n        try {\n          for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {\n            var path = _step83.value;\n            ctx.stroke(path);\n          }\n        } catch (err) {\n          _iterator83.e(err);\n        } finally {\n          _iterator83.f();\n        }\n      }\n      function _endDrawing(event) {\n        _assertClassBrand(_InkEditor_brand, this, _stopDrawing).call(this, event.offsetX, event.offsetY);\n        this.canvas.removeEventListener(\"pointerleave\", _classPrivateFieldGet(_boundCanvasPointerleave, this));\n        this.canvas.removeEventListener(\"pointermove\", _classPrivateFieldGet(_boundCanvasPointermove, this));\n        this.parent.addToAnnotationStorage(this);\n      }\n      function _createCanvas2() {\n        var _this50 = this;\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = this.canvas.height = 0;\n        this.canvas.className = \"inkEditorCanvas\";\n        _InkEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then(function (msg) {\n          var _this50$canvas;\n          return (_this50$canvas = _this50.canvas) === null || _this50$canvas === void 0 ? void 0 : _this50$canvas.setAttribute(\"aria-label\", msg);\n        });\n        this.div.append(this.canvas);\n        this.ctx = this.canvas.getContext(\"2d\");\n      }\n      function _createObserver() {\n        var _this51 = this;\n        _classPrivateFieldSet(_observer, this, new ResizeObserver(function (entries) {\n          var rect = entries[0].contentRect;\n          if (rect.width && rect.height) {\n            _this51.setDimensions(rect.width, rect.height);\n          }\n        }));\n        _classPrivateFieldGet(_observer, this).observe(this.div);\n      }\n      function _setCanvasDims() {\n        if (!_classPrivateFieldGet(_isCanvasInitialized, this)) {\n          return;\n        }\n        var _this$parent$viewport11 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n          parentWidth = _this$parent$viewport11[0],\n          parentHeight = _this$parent$viewport11[1];\n        this.canvas.width = Math.ceil(this.width * parentWidth);\n        this.canvas.height = Math.ceil(this.height * parentHeight);\n        _assertClassBrand(_InkEditor_brand, this, _updateTransform).call(this);\n      }\n      function _setScaleFactor(width, height) {\n        var padding = _assertClassBrand(_InkEditor_brand, this, _getPadding).call(this);\n        var scaleFactorW = (width - padding) / _classPrivateFieldGet(_baseWidth, this);\n        var scaleFactorH = (height - padding) / _classPrivateFieldGet(_baseHeight, this);\n        this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n      }\n      function _updateTransform() {\n        var padding = _assertClassBrand(_InkEditor_brand, this, _getPadding).call(this) / 2;\n        this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n      }\n      function _buildPath2D(bezier) {\n        var path2D = new Path2D();\n        for (var i = 0, ii = bezier.length; i < ii; i++) {\n          var _bezier$i = _slicedToArray(bezier[i], 4),\n            first = _bezier$i[0],\n            control1 = _bezier$i[1],\n            control2 = _bezier$i[2],\n            second = _bezier$i[3];\n          if (i === 0) {\n            path2D.moveTo.apply(path2D, _toConsumableArray(first));\n          }\n          path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n        }\n        return path2D;\n      }\n      function _serializePaths(s, tx, ty, h) {\n        var NUMBER_OF_POINTS_ON_BEZIER_CURVE = 4;\n        var paths = [];\n        var padding = this.thickness / 2;\n        var buffer, points;\n        var _iterator84 = _createForOfIteratorHelper(this.paths),\n          _step84;\n        try {\n          for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {\n            var bezier = _step84.value;\n            buffer = [];\n            points = [];\n            for (var i = 0, ii = bezier.length; i < ii; i++) {\n              var _bezier$i2 = _slicedToArray(bezier[i], 4),\n                first = _bezier$i2[0],\n                control1 = _bezier$i2[1],\n                control2 = _bezier$i2[2],\n                second = _bezier$i2[3];\n              var p10 = s * (first[0] + tx) + padding;\n              var p11 = h - s * (first[1] + ty) - padding;\n              var p20 = s * (control1[0] + tx) + padding;\n              var p21 = h - s * (control1[1] + ty) - padding;\n              var p30 = s * (control2[0] + tx) + padding;\n              var p31 = h - s * (control2[1] + ty) - padding;\n              var p40 = s * (second[0] + tx) + padding;\n              var p41 = h - s * (second[1] + ty) - padding;\n              if (i === 0) {\n                buffer.push(p10, p11);\n                points.push(p10, p11);\n              }\n              buffer.push(p20, p21, p30, p31, p40, p41);\n              _assertClassBrand(_InkEditor_brand, this, _extractPointsOnBezier).call(this, p10, p11, p20, p21, p30, p31, p40, p41, NUMBER_OF_POINTS_ON_BEZIER_CURVE, points);\n            }\n            paths.push({\n              bezier: buffer,\n              points: points\n            });\n          }\n        } catch (err) {\n          _iterator84.e(err);\n        } finally {\n          _iterator84.f();\n        }\n        return paths;\n      }\n      function _extractPointsOnBezier(p10, p11, p20, p21, p30, p31, p40, p41, n, points) {\n        if (_assertClassBrand(_InkEditor_brand, this, _isAlmostFlat).call(this, p10, p11, p20, p21, p30, p31, p40, p41)) {\n          points.push(p40, p41);\n          return;\n        }\n        for (var i = 1; i < n - 1; i++) {\n          var t = i / n;\n          var mt = 1 - t;\n          var q10 = t * p10 + mt * p20;\n          var q11 = t * p11 + mt * p21;\n          var q20 = t * p20 + mt * p30;\n          var q21 = t * p21 + mt * p31;\n          var q30 = t * p30 + mt * p40;\n          var q31 = t * p31 + mt * p41;\n          q10 = t * q10 + mt * q20;\n          q11 = t * q11 + mt * q21;\n          q20 = t * q20 + mt * q30;\n          q21 = t * q21 + mt * q31;\n          q10 = t * q10 + mt * q20;\n          q11 = t * q11 + mt * q21;\n          points.push(q10, q11);\n        }\n        points.push(p40, p41);\n      }\n      function _isAlmostFlat(p10, p11, p20, p21, p30, p31, p40, p41) {\n        var tol = 10;\n        var ax = Math.pow(3 * p20 - 2 * p10 - p40, 2);\n        var ay = Math.pow(3 * p21 - 2 * p11 - p41, 2);\n        var bx = Math.pow(3 * p30 - p10 - 2 * p40, 2);\n        var by = Math.pow(3 * p31 - p11 - 2 * p41, 2);\n        return Math.max(ax, bx) + Math.max(ay, by) <= tol;\n      }\n      function _getBbox() {\n        var xMin = Infinity;\n        var xMax = -Infinity;\n        var yMin = Infinity;\n        var yMax = -Infinity;\n        var _iterator85 = _createForOfIteratorHelper(this.paths),\n          _step85;\n        try {\n          for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {\n            var path = _step85.value;\n            var _iterator86 = _createForOfIteratorHelper(path),\n              _step86;\n            try {\n              for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {\n                var _util$Util4;\n                var _step86$value = _slicedToArray(_step86.value, 4),\n                  first = _step86$value[0],\n                  control1 = _step86$value[1],\n                  control2 = _step86$value[2],\n                  second = _step86$value[3];\n                var bbox = (_util$Util4 = _util.Util).bezierBoundingBox.apply(_util$Util4, _toConsumableArray(first).concat(_toConsumableArray(control1), _toConsumableArray(control2), _toConsumableArray(second)));\n                xMin = Math.min(xMin, bbox[0]);\n                yMin = Math.min(yMin, bbox[1]);\n                xMax = Math.max(xMax, bbox[2]);\n                yMax = Math.max(yMax, bbox[3]);\n              }\n            } catch (err) {\n              _iterator86.e(err);\n            } finally {\n              _iterator86.f();\n            }\n          }\n        } catch (err) {\n          _iterator85.e(err);\n        } finally {\n          _iterator85.f();\n        }\n        return [xMin, yMin, xMax, yMax];\n      }\n      function _getPadding() {\n        return _classPrivateFieldGet(_disableEditing, this) ? Math.ceil(this.thickness * this.parent.scaleFactor) : 0;\n      }\n      function _fitToContent() {\n        var firstTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (this.isEmpty()) {\n          return;\n        }\n        if (!_classPrivateFieldGet(_disableEditing, this)) {\n          _assertClassBrand(_InkEditor_brand, this, _redraw).call(this);\n          return;\n        }\n        var bbox = _assertClassBrand(_InkEditor_brand, this, _getBbox).call(this);\n        var padding = _assertClassBrand(_InkEditor_brand, this, _getPadding).call(this);\n        _classPrivateFieldSet(_baseWidth, this, Math.max(RESIZER_SIZE, bbox[2] - bbox[0]));\n        _classPrivateFieldSet(_baseHeight, this, Math.max(RESIZER_SIZE, bbox[3] - bbox[1]));\n        var width = Math.ceil(padding + _classPrivateFieldGet(_baseWidth, this) * this.scaleFactor);\n        var height = Math.ceil(padding + _classPrivateFieldGet(_baseHeight, this) * this.scaleFactor);\n        var _this$parent$viewport12 = _slicedToArray(this.parent.viewportBaseDimensions, 2),\n          parentWidth = _this$parent$viewport12[0],\n          parentHeight = _this$parent$viewport12[1];\n        this.width = width / parentWidth;\n        this.height = height / parentHeight;\n        _classPrivateFieldSet(_aspectRatio, this, width / height);\n        _assertClassBrand(_InkEditor_brand, this, _setMinDims).call(this);\n        var prevTranslationX = this.translationX;\n        var prevTranslationY = this.translationY;\n        this.translationX = -bbox[0];\n        this.translationY = -bbox[1];\n        _assertClassBrand(_InkEditor_brand, this, _setCanvasDims).call(this);\n        _assertClassBrand(_InkEditor_brand, this, _redraw).call(this);\n        _classPrivateFieldSet(_realWidth, this, width);\n        _classPrivateFieldSet(_realHeight, this, height);\n        this.setDims(width, height);\n        var unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n        this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n      }\n      function _setMinDims() {\n        var style = this.div.style;\n        if (_classPrivateFieldGet(_aspectRatio, this) >= 1) {\n          style.minHeight = \"\".concat(RESIZER_SIZE, \"px\");\n          style.minWidth = \"\".concat(Math.round(_classPrivateFieldGet(_aspectRatio, this) * RESIZER_SIZE), \"px\");\n        } else {\n          style.minWidth = \"\".concat(RESIZER_SIZE, \"px\");\n          style.minHeight = \"\".concat(Math.round(RESIZER_SIZE / _classPrivateFieldGet(_aspectRatio, this)), \"px\");\n        }\n      }\n      _defineProperty(InkEditor, \"_defaultColor\", null);\n      _defineProperty(InkEditor, \"_defaultOpacity\", 1);\n      _defineProperty(InkEditor, \"_defaultThickness\", 1);\n      _defineProperty(InkEditor, \"_l10nPromise\", void 0);\n      _defineProperty(InkEditor, \"_type\", \"ink\");\n      exports.InkEditor = InkEditor;\n\n      /***/\n    }), ( /* 25 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.fitCurve = void 0;\n      var fitCurve = __w_pdfjs_require__(26);\n      exports.fitCurve = fitCurve;\n\n      /***/\n    }), ( /* 26 */\n    /***/function (module) {\n      function fitCurve(points, maxError, progressCallback) {\n        if (!Array.isArray(points)) {\n          throw new TypeError(\"First argument should be an array\");\n        }\n        points.forEach(function (point) {\n          if (!Array.isArray(point) || point.some(function (item) {\n            return typeof item !== 'number';\n          }) || point.length !== points[0].length) {\n            throw Error(\"Each point should be an array of numbers. Each point should have the same amount of numbers.\");\n          }\n        });\n        points = points.filter(function (point, i) {\n          return i === 0 || !point.every(function (val, j) {\n            return val === points[i - 1][j];\n          });\n        });\n        if (points.length < 2) {\n          return [];\n        }\n        var len = points.length;\n        var leftTangent = createTangent(points[1], points[0]);\n        var rightTangent = createTangent(points[len - 2], points[len - 1]);\n        return fitCubic(points, leftTangent, rightTangent, maxError, progressCallback);\n      }\n      function fitCubic(points, leftTangent, rightTangent, error, progressCallback) {\n        var MaxIterations = 20;\n        var bezCurve, u, uPrime, maxError, prevErr, splitPoint, prevSplit, centerVector, toCenterTangent, fromCenterTangent, beziers, dist, i;\n        if (points.length === 2) {\n          dist = maths.vectorLen(maths.subtract(points[0], points[1])) / 3.0;\n          bezCurve = [points[0], maths.addArrays(points[0], maths.mulItems(leftTangent, dist)), maths.addArrays(points[1], maths.mulItems(rightTangent, dist)), points[1]];\n          return [bezCurve];\n        }\n        u = chordLengthParameterize(points);\n        var _generateAndReport = generateAndReport(points, u, u, leftTangent, rightTangent, progressCallback);\n        var _generateAndReport2 = _slicedToArray(_generateAndReport, 3);\n        bezCurve = _generateAndReport2[0];\n        maxError = _generateAndReport2[1];\n        splitPoint = _generateAndReport2[2];\n        if (maxError === 0 || maxError < error) {\n          return [bezCurve];\n        }\n        if (maxError < error * error) {\n          uPrime = u;\n          prevErr = maxError;\n          prevSplit = splitPoint;\n          for (i = 0; i < MaxIterations; i++) {\n            uPrime = reparameterize(bezCurve, points, uPrime);\n            var _generateAndReport3 = generateAndReport(points, u, uPrime, leftTangent, rightTangent, progressCallback);\n            var _generateAndReport4 = _slicedToArray(_generateAndReport3, 3);\n            bezCurve = _generateAndReport4[0];\n            maxError = _generateAndReport4[1];\n            splitPoint = _generateAndReport4[2];\n            if (maxError < error) {\n              return [bezCurve];\n            } else if (splitPoint === prevSplit) {\n              var errChange = maxError / prevErr;\n              if (errChange > .9999 && errChange < 1.0001) {\n                break;\n              }\n            }\n            prevErr = maxError;\n            prevSplit = splitPoint;\n          }\n        }\n        beziers = [];\n        centerVector = maths.subtract(points[splitPoint - 1], points[splitPoint + 1]);\n        if (centerVector.every(function (val) {\n          return val === 0;\n        })) {\n          centerVector = maths.subtract(points[splitPoint - 1], points[splitPoint]);\n          var _ref52 = [-centerVector[1], centerVector[0]];\n          centerVector[0] = _ref52[0];\n          centerVector[1] = _ref52[1];\n        }\n        toCenterTangent = maths.normalize(centerVector);\n        fromCenterTangent = maths.mulItems(toCenterTangent, -1);\n        beziers = beziers.concat(fitCubic(points.slice(0, splitPoint + 1), leftTangent, toCenterTangent, error, progressCallback));\n        beziers = beziers.concat(fitCubic(points.slice(splitPoint), fromCenterTangent, rightTangent, error, progressCallback));\n        return beziers;\n      }\n      ;\n      function generateAndReport(points, paramsOrig, paramsPrime, leftTangent, rightTangent, progressCallback) {\n        var bezCurve, maxError, splitPoint;\n        bezCurve = generateBezier(points, paramsPrime, leftTangent, rightTangent, progressCallback);\n        var _computeMaxError = computeMaxError(points, bezCurve, paramsOrig);\n        var _computeMaxError2 = _slicedToArray(_computeMaxError, 2);\n        maxError = _computeMaxError2[0];\n        splitPoint = _computeMaxError2[1];\n        if (progressCallback) {\n          progressCallback({\n            bez: bezCurve,\n            points: points,\n            params: paramsOrig,\n            maxErr: maxError,\n            maxPoint: splitPoint\n          });\n        }\n        return [bezCurve, maxError, splitPoint];\n      }\n      function generateBezier(points, parameters, leftTangent, rightTangent) {\n        var bezCurve,\n          A,\n          a,\n          C,\n          X,\n          det_C0_C1,\n          det_C0_X,\n          det_X_C1,\n          alpha_l,\n          alpha_r,\n          epsilon,\n          segLength,\n          i,\n          len,\n          tmp,\n          u,\n          ux,\n          firstPoint = points[0],\n          lastPoint = points[points.length - 1];\n        bezCurve = [firstPoint, null, null, lastPoint];\n        A = maths.zeros_Xx2x2(parameters.length);\n        for (i = 0, len = parameters.length; i < len; i++) {\n          u = parameters[i];\n          ux = 1 - u;\n          a = A[i];\n          a[0] = maths.mulItems(leftTangent, 3 * u * (ux * ux));\n          a[1] = maths.mulItems(rightTangent, 3 * ux * (u * u));\n        }\n        C = [[0, 0], [0, 0]];\n        X = [0, 0];\n        for (i = 0, len = points.length; i < len; i++) {\n          u = parameters[i];\n          a = A[i];\n          C[0][0] += maths.dot(a[0], a[0]);\n          C[0][1] += maths.dot(a[0], a[1]);\n          C[1][0] += maths.dot(a[0], a[1]);\n          C[1][1] += maths.dot(a[1], a[1]);\n          tmp = maths.subtract(points[i], bezier.q([firstPoint, firstPoint, lastPoint, lastPoint], u));\n          X[0] += maths.dot(a[0], tmp);\n          X[1] += maths.dot(a[1], tmp);\n        }\n        det_C0_C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1];\n        det_C0_X = C[0][0] * X[1] - C[1][0] * X[0];\n        det_X_C1 = X[0] * C[1][1] - X[1] * C[0][1];\n        alpha_l = det_C0_C1 === 0 ? 0 : det_X_C1 / det_C0_C1;\n        alpha_r = det_C0_C1 === 0 ? 0 : det_C0_X / det_C0_C1;\n        segLength = maths.vectorLen(maths.subtract(firstPoint, lastPoint));\n        epsilon = 1.0e-6 * segLength;\n        if (alpha_l < epsilon || alpha_r < epsilon) {\n          bezCurve[1] = maths.addArrays(firstPoint, maths.mulItems(leftTangent, segLength / 3.0));\n          bezCurve[2] = maths.addArrays(lastPoint, maths.mulItems(rightTangent, segLength / 3.0));\n        } else {\n          bezCurve[1] = maths.addArrays(firstPoint, maths.mulItems(leftTangent, alpha_l));\n          bezCurve[2] = maths.addArrays(lastPoint, maths.mulItems(rightTangent, alpha_r));\n        }\n        return bezCurve;\n      }\n      ;\n      function reparameterize(bezier, points, parameters) {\n        return parameters.map(function (p, i) {\n          return newtonRaphsonRootFind(bezier, points[i], p);\n        });\n      }\n      ;\n      function newtonRaphsonRootFind(bez, point, u) {\n        var d = maths.subtract(bezier.q(bez, u), point),\n          qprime = bezier.qprime(bez, u),\n          numerator = maths.mulMatrix(d, qprime),\n          denominator = maths.sum(maths.squareItems(qprime)) + 2 * maths.mulMatrix(d, bezier.qprimeprime(bez, u));\n        if (denominator === 0) {\n          return u;\n        } else {\n          return u - numerator / denominator;\n        }\n      }\n      ;\n      function chordLengthParameterize(points) {\n        var u = [],\n          currU,\n          prevU,\n          prevP;\n        points.forEach(function (p, i) {\n          currU = i ? prevU + maths.vectorLen(maths.subtract(p, prevP)) : 0;\n          u.push(currU);\n          prevU = currU;\n          prevP = p;\n        });\n        u = u.map(function (x) {\n          return x / prevU;\n        });\n        return u;\n      }\n      ;\n      function computeMaxError(points, bez, parameters) {\n        var dist, maxDist, splitPoint, v, i, count, point, t;\n        maxDist = 0;\n        splitPoint = Math.floor(points.length / 2);\n        var t_distMap = mapTtoRelativeDistances(bez, 10);\n        for (i = 0, count = points.length; i < count; i++) {\n          point = points[i];\n          t = find_t(bez, parameters[i], t_distMap, 10);\n          v = maths.subtract(bezier.q(bez, t), point);\n          dist = v[0] * v[0] + v[1] * v[1];\n          if (dist > maxDist) {\n            maxDist = dist;\n            splitPoint = i;\n          }\n        }\n        return [maxDist, splitPoint];\n      }\n      ;\n      var mapTtoRelativeDistances = function mapTtoRelativeDistances(bez, B_parts) {\n        var B_t_curr;\n        var B_t_dist = [0];\n        var B_t_prev = bez[0];\n        var sumLen = 0;\n        for (var i = 1; i <= B_parts; i++) {\n          B_t_curr = bezier.q(bez, i / B_parts);\n          sumLen += maths.vectorLen(maths.subtract(B_t_curr, B_t_prev));\n          B_t_dist.push(sumLen);\n          B_t_prev = B_t_curr;\n        }\n        B_t_dist = B_t_dist.map(function (x) {\n          return x / sumLen;\n        });\n        return B_t_dist;\n      };\n      function find_t(bez, param, t_distMap, B_parts) {\n        if (param < 0) {\n          return 0;\n        }\n        if (param > 1) {\n          return 1;\n        }\n        var lenMax, lenMin, tMax, tMin, t;\n        for (var i = 1; i <= B_parts; i++) {\n          if (param <= t_distMap[i]) {\n            tMin = (i - 1) / B_parts;\n            tMax = i / B_parts;\n            lenMin = t_distMap[i - 1];\n            lenMax = t_distMap[i];\n            t = (param - lenMin) / (lenMax - lenMin) * (tMax - tMin) + tMin;\n            break;\n          }\n        }\n        return t;\n      }\n      function createTangent(pointA, pointB) {\n        return maths.normalize(maths.subtract(pointA, pointB));\n      }\n      var maths = /*#__PURE__*/function () {\n        function maths() {\n          _classCallCheck(this, maths);\n        }\n        _createClass(maths, null, [{\n          key: \"zeros_Xx2x2\",\n          value: function zeros_Xx2x2(x) {\n            var zs = [];\n            while (x--) {\n              zs.push([0, 0]);\n            }\n            return zs;\n          }\n        }, {\n          key: \"mulItems\",\n          value: function mulItems(items, multiplier) {\n            return items.map(function (x) {\n              return x * multiplier;\n            });\n          }\n        }, {\n          key: \"mulMatrix\",\n          value: function mulMatrix(m1, m2) {\n            return m1.reduce(function (sum, x1, i) {\n              return sum + x1 * m2[i];\n            }, 0);\n          }\n        }, {\n          key: \"subtract\",\n          value: function subtract(arr1, arr2) {\n            return arr1.map(function (x1, i) {\n              return x1 - arr2[i];\n            });\n          }\n        }, {\n          key: \"addArrays\",\n          value: function addArrays(arr1, arr2) {\n            return arr1.map(function (x1, i) {\n              return x1 + arr2[i];\n            });\n          }\n        }, {\n          key: \"addItems\",\n          value: function addItems(items, addition) {\n            return items.map(function (x) {\n              return x + addition;\n            });\n          }\n        }, {\n          key: \"sum\",\n          value: function sum(items) {\n            return items.reduce(function (sum, x) {\n              return sum + x;\n            });\n          }\n        }, {\n          key: \"dot\",\n          value: function dot(m1, m2) {\n            return maths.mulMatrix(m1, m2);\n          }\n        }, {\n          key: \"vectorLen\",\n          value: function vectorLen(v) {\n            return Math.hypot.apply(Math, _toConsumableArray(v));\n          }\n        }, {\n          key: \"divItems\",\n          value: function divItems(items, divisor) {\n            return items.map(function (x) {\n              return x / divisor;\n            });\n          }\n        }, {\n          key: \"squareItems\",\n          value: function squareItems(items) {\n            return items.map(function (x) {\n              return x * x;\n            });\n          }\n        }, {\n          key: \"normalize\",\n          value: function normalize(v) {\n            return this.divItems(v, this.vectorLen(v));\n          }\n        }]);\n        return maths;\n      }();\n      var bezier = /*#__PURE__*/function () {\n        function bezier() {\n          _classCallCheck(this, bezier);\n        }\n        _createClass(bezier, null, [{\n          key: \"q\",\n          value: function q(ctrlPoly, t) {\n            var tx = 1.0 - t;\n            var pA = maths.mulItems(ctrlPoly[0], tx * tx * tx),\n              pB = maths.mulItems(ctrlPoly[1], 3 * tx * tx * t),\n              pC = maths.mulItems(ctrlPoly[2], 3 * tx * t * t),\n              pD = maths.mulItems(ctrlPoly[3], t * t * t);\n            return maths.addArrays(maths.addArrays(pA, pB), maths.addArrays(pC, pD));\n          }\n        }, {\n          key: \"qprime\",\n          value: function qprime(ctrlPoly, t) {\n            var tx = 1.0 - t;\n            var pA = maths.mulItems(maths.subtract(ctrlPoly[1], ctrlPoly[0]), 3 * tx * tx),\n              pB = maths.mulItems(maths.subtract(ctrlPoly[2], ctrlPoly[1]), 6 * tx * t),\n              pC = maths.mulItems(maths.subtract(ctrlPoly[3], ctrlPoly[2]), 3 * t * t);\n            return maths.addArrays(maths.addArrays(pA, pB), pC);\n          }\n        }, {\n          key: \"qprimeprime\",\n          value: function qprimeprime(ctrlPoly, t) {\n            return maths.addArrays(maths.mulItems(maths.addArrays(maths.subtract(ctrlPoly[2], maths.mulItems(ctrlPoly[1], 2)), ctrlPoly[0]), 6 * (1.0 - t)), maths.mulItems(maths.addArrays(maths.subtract(ctrlPoly[3], maths.mulItems(ctrlPoly[2], 2)), ctrlPoly[1]), 6 * t));\n          }\n        }]);\n        return bezier;\n      }();\n      module.exports = fitCurve;\n      module.exports.fitCubic = fitCubic;\n      module.exports.createTangent = createTangent;\n\n      /***/\n    }), ( /* 27 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(8);\n      var _annotation_storage = __w_pdfjs_require__(5);\n      var _scripting_utils = __w_pdfjs_require__(28);\n      var _xfa_layer = __w_pdfjs_require__(29);\n      var DEFAULT_TAB_INDEX = 1000;\n      var DEFAULT_FONT_SIZE = 9;\n      var GetElementsByNameSet = new WeakSet();\n      function getRectDims(rect) {\n        return {\n          width: rect[2] - rect[0],\n          height: rect[3] - rect[1]\n        };\n      }\n      var AnnotationElementFactory = /*#__PURE__*/function () {\n        function AnnotationElementFactory() {\n          _classCallCheck(this, AnnotationElementFactory);\n        }\n        _createClass(AnnotationElementFactory, null, [{\n          key: \"create\",\n          value: function create(parameters) {\n            var subtype = parameters.data.annotationType;\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n              case _util.AnnotationType.WIDGET:\n                var fieldType = parameters.data.fieldType;\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n                    return new PushButtonWidgetAnnotationElement(parameters);\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                }\n                return new WidgetAnnotationElement(parameters);\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n        }]);\n        return AnnotationElementFactory;\n      }();\n      var AnnotationElement = /*#__PURE__*/function () {\n        function AnnotationElement(parameters) {\n          var _ref53 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            _ref53$isRenderable = _ref53.isRenderable,\n            isRenderable = _ref53$isRenderable === void 0 ? false : _ref53$isRenderable,\n            _ref53$ignoreBorder = _ref53.ignoreBorder,\n            ignoreBorder = _ref53$ignoreBorder === void 0 ? false : _ref53$ignoreBorder,\n            _ref53$createQuadrila = _ref53.createQuadrilaterals,\n            createQuadrilaterals = _ref53$createQuadrila === void 0 ? false : _ref53$createQuadrila;\n          _classCallCheck(this, AnnotationElement);\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderForms = parameters.renderForms;\n          this.svgFactory = parameters.svgFactory;\n          this.annotationStorage = parameters.annotationStorage;\n          this.enableScripting = parameters.enableScripting;\n          this.hasJSActions = parameters.hasJSActions;\n          this._fieldObjects = parameters.fieldObjects;\n          this._mouseState = parameters.mouseState;\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n          if (createQuadrilaterals) {\n            this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n          }\n        }\n        _createClass(AnnotationElement, [{\n          key: \"_createContainer\",\n          value: function _createContainer() {\n            var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var data = this.data,\n              page = this.page,\n              viewport = this.viewport;\n            var container = document.createElement(\"section\");\n            var _getRectDims = getRectDims(data.rect),\n              width = _getRectDims.width,\n              height = _getRectDims.height;\n            var _viewport$viewBox = _slicedToArray(viewport.viewBox, 4),\n              pageLLx = _viewport$viewBox[0],\n              pageLLy = _viewport$viewBox[1],\n              pageURx = _viewport$viewBox[2],\n              pageURy = _viewport$viewBox[3];\n            var pageWidth = pageURx - pageLLx;\n            var pageHeight = pageURy - pageLLy;\n            container.setAttribute(\"data-annotation-id\", data.id);\n            var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = \"\".concat(data.borderStyle.width, \"px\");\n              var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              var verticalRadius = data.borderStyle.verticalCornerRadius;\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                var radius = \"calc(\".concat(horizontalRadius, \"px * var(--scale-factor)) / calc(\").concat(verticalRadius, \"px * var(--scale-factor))\");\n                container.style.borderRadius = radius;\n              } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                var _radius = \"calc(\".concat(width, \"px * var(--scale-factor)) / calc(\").concat(height, \"px * var(--scale-factor))\");\n                container.style.borderRadius = _radius;\n              }\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n                default:\n                  break;\n              }\n              var borderColor = data.borderColor || null;\n              if (borderColor) {\n                container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n            container.style.left = \"\".concat(100 * (rect[0] - pageLLx) / pageWidth, \"%\");\n            container.style.top = \"\".concat(100 * (rect[1] - pageLLy) / pageHeight, \"%\");\n            var rotation = data.rotation;\n            if (data.hasOwnCanvas || rotation === 0) {\n              container.style.width = \"\".concat(100 * width / pageWidth, \"%\");\n              container.style.height = \"\".concat(100 * height / pageHeight, \"%\");\n            } else {\n              this.setRotation(rotation, container);\n            }\n            return container;\n          }\n        }, {\n          key: \"setRotation\",\n          value: function setRotation(angle) {\n            var container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n            var _this$viewport$viewBo2 = _slicedToArray(this.viewport.viewBox, 4),\n              pageLLx = _this$viewport$viewBo2[0],\n              pageLLy = _this$viewport$viewBo2[1],\n              pageURx = _this$viewport$viewBo2[2],\n              pageURy = _this$viewport$viewBo2[3];\n            var pageWidth = pageURx - pageLLx;\n            var pageHeight = pageURy - pageLLy;\n            var _getRectDims2 = getRectDims(this.data.rect),\n              width = _getRectDims2.width,\n              height = _getRectDims2.height;\n            var elementWidth, elementHeight;\n            if (angle % 180 === 0) {\n              elementWidth = 100 * width / pageWidth;\n              elementHeight = 100 * height / pageHeight;\n            } else {\n              elementWidth = 100 * height / pageWidth;\n              elementHeight = 100 * width / pageHeight;\n            }\n            container.style.width = \"\".concat(elementWidth, \"%\");\n            container.style.height = \"\".concat(elementHeight, \"%\");\n            container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n          }\n        }, {\n          key: \"_commonActions\",\n          get: function get() {\n            var _this52 = this;\n            var setColor = function setColor(jsName, styleName, event) {\n              var color = event.detail[jsName];\n              event.target.style[styleName] = _scripting_utils.ColorConverters[\"\".concat(color[0], \"_HTML\")](color.slice(1));\n            };\n            return (0, _util.shadow)(this, \"_commonActions\", {\n              display: function display(event) {\n                var hidden = event.detail.display % 2 === 1;\n                _this52.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                _this52.annotationStorage.setValue(_this52.data.id, {\n                  hidden: hidden,\n                  print: event.detail.display === 0 || event.detail.display === 3\n                });\n              },\n              print: function print(event) {\n                _this52.annotationStorage.setValue(_this52.data.id, {\n                  print: event.detail.print\n                });\n              },\n              hidden: function hidden(event) {\n                _this52.container.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\n                _this52.annotationStorage.setValue(_this52.data.id, {\n                  hidden: event.detail.hidden\n                });\n              },\n              focus: function focus(event) {\n                setTimeout(function () {\n                  return event.target.focus({\n                    preventScroll: false\n                  });\n                }, 0);\n              },\n              userName: function userName(event) {\n                event.target.title = event.detail.userName;\n              },\n              readonly: function readonly(event) {\n                if (event.detail.readonly) {\n                  event.target.setAttribute(\"readonly\", \"\");\n                } else {\n                  event.target.removeAttribute(\"readonly\");\n                }\n              },\n              required: function required(event) {\n                _this52._setRequired(event.target, event.detail.required);\n              },\n              bgColor: function bgColor(event) {\n                setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: function fillColor(event) {\n                setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: function fgColor(event) {\n                setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: function textColor(event) {\n                setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: function borderColor(event) {\n                setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: function strokeColor(event) {\n                setColor(\"strokeColor\", \"borderColor\", event);\n              },\n              rotation: function rotation(event) {\n                var angle = event.detail.rotation;\n                _this52.setRotation(angle);\n                _this52.annotationStorage.setValue(_this52.data.id, {\n                  rotation: angle\n                });\n              }\n            });\n          }\n        }, {\n          key: \"_dispatchEventFromSandbox\",\n          value: function _dispatchEventFromSandbox(actions, jsEvent) {\n            var commonActions = this._commonActions;\n            for (var _i5 = 0, _Object$keys = Object.keys(jsEvent.detail); _i5 < _Object$keys.length; _i5++) {\n              var name = _Object$keys[_i5];\n              var action = actions[name] || commonActions[name];\n              if (action) {\n                action(jsEvent);\n              }\n            }\n          }\n        }, {\n          key: \"_setDefaultPropertiesFromJS\",\n          value: function _setDefaultPropertiesFromJS(element) {\n            if (!this.enableScripting) {\n              return;\n            }\n            var storedData = this.annotationStorage.getRawValue(this.data.id);\n            if (!storedData) {\n              return;\n            }\n            var commonActions = this._commonActions;\n            for (var _i6 = 0, _Object$entries2 = Object.entries(storedData); _i6 < _Object$entries2.length; _i6++) {\n              var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i6], 2),\n                actionName = _Object$entries2$_i[0],\n                detail = _Object$entries2$_i[1];\n              var action = commonActions[actionName];\n              if (action) {\n                var eventProxy = {\n                  detail: _defineProperty({}, actionName, detail),\n                  target: element\n                };\n                action(eventProxy);\n                delete storedData[actionName];\n              }\n            }\n          }\n        }, {\n          key: \"_createQuadrilaterals\",\n          value: function _createQuadrilaterals() {\n            var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this.data.quadPoints) {\n              return null;\n            }\n            var quadrilaterals = [];\n            var savedRect = this.data.rect;\n            var _iterator87 = _createForOfIteratorHelper(this.data.quadPoints),\n              _step87;\n            try {\n              for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {\n                var quadPoint = _step87.value;\n                this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n                quadrilaterals.push(this._createContainer(ignoreBorder));\n              }\n            } catch (err) {\n              _iterator87.e(err);\n            } finally {\n              _iterator87.f();\n            }\n            this.data.rect = savedRect;\n            return quadrilaterals;\n          }\n        }, {\n          key: \"_createPopup\",\n          value: function _createPopup(trigger, data) {\n            var container = this.container;\n            if (this.quadrilaterals) {\n              trigger = trigger || this.quadrilaterals;\n              container = this.quadrilaterals[0];\n            }\n            if (!trigger) {\n              trigger = document.createElement(\"div\");\n              trigger.className = \"popupTriggerArea\";\n              container.append(trigger);\n            }\n            var popupElement = new PopupElement({\n              container: container,\n              trigger: trigger,\n              color: data.color,\n              titleObj: data.titleObj,\n              modificationDate: data.modificationDate,\n              contentsObj: data.contentsObj,\n              richText: data.richText,\n              hideWrapper: true\n            });\n            var popup = popupElement.render();\n            popup.style.left = \"100%\";\n            container.append(popup);\n          }\n        }, {\n          key: \"_renderQuadrilaterals\",\n          value: function _renderQuadrilaterals(className) {\n            var _iterator88 = _createForOfIteratorHelper(this.quadrilaterals),\n              _step88;\n            try {\n              for (_iterator88.s(); !(_step88 = _iterator88.n()).done;) {\n                var quadrilateral = _step88.value;\n                quadrilateral.className = className;\n              }\n            } catch (err) {\n              _iterator88.e(err);\n            } finally {\n              _iterator88.f();\n            }\n            return this.quadrilaterals;\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n        }, {\n          key: \"_getElementsByName\",\n          value: function _getElementsByName(name) {\n            var skipId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var fields = [];\n            if (this._fieldObjects) {\n              var fieldObj = this._fieldObjects[name];\n              if (fieldObj) {\n                var _iterator89 = _createForOfIteratorHelper(fieldObj),\n                  _step89;\n                try {\n                  for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {\n                    var _step89$value = _step89.value,\n                      page = _step89$value.page,\n                      id = _step89$value.id,\n                      exportValues = _step89$value.exportValues;\n                    if (page === -1) {\n                      continue;\n                    }\n                    if (id === skipId) {\n                      continue;\n                    }\n                    var exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                    var domElement = document.querySelector(\"[data-element-id=\\\"\".concat(id, \"\\\"]\"));\n                    if (domElement && !GetElementsByNameSet.has(domElement)) {\n                      (0, _util.warn)(\"_getElementsByName - element not allowed: \".concat(id));\n                      continue;\n                    }\n                    fields.push({\n                      id: id,\n                      exportValue: exportValue,\n                      domElement: domElement\n                    });\n                  }\n                } catch (err) {\n                  _iterator89.e(err);\n                } finally {\n                  _iterator89.f();\n                }\n              }\n              return fields;\n            }\n            var _iterator90 = _createForOfIteratorHelper(document.getElementsByName(name)),\n              _step90;\n            try {\n              for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {\n                var _domElement = _step90.value;\n                var _id5 = _domElement.id,\n                  _exportValue = _domElement.exportValue;\n                if (_id5 === skipId) {\n                  continue;\n                }\n                if (!GetElementsByNameSet.has(_domElement)) {\n                  continue;\n                }\n                fields.push({\n                  id: _id5,\n                  exportValue: _exportValue,\n                  domElement: _domElement\n                });\n              }\n            } catch (err) {\n              _iterator90.e(err);\n            } finally {\n              _iterator90.f();\n            }\n            return fields;\n          }\n        }], [{\n          key: \"platform\",\n          get: function get() {\n            var platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n            return (0, _util.shadow)(this, \"platform\", {\n              isWin: platform.includes(\"Win\"),\n              isMac: platform.includes(\"Mac\")\n            });\n          }\n        }]);\n        return AnnotationElement;\n      }();\n      var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {\n        _inherits(LinkAnnotationElement, _AnnotationElement);\n        function LinkAnnotationElement(parameters) {\n          var _this53;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          _classCallCheck(this, LinkAnnotationElement);\n          _this53 = _callSuper(this, LinkAnnotationElement, [parameters, {\n            isRenderable: true,\n            ignoreBorder: !!(options !== null && options !== void 0 && options.ignoreBorder),\n            createQuadrilaterals: true\n          }]);\n          _this53.isTooltipOnly = parameters.data.isTooltipOnly;\n          return _this53;\n        }\n        _createClass(LinkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var data = this.data,\n              linkService = this.linkService;\n            var link = document.createElement(\"a\");\n            link.setAttribute(\"data-element-id\", data.id);\n            var isBound = false;\n            if (data.url) {\n              linkService.addLinkAttributes(link, data.url, data.newWindow);\n              isBound = true;\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n              isBound = true;\n            } else if (data.dest) {\n              this._bindLink(link, data.dest);\n              isBound = true;\n            } else {\n              if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                this._bindJSAction(link, data);\n                isBound = true;\n              }\n              if (data.resetForm) {\n                this._bindResetFormAction(link, data.resetForm);\n                isBound = true;\n              } else if (this.isTooltipOnly && !isBound) {\n                this._bindLink(link, \"\");\n                isBound = true;\n              }\n            }\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"linkAnnotation\").map(function (quadrilateral, index) {\n                var linkElement = index === 0 ? link : link.cloneNode();\n                quadrilateral.append(linkElement);\n                return quadrilateral;\n              });\n            }\n            this.container.className = \"linkAnnotation\";\n            if (isBound) {\n              this.container.append(link);\n            }\n            return this.container;\n          }\n        }, {\n          key: \"_bindLink\",\n          value: function _bindLink(link, destination) {\n            var _this54 = this;\n            link.href = this.linkService.getDestinationHash(destination);\n            link.onclick = function () {\n              if (destination) {\n                _this54.linkService.goToDestination(destination);\n              }\n              return false;\n            };\n            if (destination || destination === \"\") {\n              link.className = \"internalLink\";\n            }\n          }\n        }, {\n          key: \"_bindNamedAction\",\n          value: function _bindNamedAction(link, action) {\n            var _this55 = this;\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = function () {\n              _this55.linkService.executeNamedAction(action);\n              return false;\n            };\n            link.className = \"internalLink\";\n          }\n        }, {\n          key: \"_bindJSAction\",\n          value: function _bindJSAction(link, data) {\n            var _this56 = this;\n            link.href = this.linkService.getAnchorUrl(\"\");\n            var map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n            var _loop2 = function _loop2() {\n              var name = _Object$keys2[_i7];\n              var jsName = map.get(name);\n              if (!jsName) {\n                return 1; // continue\n              }\n              link[jsName] = function () {\n                var _this56$linkService$e;\n                (_this56$linkService$e = _this56.linkService.eventBus) === null || _this56$linkService$e === void 0 ? void 0 : _this56$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                  source: _this56,\n                  detail: {\n                    id: data.id,\n                    name: name\n                  }\n                });\n                return false;\n              };\n            };\n            for (var _i7 = 0, _Object$keys2 = Object.keys(data.actions); _i7 < _Object$keys2.length; _i7++) {\n              if (_loop2()) continue;\n            }\n            if (!link.onclick) {\n              link.onclick = function () {\n                return false;\n              };\n            }\n            link.className = \"internalLink\";\n          }\n        }, {\n          key: \"_bindResetFormAction\",\n          value: function _bindResetFormAction(link, resetForm) {\n            var _this57 = this;\n            var otherClickAction = link.onclick;\n            if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n            }\n            link.className = \"internalLink\";\n            if (!this._fieldObjects) {\n              (0, _util.warn)(\"_bindResetFormAction - \\\"resetForm\\\" action not supported, \" + \"ensure that the `fieldObjects` parameter is provided.\");\n              if (!otherClickAction) {\n                link.onclick = function () {\n                  return false;\n                };\n              }\n              return;\n            }\n            link.onclick = function () {\n              if (otherClickAction) {\n                otherClickAction();\n              }\n              var resetFormFields = resetForm.fields,\n                resetFormRefs = resetForm.refs,\n                include = resetForm.include;\n              var allFields = [];\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                var fieldIds = new Set(resetFormRefs);\n                var _iterator91 = _createForOfIteratorHelper(resetFormFields),\n                  _step91;\n                try {\n                  for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {\n                    var fieldName = _step91.value;\n                    var _fields = _this57._fieldObjects[fieldName] || [];\n                    var _iterator93 = _createForOfIteratorHelper(_fields),\n                      _step93;\n                    try {\n                      for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {\n                        var id = _step93.value.id;\n                        fieldIds.add(id);\n                      }\n                    } catch (err) {\n                      _iterator93.e(err);\n                    } finally {\n                      _iterator93.f();\n                    }\n                  }\n                } catch (err) {\n                  _iterator91.e(err);\n                } finally {\n                  _iterator91.f();\n                }\n                for (var _i8 = 0, _Object$values = Object.values(_this57._fieldObjects); _i8 < _Object$values.length; _i8++) {\n                  var fields = _Object$values[_i8];\n                  var _iterator92 = _createForOfIteratorHelper(fields),\n                    _step92;\n                  try {\n                    for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {\n                      var field = _step92.value;\n                      if (fieldIds.has(field.id) === include) {\n                        allFields.push(field);\n                      }\n                    }\n                  } catch (err) {\n                    _iterator92.e(err);\n                  } finally {\n                    _iterator92.f();\n                  }\n                }\n              } else {\n                for (var _i9 = 0, _Object$values2 = Object.values(_this57._fieldObjects); _i9 < _Object$values2.length; _i9++) {\n                  var _fields2 = _Object$values2[_i9];\n                  allFields.push.apply(allFields, _toConsumableArray(_fields2));\n                }\n              }\n              var storage = _this57.annotationStorage;\n              var allIds = [];\n              for (var _i10 = 0, _allFields = allFields; _i10 < _allFields.length; _i10++) {\n                var _field = _allFields[_i10];\n                var _id6 = _field.id;\n                allIds.push(_id6);\n                switch (_field.type) {\n                  case \"text\":\n                    {\n                      var value = _field.defaultValue || \"\";\n                      storage.setValue(_id6, {\n                        value: value\n                      });\n                      break;\n                    }\n                  case \"checkbox\":\n                  case \"radiobutton\":\n                    {\n                      var _value2 = _field.defaultValue === _field.exportValues;\n                      storage.setValue(_id6, {\n                        value: _value2\n                      });\n                      break;\n                    }\n                  case \"combobox\":\n                  case \"listbox\":\n                    {\n                      var _value3 = _field.defaultValue || \"\";\n                      storage.setValue(_id6, {\n                        value: _value3\n                      });\n                      break;\n                    }\n                  default:\n                    continue;\n                }\n                var domElement = document.querySelector(\"[data-element-id=\\\"\".concat(_id6, \"\\\"]\"));\n                if (!domElement) {\n                  continue;\n                } else if (!GetElementsByNameSet.has(domElement)) {\n                  (0, _util.warn)(\"_bindResetFormAction - element not allowed: \".concat(_id6));\n                  continue;\n                }\n                domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n              if (_this57.enableScripting) {\n                var _this57$linkService$e;\n                (_this57$linkService$e = _this57.linkService.eventBus) === null || _this57$linkService$e === void 0 ? void 0 : _this57$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                  source: _this57,\n                  detail: {\n                    id: \"app\",\n                    ids: allIds,\n                    name: \"ResetForm\"\n                  }\n                });\n              }\n              return false;\n            };\n          }\n        }]);\n        return LinkAnnotationElement;\n      }(AnnotationElement);\n      var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {\n        _inherits(TextAnnotationElement, _AnnotationElement2);\n        function TextAnnotationElement(parameters) {\n          var _parameters$data$titl, _parameters$data$cont, _parameters$data$rich;\n          _classCallCheck(this, TextAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl = parameters.data.titleObj) !== null && _parameters$data$titl !== void 0 && _parameters$data$titl.str || (_parameters$data$cont = parameters.data.contentsObj) !== null && _parameters$data$cont !== void 0 && _parameters$data$cont.str || (_parameters$data$rich = parameters.data.richText) !== null && _parameters$data$rich !== void 0 && _parameters$data$rich.str);\n          return _callSuper(this, TextAnnotationElement, [parameters, {\n            isRenderable: isRenderable\n          }]);\n        }\n        _createClass(TextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"textAnnotation\";\n            var image = document.createElement(\"img\");\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n            if (!this.data.hasPopup) {\n              this._createPopup(image, this.data);\n            }\n            this.container.append(image);\n            return this.container;\n          }\n        }]);\n        return TextAnnotationElement;\n      }(AnnotationElement);\n      var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {\n        _inherits(WidgetAnnotationElement, _AnnotationElement3);\n        function WidgetAnnotationElement() {\n          _classCallCheck(this, WidgetAnnotationElement);\n          return _callSuper(this, WidgetAnnotationElement, arguments);\n        }\n        _createClass(WidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            if (this.data.alternativeText) {\n              this.container.title = this.data.alternativeText;\n            }\n            return this.container;\n          }\n        }, {\n          key: \"_getKeyModifier\",\n          value: function _getKeyModifier(event) {\n            var _AnnotationElement$pl = AnnotationElement.platform,\n              isWin = _AnnotationElement$pl.isWin,\n              isMac = _AnnotationElement$pl.isMac;\n            return isWin && event.ctrlKey || isMac && event.metaKey;\n          }\n        }, {\n          key: \"_setEventListener\",\n          value: function _setEventListener(element, baseName, eventName, valueGetter) {\n            var _this58 = this;\n            if (baseName.includes(\"mouse\")) {\n              element.addEventListener(baseName, function (event) {\n                var _this58$linkService$e;\n                (_this58$linkService$e = _this58.linkService.eventBus) === null || _this58$linkService$e === void 0 ? void 0 : _this58$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                  source: _this58,\n                  detail: {\n                    id: _this58.data.id,\n                    name: eventName,\n                    value: valueGetter(event),\n                    shift: event.shiftKey,\n                    modifier: _this58._getKeyModifier(event)\n                  }\n                });\n              });\n            } else {\n              element.addEventListener(baseName, function (event) {\n                var _this58$linkService$e2;\n                (_this58$linkService$e2 = _this58.linkService.eventBus) === null || _this58$linkService$e2 === void 0 ? void 0 : _this58$linkService$e2.dispatch(\"dispatcheventinsandbox\", {\n                  source: _this58,\n                  detail: {\n                    id: _this58.data.id,\n                    name: eventName,\n                    value: valueGetter(event)\n                  }\n                });\n              });\n            }\n          }\n        }, {\n          key: \"_setEventListeners\",\n          value: function _setEventListeners(element, names, getter) {\n            var _iterator94 = _createForOfIteratorHelper(names),\n              _step94;\n            try {\n              for (_iterator94.s(); !(_step94 = _iterator94.n()).done;) {\n                var _this$data$actions;\n                var _step94$value = _slicedToArray(_step94.value, 2),\n                  baseName = _step94$value[0],\n                  eventName = _step94$value[1];\n                if (eventName === \"Action\" || (_this$data$actions = this.data.actions) !== null && _this$data$actions !== void 0 && _this$data$actions[eventName]) {\n                  this._setEventListener(element, baseName, eventName, getter);\n                }\n              }\n            } catch (err) {\n              _iterator94.e(err);\n            } finally {\n              _iterator94.f();\n            }\n          }\n        }, {\n          key: \"_setBackgroundColor\",\n          value: function _setBackgroundColor(element) {\n            var color = this.data.backgroundColor || null;\n            element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n          }\n        }, {\n          key: \"_setTextStyle\",\n          value: function _setTextStyle(element) {\n            var TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            var fontColor = this.data.defaultAppearanceData.fontColor;\n            var fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n            var style = element.style;\n            var computedFontSize;\n            if (this.data.multiLine) {\n              var height = Math.abs(this.data.rect[3] - this.data.rect[1]);\n              var numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n              var lineHeight = height / numberOfLines;\n              computedFontSize = Math.min(fontSize, Math.round(lineHeight / _util.LINE_FACTOR));\n            } else {\n              var _height = Math.abs(this.data.rect[3] - this.data.rect[1]);\n              computedFontSize = Math.min(fontSize, Math.round(_height / _util.LINE_FACTOR));\n            }\n            style.fontSize = \"calc(\".concat(computedFontSize, \"px * var(--scale-factor))\");\n            style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n            if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n          }\n        }, {\n          key: \"_setRequired\",\n          value: function _setRequired(element, isRequired) {\n            if (isRequired) {\n              element.setAttribute(\"required\", true);\n            } else {\n              element.removeAttribute(\"required\");\n            }\n            element.setAttribute(\"aria-required\", isRequired);\n          }\n        }]);\n        return WidgetAnnotationElement;\n      }(AnnotationElement);\n      var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {\n        _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\n        function TextWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, TextWidgetAnnotationElement);\n          var isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          return _callSuper(this, TextWidgetAnnotationElement, [parameters, {\n            isRenderable: isRenderable\n          }]);\n        }\n        _createClass(TextWidgetAnnotationElement, [{\n          key: \"setPropertyOnSiblings\",\n          value: function setPropertyOnSiblings(base, key, value, keyInStorage) {\n            var storage = this.annotationStorage;\n            var _iterator95 = _createForOfIteratorHelper(this._getElementsByName(base.name, base.id)),\n              _step95;\n            try {\n              for (_iterator95.s(); !(_step95 = _iterator95.n()).done;) {\n                var element = _step95.value;\n                if (element.domElement) {\n                  element.domElement[key] = value;\n                }\n                storage.setValue(element.id, _defineProperty({}, keyInStorage, value));\n              }\n            } catch (err) {\n              _iterator95.e(err);\n            } finally {\n              _iterator95.f();\n            }\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            var _this59 = this;\n            var storage = this.annotationStorage;\n            var id = this.data.id;\n            this.container.className = \"textWidgetAnnotation\";\n            var element = null;\n            if (this.renderForms) {\n              var storedData = storage.getValue(id, {\n                value: this.data.fieldValue\n              });\n              var textContent = storedData.formattedValue || storedData.value || \"\";\n              var maxLen = storage.getValue(id, {\n                charLimit: this.data.maxLen\n              }).charLimit;\n              if (maxLen && textContent.length > maxLen) {\n                textContent = textContent.slice(0, maxLen);\n              }\n              var elementData = {\n                userValue: textContent,\n                formattedValue: null,\n                valueOnFocus: \"\"\n              };\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = textContent;\n                if (this.data.doNotScroll) {\n                  element.style.overflowY = \"hidden\";\n                }\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", textContent);\n                if (this.data.doNotScroll) {\n                  element.style.overflowX = \"hidden\";\n                }\n              }\n              GetElementsByNameSet.add(element);\n              element.setAttribute(\"data-element-id\", id);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n              this._setRequired(element, this.data.required);\n              if (maxLen) {\n                element.maxLength = maxLen;\n              }\n              element.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n                _this59.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n              });\n              element.addEventListener(\"resetform\", function (event) {\n                var _this59$data$defaultF;\n                var defaultValue = (_this59$data$defaultF = _this59.data.defaultFieldValue) !== null && _this59$data$defaultF !== void 0 ? _this59$data$defaultF : \"\";\n                element.value = elementData.userValue = defaultValue;\n                elementData.formattedValue = null;\n              });\n              var blurListener = function blurListener(event) {\n                var formattedValue = elementData.formattedValue;\n                if (formattedValue !== null && formattedValue !== undefined) {\n                  event.target.value = formattedValue;\n                }\n                event.target.scrollLeft = 0;\n              };\n              if (this.enableScripting && this.hasJSActions) {\n                var _this$data$actions2;\n                element.addEventListener(\"focus\", function (event) {\n                  if (elementData.userValue) {\n                    event.target.value = elementData.userValue;\n                  }\n                  elementData.valueOnFocus = event.target.value;\n                });\n                element.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                  var actions = {\n                    value: function value(event) {\n                      var _event$detail$value;\n                      elementData.userValue = (_event$detail$value = event.detail.value) !== null && _event$detail$value !== void 0 ? _event$detail$value : \"\";\n                      storage.setValue(id, {\n                        value: elementData.userValue.toString()\n                      });\n                      event.target.value = elementData.userValue;\n                    },\n                    formattedValue: function formattedValue(event) {\n                      var formattedValue = event.detail.formattedValue;\n                      elementData.formattedValue = formattedValue;\n                      if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                        event.target.value = formattedValue;\n                      }\n                      storage.setValue(id, {\n                        formattedValue: formattedValue\n                      });\n                    },\n                    selRange: function selRange(event) {\n                      var _event$target;\n                      (_event$target = event.target).setSelectionRange.apply(_event$target, _toConsumableArray(event.detail.selRange));\n                    },\n                    charLimit: function charLimit(event) {\n                      var _this59$linkService$e;\n                      var charLimit = event.detail.charLimit;\n                      var target = event.target;\n                      if (charLimit === 0) {\n                        target.removeAttribute(\"maxLength\");\n                        return;\n                      }\n                      target.setAttribute(\"maxLength\", charLimit);\n                      var value = elementData.userValue;\n                      if (!value || value.length <= charLimit) {\n                        return;\n                      }\n                      value = value.slice(0, charLimit);\n                      target.value = elementData.userValue = value;\n                      storage.setValue(id, {\n                        value: value\n                      });\n                      (_this59$linkService$e = _this59.linkService.eventBus) === null || _this59$linkService$e === void 0 ? void 0 : _this59$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                        source: _this59,\n                        detail: {\n                          id: id,\n                          name: \"Keystroke\",\n                          value: value,\n                          willCommit: true,\n                          commitKey: 1,\n                          selStart: target.selectionStart,\n                          selEnd: target.selectionEnd\n                        }\n                      });\n                    }\n                  };\n                  _this59._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                element.addEventListener(\"keydown\", function (event) {\n                  var _this59$linkService$e2;\n                  var commitKey = -1;\n                  if (event.key === \"Escape\") {\n                    commitKey = 0;\n                  } else if (event.key === \"Enter\") {\n                    commitKey = 2;\n                  } else if (event.key === \"Tab\") {\n                    commitKey = 3;\n                  }\n                  if (commitKey === -1) {\n                    return;\n                  }\n                  var value = event.target.value;\n                  if (elementData.valueOnFocus === value) {\n                    return;\n                  }\n                  elementData.userValue = value;\n                  (_this59$linkService$e2 = _this59.linkService.eventBus) === null || _this59$linkService$e2 === void 0 ? void 0 : _this59$linkService$e2.dispatch(\"dispatcheventinsandbox\", {\n                    source: _this59,\n                    detail: {\n                      id: id,\n                      name: \"Keystroke\",\n                      value: value,\n                      willCommit: true,\n                      commitKey: commitKey,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                });\n                var _blurListener = blurListener;\n                blurListener = null;\n                element.addEventListener(\"blur\", function (event) {\n                  var value = event.target.value;\n                  elementData.userValue = value;\n                  if (_this59._mouseState.isDown && elementData.valueOnFocus !== value) {\n                    var _this59$linkService$e3;\n                    (_this59$linkService$e3 = _this59.linkService.eventBus) === null || _this59$linkService$e3 === void 0 ? void 0 : _this59$linkService$e3.dispatch(\"dispatcheventinsandbox\", {\n                      source: _this59,\n                      detail: {\n                        id: id,\n                        name: \"Keystroke\",\n                        value: value,\n                        willCommit: true,\n                        commitKey: 1,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  }\n                  _blurListener(event);\n                });\n                if ((_this$data$actions2 = this.data.actions) !== null && _this$data$actions2 !== void 0 && _this$data$actions2.Keystroke) {\n                  element.addEventListener(\"beforeinput\", function (event) {\n                    var _this59$linkService$e4;\n                    var data = event.data,\n                      target = event.target;\n                    var value = target.value,\n                      selectionStart = target.selectionStart,\n                      selectionEnd = target.selectionEnd;\n                    var selStart = selectionStart,\n                      selEnd = selectionEnd;\n                    switch (event.inputType) {\n                      case \"deleteWordBackward\":\n                        {\n                          var match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                          if (match) {\n                            selStart -= match[0].length;\n                          }\n                          break;\n                        }\n                      case \"deleteWordForward\":\n                        {\n                          var _match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                          if (_match) {\n                            selEnd += _match[0].length;\n                          }\n                          break;\n                        }\n                      case \"deleteContentBackward\":\n                        if (selectionStart === selectionEnd) {\n                          selStart -= 1;\n                        }\n                        break;\n                      case \"deleteContentForward\":\n                        if (selectionStart === selectionEnd) {\n                          selEnd += 1;\n                        }\n                        break;\n                    }\n                    event.preventDefault();\n                    (_this59$linkService$e4 = _this59.linkService.eventBus) === null || _this59$linkService$e4 === void 0 ? void 0 : _this59$linkService$e4.dispatch(\"dispatcheventinsandbox\", {\n                      source: _this59,\n                      detail: {\n                        id: id,\n                        name: \"Keystroke\",\n                        value: value,\n                        change: data || \"\",\n                        willCommit: false,\n                        selStart: selStart,\n                        selEnd: selEnd\n                      }\n                    });\n                  });\n                }\n                this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], function (event) {\n                  return event.target.value;\n                });\n              }\n              if (blurListener) {\n                element.addEventListener(\"blur\", blurListener);\n              }\n              if (this.data.comb) {\n                var fieldWidth = this.data.rect[2] - this.data.rect[0];\n                var combWidth = fieldWidth / maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = \"calc(\".concat(combWidth, \"px * var(--scale-factor) - 1ch)\");\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n            }\n            this._setTextStyle(element);\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }]);\n        return TextWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {\n        _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\n        function CheckboxWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, CheckboxWidgetAnnotationElement);\n          return _callSuper(this, CheckboxWidgetAnnotationElement, [parameters, {\n            isRenderable: parameters.renderForms\n          }]);\n        }\n        _createClass(CheckboxWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var _this60 = this;\n            var storage = this.annotationStorage;\n            var data = this.data;\n            var id = data.id;\n            var value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n            }).value;\n            if (typeof value === \"string\") {\n              value = value !== \"Off\";\n              storage.setValue(id, {\n                value: value\n              });\n            }\n            this.container.className = \"buttonWidgetAnnotation checkBox\";\n            var element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"checkbox\";\n            element.name = data.fieldName;\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n            element.setAttribute(\"exportValue\", data.exportValue);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", function (event) {\n              var _event$target2 = event.target,\n                name = _event$target2.name,\n                checked = _event$target2.checked;\n              var _iterator96 = _createForOfIteratorHelper(_this60._getElementsByName(name, id)),\n                _step96;\n              try {\n                for (_iterator96.s(); !(_step96 = _iterator96.n()).done;) {\n                  var checkbox = _step96.value;\n                  var curChecked = checked && checkbox.exportValue === data.exportValue;\n                  if (checkbox.domElement) {\n                    checkbox.domElement.checked = curChecked;\n                  }\n                  storage.setValue(checkbox.id, {\n                    value: curChecked\n                  });\n                }\n              } catch (err) {\n                _iterator96.e(err);\n              } finally {\n                _iterator96.f();\n              }\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", function (event) {\n              var defaultValue = data.defaultFieldValue || \"Off\";\n              event.target.checked = defaultValue === data.exportValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                var actions = {\n                  value: function value(event) {\n                    event.target.checked = event.detail.value !== \"Off\";\n                    storage.setValue(id, {\n                      value: event.target.checked\n                    });\n                  }\n                };\n                _this60._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], function (event) {\n                return event.target.checked;\n              });\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }]);\n        return CheckboxWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {\n        _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\n        function RadioButtonWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, RadioButtonWidgetAnnotationElement);\n          return _callSuper(this, RadioButtonWidgetAnnotationElement, [parameters, {\n            isRenderable: parameters.renderForms\n          }]);\n        }\n        _createClass(RadioButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var _this61 = this;\n            this.container.className = \"buttonWidgetAnnotation radioButton\";\n            var storage = this.annotationStorage;\n            var data = this.data;\n            var id = data.id;\n            var value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n            }).value;\n            if (typeof value === \"string\") {\n              value = value !== data.buttonValue;\n              storage.setValue(id, {\n                value: value\n              });\n            }\n            var element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"radio\";\n            element.name = data.fieldName;\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", function (event) {\n              var _event$target3 = event.target,\n                name = _event$target3.name,\n                checked = _event$target3.checked;\n              var _iterator97 = _createForOfIteratorHelper(_this61._getElementsByName(name, id)),\n                _step97;\n              try {\n                for (_iterator97.s(); !(_step97 = _iterator97.n()).done;) {\n                  var radio = _step97.value;\n                  storage.setValue(radio.id, {\n                    value: false\n                  });\n                }\n              } catch (err) {\n                _iterator97.e(err);\n              } finally {\n                _iterator97.f();\n              }\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", function (event) {\n              var defaultValue = data.defaultFieldValue;\n              event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n              var pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                var actions = {\n                  value: function value(event) {\n                    var checked = pdfButtonValue === event.detail.value;\n                    var _iterator98 = _createForOfIteratorHelper(_this61._getElementsByName(event.target.name)),\n                      _step98;\n                    try {\n                      for (_iterator98.s(); !(_step98 = _iterator98.n()).done;) {\n                        var radio = _step98.value;\n                        var curChecked = checked && radio.id === id;\n                        if (radio.domElement) {\n                          radio.domElement.checked = curChecked;\n                        }\n                        storage.setValue(radio.id, {\n                          value: curChecked\n                        });\n                      }\n                    } catch (err) {\n                      _iterator98.e(err);\n                    } finally {\n                      _iterator98.f();\n                    }\n                  }\n                };\n                _this61._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], function (event) {\n                return event.target.checked;\n              });\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }]);\n        return RadioButtonWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {\n        _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);\n        function PushButtonWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, PushButtonWidgetAnnotationElement);\n          return _callSuper(this, PushButtonWidgetAnnotationElement, [parameters, {\n            ignoreBorder: parameters.data.hasAppearance\n          }]);\n        }\n        _createClass(PushButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var _this62 = this;\n            var container = _get(_getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), \"render\", this).call(this);\n            container.className = \"buttonWidgetAnnotation pushButton\";\n            if (this.data.alternativeText) {\n              container.title = this.data.alternativeText;\n            }\n            var linkElement = container.lastChild;\n            if (this.enableScripting && this.hasJSActions && linkElement) {\n              this._setDefaultPropertiesFromJS(linkElement);\n              linkElement.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                _this62._dispatchEventFromSandbox({}, jsEvent);\n              });\n            }\n            return container;\n          }\n        }]);\n        return PushButtonWidgetAnnotationElement;\n      }(LinkAnnotationElement);\n      var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {\n        _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\n        function ChoiceWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, ChoiceWidgetAnnotationElement);\n          return _callSuper(this, ChoiceWidgetAnnotationElement, [parameters, {\n            isRenderable: parameters.renderForms\n          }]);\n        }\n        _createClass(ChoiceWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var _this63 = this;\n            this.container.className = \"choiceWidgetAnnotation\";\n            var storage = this.annotationStorage;\n            var id = this.data.id;\n            var storedData = storage.getValue(id, {\n              value: this.data.fieldValue\n            });\n            var selectElement = document.createElement(\"select\");\n            GetElementsByNameSet.add(selectElement);\n            selectElement.setAttribute(\"data-element-id\", id);\n            selectElement.disabled = this.data.readOnly;\n            this._setRequired(selectElement, this.data.required);\n            selectElement.name = this.data.fieldName;\n            selectElement.tabIndex = DEFAULT_TAB_INDEX;\n            var addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n            selectElement.addEventListener(\"resetform\", function (event) {\n              var defaultValue = _this63.data.defaultFieldValue;\n              var _iterator99 = _createForOfIteratorHelper(selectElement.options),\n                _step99;\n              try {\n                for (_iterator99.s(); !(_step99 = _iterator99.n()).done;) {\n                  var option = _step99.value;\n                  option.selected = option.value === defaultValue;\n                }\n              } catch (err) {\n                _iterator99.e(err);\n              } finally {\n                _iterator99.f();\n              }\n            });\n            var _iterator100 = _createForOfIteratorHelper(this.data.options),\n              _step100;\n            try {\n              for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {\n                var option = _step100.value;\n                var optionElement = document.createElement(\"option\");\n                optionElement.textContent = option.displayValue;\n                optionElement.value = option.exportValue;\n                if (storedData.value.includes(option.exportValue)) {\n                  optionElement.setAttribute(\"selected\", true);\n                  addAnEmptyEntry = false;\n                }\n                selectElement.append(optionElement);\n              }\n            } catch (err) {\n              _iterator100.e(err);\n            } finally {\n              _iterator100.f();\n            }\n            var _removeEmptyEntry = null;\n            if (addAnEmptyEntry) {\n              var noneOptionElement = document.createElement(\"option\");\n              noneOptionElement.value = \" \";\n              noneOptionElement.setAttribute(\"hidden\", true);\n              noneOptionElement.setAttribute(\"selected\", true);\n              selectElement.prepend(noneOptionElement);\n              _removeEmptyEntry = function removeEmptyEntry() {\n                noneOptionElement.remove();\n                selectElement.removeEventListener(\"input\", _removeEmptyEntry);\n                _removeEmptyEntry = null;\n              };\n              selectElement.addEventListener(\"input\", _removeEmptyEntry);\n            }\n            var getValue = function getValue(event, isExport) {\n              var name = isExport ? \"value\" : \"textContent\";\n              var options = event.target.options;\n              if (!event.target.multiple) {\n                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n              }\n              return Array.prototype.filter.call(options, function (option) {\n                return option.selected;\n              }).map(function (option) {\n                return option[name];\n              });\n            };\n            var getItems = function getItems(event) {\n              var options = event.target.options;\n              return Array.prototype.map.call(options, function (option) {\n                return {\n                  displayValue: option.textContent,\n                  exportValue: option.value\n                };\n              });\n            };\n            if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                var actions = {\n                  value: function value(event) {\n                    var _removeEmptyEntry2;\n                    (_removeEmptyEntry2 = _removeEmptyEntry) === null || _removeEmptyEntry2 === void 0 ? void 0 : _removeEmptyEntry2();\n                    var value = event.detail.value;\n                    var values = new Set(Array.isArray(value) ? value : [value]);\n                    var _iterator101 = _createForOfIteratorHelper(selectElement.options),\n                      _step101;\n                    try {\n                      for (_iterator101.s(); !(_step101 = _iterator101.n()).done;) {\n                        var option = _step101.value;\n                        option.selected = values.has(option.value);\n                      }\n                    } catch (err) {\n                      _iterator101.e(err);\n                    } finally {\n                      _iterator101.f();\n                    }\n                    storage.setValue(id, {\n                      value: getValue(event, true)\n                    });\n                  },\n                  multipleSelection: function multipleSelection(event) {\n                    selectElement.multiple = true;\n                  },\n                  remove: function remove(event) {\n                    var options = selectElement.options;\n                    var index = event.detail.remove;\n                    options[index].selected = false;\n                    selectElement.remove(index);\n                    if (options.length > 0) {\n                      var i = Array.prototype.findIndex.call(options, function (option) {\n                        return option.selected;\n                      });\n                      if (i === -1) {\n                        options[0].selected = true;\n                      }\n                    }\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n                  clear: function clear(event) {\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n                    storage.setValue(id, {\n                      value: null,\n                      items: []\n                    });\n                  },\n                  insert: function insert(event) {\n                    var _event$detail$insert = event.detail.insert,\n                      index = _event$detail$insert.index,\n                      displayValue = _event$detail$insert.displayValue,\n                      exportValue = _event$detail$insert.exportValue;\n                    var selectChild = selectElement.children[index];\n                    var optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n                    if (selectChild) {\n                      selectChild.before(optionElement);\n                    } else {\n                      selectElement.append(optionElement);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n                  items: function items(event) {\n                    var items = event.detail.items;\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n                    var _iterator102 = _createForOfIteratorHelper(items),\n                      _step102;\n                    try {\n                      for (_iterator102.s(); !(_step102 = _iterator102.n()).done;) {\n                        var item = _step102.value;\n                        var displayValue = item.displayValue,\n                          exportValue = item.exportValue;\n                        var optionElement = document.createElement(\"option\");\n                        optionElement.textContent = displayValue;\n                        optionElement.value = exportValue;\n                        selectElement.append(optionElement);\n                      }\n                    } catch (err) {\n                      _iterator102.e(err);\n                    } finally {\n                      _iterator102.f();\n                    }\n                    if (selectElement.options.length > 0) {\n                      selectElement.options[0].selected = true;\n                    }\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n                  indices: function indices(event) {\n                    var indices = new Set(event.detail.indices);\n                    var _iterator103 = _createForOfIteratorHelper(event.target.options),\n                      _step103;\n                    try {\n                      for (_iterator103.s(); !(_step103 = _iterator103.n()).done;) {\n                        var option = _step103.value;\n                        option.selected = indices.has(option.index);\n                      }\n                    } catch (err) {\n                      _iterator103.e(err);\n                    } finally {\n                      _iterator103.f();\n                    }\n                    storage.setValue(id, {\n                      value: getValue(event, true)\n                    });\n                  },\n                  editable: function editable(event) {\n                    event.target.disabled = !event.detail.editable;\n                  }\n                };\n                _this63._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", function (event) {\n                var _this63$linkService$e;\n                var exportValue = getValue(event, true);\n                var value = getValue(event, false);\n                storage.setValue(id, {\n                  value: exportValue\n                });\n                (_this63$linkService$e = _this63.linkService.eventBus) === null || _this63$linkService$e === void 0 ? void 0 : _this63$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                  source: _this63,\n                  detail: {\n                    id: id,\n                    name: \"Keystroke\",\n                    value: value,\n                    changeEx: exportValue,\n                    willCommit: true,\n                    commitKey: 1,\n                    keyDown: false\n                  }\n                });\n              });\n              this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], function (event) {\n                return event.target.checked;\n              });\n            } else {\n              selectElement.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: getValue(event, true)\n                });\n              });\n            }\n            if (this.data.combo) {\n              this._setTextStyle(selectElement);\n            } else {}\n            this._setBackgroundColor(selectElement);\n            this._setDefaultPropertiesFromJS(selectElement);\n            this.container.append(selectElement);\n            return this.container;\n          }\n        }]);\n        return ChoiceWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {\n        _inherits(PopupAnnotationElement, _AnnotationElement4);\n        function PopupAnnotationElement(parameters) {\n          var _parameters$data$titl2, _parameters$data$cont2, _parameters$data$rich2;\n          _classCallCheck(this, PopupAnnotationElement);\n          var isRenderable = !!((_parameters$data$titl2 = parameters.data.titleObj) !== null && _parameters$data$titl2 !== void 0 && _parameters$data$titl2.str || (_parameters$data$cont2 = parameters.data.contentsObj) !== null && _parameters$data$cont2 !== void 0 && _parameters$data$cont2.str || (_parameters$data$rich2 = parameters.data.richText) !== null && _parameters$data$rich2 !== void 0 && _parameters$data$rich2.str);\n          return _callSuper(this, PopupAnnotationElement, [parameters, {\n            isRenderable: isRenderable\n          }]);\n        }\n        _createClass(PopupAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n            this.container.className = \"popupAnnotation\";\n            if (IGNORE_TYPES.includes(this.data.parentType)) {\n              return this.container;\n            }\n            var selector = \"[data-annotation-id=\\\"\".concat(this.data.parentId, \"\\\"]\");\n            var parentElements = this.layer.querySelectorAll(selector);\n            if (parentElements.length === 0) {\n              return this.container;\n            }\n            var popup = new PopupElement({\n              container: this.container,\n              trigger: Array.from(parentElements),\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText\n            });\n            var page = this.page;\n            var rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n            var popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n            var popupTop = rect[1];\n            var _this$viewport$viewBo3 = _slicedToArray(this.viewport.viewBox, 4),\n              pageLLx = _this$viewport$viewBo3[0],\n              pageLLy = _this$viewport$viewBo3[1],\n              pageURx = _this$viewport$viewBo3[2],\n              pageURy = _this$viewport$viewBo3[3];\n            var pageWidth = pageURx - pageLLx;\n            var pageHeight = pageURy - pageLLy;\n            this.container.style.left = \"\".concat(100 * (popupLeft - pageLLx) / pageWidth, \"%\");\n            this.container.style.top = \"\".concat(100 * (popupTop - pageLLy) / pageHeight, \"%\");\n            this.container.append(popup.render());\n            return this.container;\n          }\n        }]);\n        return PopupAnnotationElement;\n      }(AnnotationElement);\n      var PopupElement = /*#__PURE__*/function () {\n        function PopupElement(parameters) {\n          _classCallCheck(this, PopupElement);\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.titleObj = parameters.titleObj;\n          this.modificationDate = parameters.modificationDate;\n          this.contentsObj = parameters.contentsObj;\n          this.richText = parameters.richText;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n        _createClass(PopupElement, [{\n          key: \"render\",\n          value: function render() {\n            var _this$richText, _this$contentsObj;\n            var BACKGROUND_ENLIGHT = 0.7;\n            var wrapper = document.createElement(\"div\");\n            wrapper.className = \"popupWrapper\";\n            this.hideElement = this.hideWrapper ? wrapper : this.container;\n            this.hideElement.hidden = true;\n            var popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            var color = this.color;\n            if (color) {\n              var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n              var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n              var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n              popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n            }\n            var title = document.createElement(\"h1\");\n            title.dir = this.titleObj.dir;\n            title.textContent = this.titleObj.str;\n            popup.append(title);\n            var dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n            if (dateObject) {\n              var modificationDate = document.createElement(\"span\");\n              modificationDate.className = \"popupDate\";\n              modificationDate.textContent = \"{{date}}, {{time}}\";\n              modificationDate.dataset.l10nId = \"annotation_date_string\";\n              modificationDate.dataset.l10nArgs = JSON.stringify({\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n              popup.append(modificationDate);\n            }\n            if ((_this$richText = this.richText) !== null && _this$richText !== void 0 && _this$richText.str && (!((_this$contentsObj = this.contentsObj) !== null && _this$contentsObj !== void 0 && _this$contentsObj.str) || this.contentsObj.str === this.richText.str)) {\n              _xfa_layer.XfaLayer.render({\n                xfaHtml: this.richText.html,\n                intent: \"richText\",\n                div: popup\n              });\n              popup.lastChild.className = \"richText popupContent\";\n            } else {\n              var contents = this._formatContents(this.contentsObj);\n              popup.append(contents);\n            }\n            if (!Array.isArray(this.trigger)) {\n              this.trigger = [this.trigger];\n            }\n            var _iterator104 = _createForOfIteratorHelper(this.trigger),\n              _step104;\n            try {\n              for (_iterator104.s(); !(_step104 = _iterator104.n()).done;) {\n                var element = _step104.value;\n                element.addEventListener(\"click\", this._toggle.bind(this));\n                element.addEventListener(\"mouseover\", this._show.bind(this, false));\n                element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n              }\n            } catch (err) {\n              _iterator104.e(err);\n            } finally {\n              _iterator104.f();\n            }\n            popup.addEventListener(\"click\", this._hide.bind(this, true));\n            wrapper.append(popup);\n            return wrapper;\n          }\n        }, {\n          key: \"_formatContents\",\n          value: function _formatContents(_ref54) {\n            var str = _ref54.str,\n              dir = _ref54.dir;\n            var p = document.createElement(\"p\");\n            p.className = \"popupContent\";\n            p.dir = dir;\n            var lines = str.split(/(?:\\r\\n?|\\n)/);\n            for (var i = 0, ii = lines.length; i < ii; ++i) {\n              var line = lines[i];\n              p.append(document.createTextNode(line));\n              if (i < ii - 1) {\n                p.append(document.createElement(\"br\"));\n              }\n            }\n            return p;\n          }\n        }, {\n          key: \"_toggle\",\n          value: function _toggle() {\n            if (this.pinned) {\n              this._hide(true);\n            } else {\n              this._show(true);\n            }\n          }\n        }, {\n          key: \"_show\",\n          value: function _show() {\n            var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (pin) {\n              this.pinned = true;\n            }\n            if (this.hideElement.hidden) {\n              this.hideElement.hidden = false;\n              this.container.style.zIndex = parseInt(this.container.style.zIndex) + 1000;\n            }\n          }\n        }, {\n          key: \"_hide\",\n          value: function _hide() {\n            var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            if (unpin) {\n              this.pinned = false;\n            }\n            if (!this.hideElement.hidden && !this.pinned) {\n              this.hideElement.hidden = true;\n              this.container.style.zIndex = parseInt(this.container.style.zIndex) - 1000;\n            }\n          }\n        }]);\n        return PopupElement;\n      }();\n      var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {\n        _inherits(FreeTextAnnotationElement, _AnnotationElement5);\n        function FreeTextAnnotationElement(parameters) {\n          var _parameters$data$titl3, _parameters$data$cont3, _parameters$data$rich3;\n          var _this64;\n          _classCallCheck(this, FreeTextAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl3 = parameters.data.titleObj) !== null && _parameters$data$titl3 !== void 0 && _parameters$data$titl3.str || (_parameters$data$cont3 = parameters.data.contentsObj) !== null && _parameters$data$cont3 !== void 0 && _parameters$data$cont3.str || (_parameters$data$rich3 = parameters.data.richText) !== null && _parameters$data$rich3 !== void 0 && _parameters$data$rich3.str);\n          _this64 = _callSuper(this, FreeTextAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n          _this64.textContent = parameters.data.textContent;\n          return _this64;\n        }\n        _createClass(FreeTextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"freeTextAnnotation\";\n            if (this.textContent) {\n              var content = document.createElement(\"div\");\n              content.className = \"annotationTextContent\";\n              content.setAttribute(\"role\", \"comment\");\n              var _iterator105 = _createForOfIteratorHelper(this.textContent),\n                _step105;\n              try {\n                for (_iterator105.s(); !(_step105 = _iterator105.n()).done;) {\n                  var line = _step105.value;\n                  var lineSpan = document.createElement(\"span\");\n                  lineSpan.textContent = line;\n                  content.append(lineSpan);\n                }\n              } catch (err) {\n                _iterator105.e(err);\n              } finally {\n                _iterator105.f();\n              }\n              this.container.append(content);\n            }\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return FreeTextAnnotationElement;\n      }(AnnotationElement);\n      var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {\n        _inherits(LineAnnotationElement, _AnnotationElement6);\n        function LineAnnotationElement(parameters) {\n          var _parameters$data$titl4, _parameters$data$cont4, _parameters$data$rich4;\n          _classCallCheck(this, LineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl4 = parameters.data.titleObj) !== null && _parameters$data$titl4 !== void 0 && _parameters$data$titl4.str || (_parameters$data$cont4 = parameters.data.contentsObj) !== null && _parameters$data$cont4 !== void 0 && _parameters$data$cont4.str || (_parameters$data$rich4 = parameters.data.richText) !== null && _parameters$data$rich4 !== void 0 && _parameters$data$rich4.str);\n          return _callSuper(this, LineAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n        }\n        _createClass(LineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"lineAnnotation\";\n            var data = this.data;\n            var _getRectDims3 = getRectDims(data.rect),\n              width = _getRectDims3.width,\n              height = _getRectDims3.height;\n            var svg = this.svgFactory.create(width, height, true);\n            var line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            line.setAttribute(\"fill\", \"transparent\");\n            svg.append(line);\n            this.container.append(svg);\n            this._createPopup(line, data);\n            return this.container;\n          }\n        }]);\n        return LineAnnotationElement;\n      }(AnnotationElement);\n      var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {\n        _inherits(SquareAnnotationElement, _AnnotationElement7);\n        function SquareAnnotationElement(parameters) {\n          var _parameters$data$titl5, _parameters$data$cont5, _parameters$data$rich5;\n          _classCallCheck(this, SquareAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl5 = parameters.data.titleObj) !== null && _parameters$data$titl5 !== void 0 && _parameters$data$titl5.str || (_parameters$data$cont5 = parameters.data.contentsObj) !== null && _parameters$data$cont5 !== void 0 && _parameters$data$cont5.str || (_parameters$data$rich5 = parameters.data.richText) !== null && _parameters$data$rich5 !== void 0 && _parameters$data$rich5.str);\n          return _callSuper(this, SquareAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n        }\n        _createClass(SquareAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squareAnnotation\";\n            var data = this.data;\n            var _getRectDims4 = getRectDims(data.rect),\n              width = _getRectDims4.width,\n              height = _getRectDims4.height;\n            var svg = this.svgFactory.create(width, height, true);\n            var borderWidth = data.borderStyle.width;\n            var square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"transparent\");\n            svg.append(square);\n            this.container.append(svg);\n            this._createPopup(square, data);\n            return this.container;\n          }\n        }]);\n        return SquareAnnotationElement;\n      }(AnnotationElement);\n      var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {\n        _inherits(CircleAnnotationElement, _AnnotationElement8);\n        function CircleAnnotationElement(parameters) {\n          var _parameters$data$titl6, _parameters$data$cont6, _parameters$data$rich6;\n          _classCallCheck(this, CircleAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl6 = parameters.data.titleObj) !== null && _parameters$data$titl6 !== void 0 && _parameters$data$titl6.str || (_parameters$data$cont6 = parameters.data.contentsObj) !== null && _parameters$data$cont6 !== void 0 && _parameters$data$cont6.str || (_parameters$data$rich6 = parameters.data.richText) !== null && _parameters$data$rich6 !== void 0 && _parameters$data$rich6.str);\n          return _callSuper(this, CircleAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n        }\n        _createClass(CircleAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"circleAnnotation\";\n            var data = this.data;\n            var _getRectDims5 = getRectDims(data.rect),\n              width = _getRectDims5.width,\n              height = _getRectDims5.height;\n            var svg = this.svgFactory.create(width, height, true);\n            var borderWidth = data.borderStyle.width;\n            var circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"transparent\");\n            svg.append(circle);\n            this.container.append(svg);\n            this._createPopup(circle, data);\n            return this.container;\n          }\n        }]);\n        return CircleAnnotationElement;\n      }(AnnotationElement);\n      var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {\n        _inherits(PolylineAnnotationElement, _AnnotationElement9);\n        function PolylineAnnotationElement(parameters) {\n          var _parameters$data$titl7, _parameters$data$cont7, _parameters$data$rich7;\n          var _this65;\n          _classCallCheck(this, PolylineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl7 = parameters.data.titleObj) !== null && _parameters$data$titl7 !== void 0 && _parameters$data$titl7.str || (_parameters$data$cont7 = parameters.data.contentsObj) !== null && _parameters$data$cont7 !== void 0 && _parameters$data$cont7.str || (_parameters$data$rich7 = parameters.data.richText) !== null && _parameters$data$rich7 !== void 0 && _parameters$data$rich7.str);\n          _this65 = _callSuper(this, PolylineAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n          _this65.containerClassName = \"polylineAnnotation\";\n          _this65.svgElementName = \"svg:polyline\";\n          return _this65;\n        }\n        _createClass(PolylineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var _getRectDims6 = getRectDims(data.rect),\n              width = _getRectDims6.width,\n              height = _getRectDims6.height;\n            var svg = this.svgFactory.create(width, height, true);\n            var points = [];\n            var _iterator106 = _createForOfIteratorHelper(data.vertices),\n              _step106;\n            try {\n              for (_iterator106.s(); !(_step106 = _iterator106.n()).done;) {\n                var coordinate = _step106.value;\n                var x = coordinate.x - data.rect[0];\n                var y = data.rect[3] - coordinate.y;\n                points.push(x + \",\" + y);\n              }\n            } catch (err) {\n              _iterator106.e(err);\n            } finally {\n              _iterator106.f();\n            }\n            points = points.join(\" \");\n            var polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            svg.append(polyline);\n            this.container.append(svg);\n            this._createPopup(polyline, data);\n            return this.container;\n          }\n        }]);\n        return PolylineAnnotationElement;\n      }(AnnotationElement);\n      var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {\n        _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\n        function PolygonAnnotationElement(parameters) {\n          var _this66;\n          _classCallCheck(this, PolygonAnnotationElement);\n          _this66 = _callSuper(this, PolygonAnnotationElement, [parameters]);\n          _this66.containerClassName = \"polygonAnnotation\";\n          _this66.svgElementName = \"svg:polygon\";\n          return _this66;\n        }\n        return _createClass(PolygonAnnotationElement);\n      }(PolylineAnnotationElement);\n      var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {\n        _inherits(CaretAnnotationElement, _AnnotationElement10);\n        function CaretAnnotationElement(parameters) {\n          var _parameters$data$titl8, _parameters$data$cont8, _parameters$data$rich8;\n          _classCallCheck(this, CaretAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl8 = parameters.data.titleObj) !== null && _parameters$data$titl8 !== void 0 && _parameters$data$titl8.str || (_parameters$data$cont8 = parameters.data.contentsObj) !== null && _parameters$data$cont8 !== void 0 && _parameters$data$cont8.str || (_parameters$data$rich8 = parameters.data.richText) !== null && _parameters$data$rich8 !== void 0 && _parameters$data$rich8.str);\n          return _callSuper(this, CaretAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n        }\n        _createClass(CaretAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"caretAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return CaretAnnotationElement;\n      }(AnnotationElement);\n      var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {\n        _inherits(InkAnnotationElement, _AnnotationElement11);\n        function InkAnnotationElement(parameters) {\n          var _parameters$data$titl9, _parameters$data$cont9, _parameters$data$rich9;\n          var _this67;\n          _classCallCheck(this, InkAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl9 = parameters.data.titleObj) !== null && _parameters$data$titl9 !== void 0 && _parameters$data$titl9.str || (_parameters$data$cont9 = parameters.data.contentsObj) !== null && _parameters$data$cont9 !== void 0 && _parameters$data$cont9.str || (_parameters$data$rich9 = parameters.data.richText) !== null && _parameters$data$rich9 !== void 0 && _parameters$data$rich9.str);\n          _this67 = _callSuper(this, InkAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n          _this67.containerClassName = \"inkAnnotation\";\n          _this67.svgElementName = \"svg:polyline\";\n          return _this67;\n        }\n        _createClass(InkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var _getRectDims7 = getRectDims(data.rect),\n              width = _getRectDims7.width,\n              height = _getRectDims7.height;\n            var svg = this.svgFactory.create(width, height, true);\n            var _iterator107 = _createForOfIteratorHelper(data.inkLists),\n              _step107;\n            try {\n              for (_iterator107.s(); !(_step107 = _iterator107.n()).done;) {\n                var inkList = _step107.value;\n                var points = [];\n                var _iterator108 = _createForOfIteratorHelper(inkList),\n                  _step108;\n                try {\n                  for (_iterator108.s(); !(_step108 = _iterator108.n()).done;) {\n                    var coordinate = _step108.value;\n                    var x = coordinate.x - data.rect[0];\n                    var y = data.rect[3] - coordinate.y;\n                    points.push(\"\".concat(x, \",\").concat(y));\n                  }\n                } catch (err) {\n                  _iterator108.e(err);\n                } finally {\n                  _iterator108.f();\n                }\n                points = points.join(\" \");\n                var polyline = this.svgFactory.createElement(this.svgElementName);\n                polyline.setAttribute(\"points\", points);\n                polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                polyline.setAttribute(\"stroke\", \"transparent\");\n                polyline.setAttribute(\"fill\", \"transparent\");\n                this._createPopup(polyline, data);\n                svg.append(polyline);\n              }\n            } catch (err) {\n              _iterator107.e(err);\n            } finally {\n              _iterator107.f();\n            }\n            this.container.append(svg);\n            return this.container;\n          }\n        }]);\n        return InkAnnotationElement;\n      }(AnnotationElement);\n      var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {\n        _inherits(HighlightAnnotationElement, _AnnotationElement12);\n        function HighlightAnnotationElement(parameters) {\n          var _parameters$data$titl10, _parameters$data$cont10, _parameters$data$rich10;\n          _classCallCheck(this, HighlightAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl10 = parameters.data.titleObj) !== null && _parameters$data$titl10 !== void 0 && _parameters$data$titl10.str || (_parameters$data$cont10 = parameters.data.contentsObj) !== null && _parameters$data$cont10 !== void 0 && _parameters$data$cont10.str || (_parameters$data$rich10 = parameters.data.richText) !== null && _parameters$data$rich10 !== void 0 && _parameters$data$rich10.str);\n          return _callSuper(this, HighlightAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          }]);\n        }\n        _createClass(HighlightAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"highlightAnnotation\");\n            }\n            this.container.className = \"highlightAnnotation\";\n            return this.container;\n          }\n        }]);\n        return HighlightAnnotationElement;\n      }(AnnotationElement);\n      var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {\n        _inherits(UnderlineAnnotationElement, _AnnotationElement13);\n        function UnderlineAnnotationElement(parameters) {\n          var _parameters$data$titl11, _parameters$data$cont11, _parameters$data$rich11;\n          _classCallCheck(this, UnderlineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl11 = parameters.data.titleObj) !== null && _parameters$data$titl11 !== void 0 && _parameters$data$titl11.str || (_parameters$data$cont11 = parameters.data.contentsObj) !== null && _parameters$data$cont11 !== void 0 && _parameters$data$cont11.str || (_parameters$data$rich11 = parameters.data.richText) !== null && _parameters$data$rich11 !== void 0 && _parameters$data$rich11.str);\n          return _callSuper(this, UnderlineAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          }]);\n        }\n        _createClass(UnderlineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"underlineAnnotation\");\n            }\n            this.container.className = \"underlineAnnotation\";\n            return this.container;\n          }\n        }]);\n        return UnderlineAnnotationElement;\n      }(AnnotationElement);\n      var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {\n        _inherits(SquigglyAnnotationElement, _AnnotationElement14);\n        function SquigglyAnnotationElement(parameters) {\n          var _parameters$data$titl12, _parameters$data$cont12, _parameters$data$rich12;\n          _classCallCheck(this, SquigglyAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl12 = parameters.data.titleObj) !== null && _parameters$data$titl12 !== void 0 && _parameters$data$titl12.str || (_parameters$data$cont12 = parameters.data.contentsObj) !== null && _parameters$data$cont12 !== void 0 && _parameters$data$cont12.str || (_parameters$data$rich12 = parameters.data.richText) !== null && _parameters$data$rich12 !== void 0 && _parameters$data$rich12.str);\n          return _callSuper(this, SquigglyAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          }]);\n        }\n        _createClass(SquigglyAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"squigglyAnnotation\");\n            }\n            this.container.className = \"squigglyAnnotation\";\n            return this.container;\n          }\n        }]);\n        return SquigglyAnnotationElement;\n      }(AnnotationElement);\n      var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {\n        _inherits(StrikeOutAnnotationElement, _AnnotationElement15);\n        function StrikeOutAnnotationElement(parameters) {\n          var _parameters$data$titl13, _parameters$data$cont13, _parameters$data$rich13;\n          _classCallCheck(this, StrikeOutAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl13 = parameters.data.titleObj) !== null && _parameters$data$titl13 !== void 0 && _parameters$data$titl13.str || (_parameters$data$cont13 = parameters.data.contentsObj) !== null && _parameters$data$cont13 !== void 0 && _parameters$data$cont13.str || (_parameters$data$rich13 = parameters.data.richText) !== null && _parameters$data$rich13 !== void 0 && _parameters$data$rich13.str);\n          return _callSuper(this, StrikeOutAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          }]);\n        }\n        _createClass(StrikeOutAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n            }\n            this.container.className = \"strikeoutAnnotation\";\n            return this.container;\n          }\n        }]);\n        return StrikeOutAnnotationElement;\n      }(AnnotationElement);\n      var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {\n        _inherits(StampAnnotationElement, _AnnotationElement16);\n        function StampAnnotationElement(parameters) {\n          var _parameters$data$titl14, _parameters$data$cont14, _parameters$data$rich14;\n          _classCallCheck(this, StampAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || (_parameters$data$titl14 = parameters.data.titleObj) !== null && _parameters$data$titl14 !== void 0 && _parameters$data$titl14.str || (_parameters$data$cont14 = parameters.data.contentsObj) !== null && _parameters$data$cont14 !== void 0 && _parameters$data$cont14.str || (_parameters$data$rich14 = parameters.data.richText) !== null && _parameters$data$rich14 !== void 0 && _parameters$data$rich14.str);\n          return _callSuper(this, StampAnnotationElement, [parameters, {\n            isRenderable: isRenderable,\n            ignoreBorder: true\n          }]);\n        }\n        _createClass(StampAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"stampAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return StampAnnotationElement;\n      }(AnnotationElement);\n      var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {\n        _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);\n        function FileAttachmentAnnotationElement(parameters) {\n          var _this68$linkService$e;\n          var _this68;\n          _classCallCheck(this, FileAttachmentAnnotationElement);\n          _this68 = _callSuper(this, FileAttachmentAnnotationElement, [parameters, {\n            isRenderable: true\n          }]);\n          var _this68$data$file = _this68.data.file,\n            filename = _this68$data$file.filename,\n            content = _this68$data$file.content;\n          _this68.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          _this68.content = content;\n          (_this68$linkService$e = _this68.linkService.eventBus) === null || _this68$linkService$e === void 0 ? void 0 : _this68$linkService$e.dispatch(\"fileattachmentannotation\", {\n            source: _assertThisInitialized(_this68),\n            filename: filename,\n            content: content\n          });\n          return _this68;\n        }\n        _createClass(FileAttachmentAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var _this$data$titleObj, _this$data$contentsOb;\n            this.container.className = \"fileAttachmentAnnotation\";\n            var trigger = document.createElement(\"div\");\n            trigger.className = \"popupTriggerArea\";\n            trigger.addEventListener(\"dblclick\", this._download.bind(this));\n            if (!this.data.hasPopup && ((_this$data$titleObj = this.data.titleObj) !== null && _this$data$titleObj !== void 0 && _this$data$titleObj.str || (_this$data$contentsOb = this.data.contentsObj) !== null && _this$data$contentsOb !== void 0 && _this$data$contentsOb.str || this.data.richText)) {\n              this._createPopup(trigger, this.data);\n            }\n            this.container.append(trigger);\n            return this.container;\n          }\n        }, {\n          key: \"_download\",\n          value: function _download() {\n            var _this$downloadManager;\n            (_this$downloadManager = this.downloadManager) === null || _this$downloadManager === void 0 ? void 0 : _this$downloadManager.openOrDownloadData(this.container, this.content, this.filename);\n          }\n        }]);\n        return FileAttachmentAnnotationElement;\n      }(AnnotationElement);\n      var AnnotationLayer = /*#__PURE__*/function () {\n        function AnnotationLayer() {\n          _classCallCheck(this, AnnotationLayer);\n        }\n        _createClass(AnnotationLayer, null, [{\n          key: \"render\",\n          value: function render(parameters) {\n            var annotations = parameters.annotations,\n              div = parameters.div,\n              viewport = parameters.viewport,\n              accessibilityManager = parameters.accessibilityManager;\n            _assertClassBrand(AnnotationLayer, this, _setDimensions).call(this, div, viewport);\n            var zIndex = 0;\n            var _iterator109 = _createForOfIteratorHelper(annotations),\n              _step109;\n            try {\n              for (_iterator109.s(); !(_step109 = _iterator109.n()).done;) {\n                var data = _step109.value;\n                if (data.annotationType !== _util.AnnotationType.POPUP) {\n                  var _getRectDims8 = getRectDims(data.rect),\n                    width = _getRectDims8.width,\n                    height = _getRectDims8.height;\n                  if (width <= 0 || height <= 0) {\n                    continue;\n                  }\n                }\n                var element = AnnotationElementFactory.create({\n                  data: data,\n                  layer: div,\n                  page: parameters.page,\n                  viewport: viewport,\n                  linkService: parameters.linkService,\n                  downloadManager: parameters.downloadManager,\n                  imageResourcesPath: parameters.imageResourcesPath || \"\",\n                  renderForms: parameters.renderForms !== false,\n                  svgFactory: new _display_utils.DOMSVGFactory(),\n                  annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n                  enableScripting: parameters.enableScripting,\n                  hasJSActions: parameters.hasJSActions,\n                  fieldObjects: parameters.fieldObjects,\n                  mouseState: parameters.mouseState || {\n                    isDown: false\n                  }\n                });\n                if (element.isRenderable) {\n                  var rendered = element.render();\n                  if (data.hidden) {\n                    rendered.style.visibility = \"hidden\";\n                  }\n                  if (Array.isArray(rendered)) {\n                    var _iterator110 = _createForOfIteratorHelper(rendered),\n                      _step110;\n                    try {\n                      for (_iterator110.s(); !(_step110 = _iterator110.n()).done;) {\n                        var renderedElement = _step110.value;\n                        renderedElement.style.zIndex = zIndex++;\n                        _appendElement.call(AnnotationLayer, renderedElement, data.id, div, accessibilityManager);\n                      }\n                    } catch (err) {\n                      _iterator110.e(err);\n                    } finally {\n                      _iterator110.f();\n                    }\n                  } else {\n                    rendered.style.zIndex = zIndex++;\n                    if (element instanceof PopupAnnotationElement) {\n                      div.prepend(rendered);\n                    } else {\n                      _appendElement.call(AnnotationLayer, rendered, data.id, div, accessibilityManager);\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator109.e(err);\n            } finally {\n              _iterator109.f();\n            }\n            _assertClassBrand(AnnotationLayer, this, _setAnnotationCanvasMap).call(this, div, parameters.annotationCanvasMap);\n          }\n        }, {\n          key: \"update\",\n          value: function update(parameters) {\n            var annotationCanvasMap = parameters.annotationCanvasMap,\n              div = parameters.div,\n              viewport = parameters.viewport;\n            _assertClassBrand(AnnotationLayer, this, _setDimensions).call(this, div, viewport);\n            _assertClassBrand(AnnotationLayer, this, _setAnnotationCanvasMap).call(this, div, annotationCanvasMap);\n            div.hidden = false;\n          }\n        }]);\n        return AnnotationLayer;\n      }();\n      function _appendElement(element, id, div, accessibilityManager) {\n        var contentElement = element.firstChild || element;\n        contentElement.id = \"\".concat(_display_utils.AnnotationPrefix).concat(id);\n        div.append(element);\n        accessibilityManager === null || accessibilityManager === void 0 ? void 0 : accessibilityManager.moveElementInDOM(div, element, contentElement, false);\n      }\n      function _setDimensions(div, _ref55) {\n        var width = _ref55.width,\n          height = _ref55.height,\n          rotation = _ref55.rotation;\n        var style = div.style;\n        var flipOrientation = rotation % 180 !== 0,\n          widthStr = Math.floor(width) + \"px\",\n          heightStr = Math.floor(height) + \"px\";\n        style.width = flipOrientation ? heightStr : widthStr;\n        style.height = flipOrientation ? widthStr : heightStr;\n        div.setAttribute(\"data-main-rotation\", rotation);\n      }\n      function _setAnnotationCanvasMap(div, annotationCanvasMap) {\n        if (!annotationCanvasMap) {\n          return;\n        }\n        var _iterator111 = _createForOfIteratorHelper(annotationCanvasMap),\n          _step111;\n        try {\n          for (_iterator111.s(); !(_step111 = _iterator111.n()).done;) {\n            var _step111$value = _slicedToArray(_step111.value, 2),\n              id = _step111$value[0],\n              canvas = _step111$value[1];\n            var element = div.querySelector(\"[data-annotation-id=\\\"\".concat(id, \"\\\"]\"));\n            if (!element) {\n              continue;\n            }\n            var firstChild = element.firstChild;\n            if (!firstChild) {\n              element.append(canvas);\n            } else if (firstChild.nodeName === \"CANVAS\") {\n              firstChild.replaceWith(canvas);\n            } else {\n              firstChild.before(canvas);\n            }\n          }\n        } catch (err) {\n          _iterator111.e(err);\n        } finally {\n          _iterator111.f();\n        }\n        annotationCanvasMap.clear();\n      }\n      exports.AnnotationLayer = AnnotationLayer;\n\n      /***/\n    }), ( /* 28 */\n    /***/function (__unused_webpack_module, exports) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ColorConverters = void 0;\n      function makeColorComp(n) {\n        return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n      }\n      var ColorConverters = /*#__PURE__*/function () {\n        function ColorConverters() {\n          _classCallCheck(this, ColorConverters);\n        }\n        _createClass(ColorConverters, null, [{\n          key: \"CMYK_G\",\n          value: function CMYK_G(_ref56) {\n            var _ref57 = _slicedToArray(_ref56, 4),\n              c = _ref57[0],\n              y = _ref57[1],\n              m = _ref57[2],\n              k = _ref57[3];\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n          }\n        }, {\n          key: \"G_CMYK\",\n          value: function G_CMYK(_ref58) {\n            var _ref59 = _slicedToArray(_ref58, 1),\n              g = _ref59[0];\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n          }\n        }, {\n          key: \"G_RGB\",\n          value: function G_RGB(_ref60) {\n            var _ref61 = _slicedToArray(_ref60, 1),\n              g = _ref61[0];\n            return [\"RGB\", g, g, g];\n          }\n        }, {\n          key: \"G_HTML\",\n          value: function G_HTML(_ref62) {\n            var _ref63 = _slicedToArray(_ref62, 1),\n              g = _ref63[0];\n            var G = makeColorComp(g);\n            return \"#\".concat(G).concat(G).concat(G);\n          }\n        }, {\n          key: \"RGB_G\",\n          value: function RGB_G(_ref64) {\n            var _ref65 = _slicedToArray(_ref64, 3),\n              r = _ref65[0],\n              g = _ref65[1],\n              b = _ref65[2];\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n          }\n        }, {\n          key: \"RGB_HTML\",\n          value: function RGB_HTML(_ref66) {\n            var _ref67 = _slicedToArray(_ref66, 3),\n              r = _ref67[0],\n              g = _ref67[1],\n              b = _ref67[2];\n            var R = makeColorComp(r);\n            var G = makeColorComp(g);\n            var B = makeColorComp(b);\n            return \"#\".concat(R).concat(G).concat(B);\n          }\n        }, {\n          key: \"T_HTML\",\n          value: function T_HTML() {\n            return \"#00000000\";\n          }\n        }, {\n          key: \"CMYK_RGB\",\n          value: function CMYK_RGB(_ref68) {\n            var _ref69 = _slicedToArray(_ref68, 4),\n              c = _ref69[0],\n              y = _ref69[1],\n              m = _ref69[2],\n              k = _ref69[3];\n            return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n          }\n        }, {\n          key: \"CMYK_HTML\",\n          value: function CMYK_HTML(components) {\n            var rgb = this.CMYK_RGB(components).slice(1);\n            return this.RGB_HTML(rgb);\n          }\n        }, {\n          key: \"RGB_CMYK\",\n          value: function RGB_CMYK(_ref70) {\n            var _ref71 = _slicedToArray(_ref70, 3),\n              r = _ref71[0],\n              g = _ref71[1],\n              b = _ref71[2];\n            var c = 1 - r;\n            var m = 1 - g;\n            var y = 1 - b;\n            var k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n          }\n        }]);\n        return ColorConverters;\n      }();\n      exports.ColorConverters = ColorConverters;\n\n      /***/\n    }), ( /* 29 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.XfaLayer = void 0;\n      var _xfa_text = __w_pdfjs_require__(20);\n      var XfaLayer = /*#__PURE__*/function () {\n        function XfaLayer() {\n          _classCallCheck(this, XfaLayer);\n        }\n        _createClass(XfaLayer, null, [{\n          key: \"setupStorage\",\n          value: function setupStorage(html, id, element, storage, intent) {\n            var storedData = storage.getValue(id, {\n              value: null\n            });\n            switch (element.name) {\n              case \"textarea\":\n                if (storedData.value !== null) {\n                  html.textContent = storedData.value;\n                }\n                if (intent === \"print\") {\n                  break;\n                }\n                html.addEventListener(\"input\", function (event) {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n                break;\n              case \"input\":\n                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                  if (storedData.value === element.attributes.xfaOn) {\n                    html.setAttribute(\"checked\", true);\n                  } else if (storedData.value === element.attributes.xfaOff) {\n                    html.removeAttribute(\"checked\");\n                  }\n                  if (intent === \"print\") {\n                    break;\n                  }\n                  html.addEventListener(\"change\", function (event) {\n                    storage.setValue(id, {\n                      value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                    });\n                  });\n                } else {\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n                  if (intent === \"print\") {\n                    break;\n                  }\n                  html.addEventListener(\"input\", function (event) {\n                    storage.setValue(id, {\n                      value: event.target.value\n                    });\n                  });\n                }\n                break;\n              case \"select\":\n                if (storedData.value !== null) {\n                  var _iterator112 = _createForOfIteratorHelper(element.children),\n                    _step112;\n                  try {\n                    for (_iterator112.s(); !(_step112 = _iterator112.n()).done;) {\n                      var option = _step112.value;\n                      if (option.attributes.value === storedData.value) {\n                        option.attributes.selected = true;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator112.e(err);\n                  } finally {\n                    _iterator112.f();\n                  }\n                }\n                html.addEventListener(\"input\", function (event) {\n                  var options = event.target.options;\n                  var value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                  storage.setValue(id, {\n                    value: value\n                  });\n                });\n                break;\n            }\n          }\n        }, {\n          key: \"setAttributes\",\n          value: function setAttributes(_ref72) {\n            var html = _ref72.html,\n              element = _ref72.element,\n              _ref72$storage = _ref72.storage,\n              storage = _ref72$storage === void 0 ? null : _ref72$storage,\n              intent = _ref72.intent,\n              linkService = _ref72.linkService;\n            var attributes = element.attributes;\n            var isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n            if (attributes.type === \"radio\") {\n              attributes.name = \"\".concat(attributes.name, \"-\").concat(intent);\n            }\n            for (var _i11 = 0, _Object$entries3 = Object.entries(attributes); _i11 < _Object$entries3.length; _i11++) {\n              var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i11], 2),\n                key = _Object$entries3$_i[0],\n                value = _Object$entries3$_i[1];\n              if (value === null || value === undefined) {\n                continue;\n              }\n              switch (key) {\n                case \"class\":\n                  if (value.length) {\n                    html.setAttribute(key, value.join(\" \"));\n                  }\n                  break;\n                case \"dataId\":\n                  break;\n                case \"id\":\n                  html.setAttribute(\"data-element-id\", value);\n                  break;\n                case \"style\":\n                  Object.assign(html.style, value);\n                  break;\n                case \"textContent\":\n                  html.textContent = value;\n                  break;\n                default:\n                  if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n                    html.setAttribute(key, value);\n                  }\n              }\n            }\n            if (isHTMLAnchorElement) {\n              linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n            }\n            if (storage && attributes.dataId) {\n              this.setupStorage(html, attributes.dataId, element, storage);\n            }\n          }\n        }, {\n          key: \"render\",\n          value: function render(parameters) {\n            var storage = parameters.annotationStorage;\n            var linkService = parameters.linkService;\n            var root = parameters.xfaHtml;\n            var intent = parameters.intent || \"display\";\n            var rootHtml = document.createElement(root.name);\n            if (root.attributes) {\n              this.setAttributes({\n                html: rootHtml,\n                element: root,\n                intent: intent,\n                linkService: linkService\n              });\n            }\n            var stack = [[root, -1, rootHtml]];\n            var rootDiv = parameters.div;\n            rootDiv.append(rootHtml);\n            if (parameters.viewport) {\n              var transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n              rootDiv.style.transform = transform;\n            }\n            if (intent !== \"richText\") {\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n            }\n            var textDivs = [];\n            while (stack.length > 0) {\n              var _child$attributes;\n              var _stack$at = stack.at(-1),\n                _stack$at2 = _slicedToArray(_stack$at, 3),\n                parent = _stack$at2[0],\n                i = _stack$at2[1],\n                html = _stack$at2[2];\n              if (i + 1 === parent.children.length) {\n                stack.pop();\n                continue;\n              }\n              var child = parent.children[++stack.at(-1)[1]];\n              if (child === null) {\n                continue;\n              }\n              var name = child.name;\n              if (name === \"#text\") {\n                var node = document.createTextNode(child.value);\n                textDivs.push(node);\n                html.append(node);\n                continue;\n              }\n              var childHtml = void 0;\n              if (child !== null && child !== void 0 && (_child$attributes = child.attributes) !== null && _child$attributes !== void 0 && _child$attributes.xmlns) {\n                childHtml = document.createElementNS(child.attributes.xmlns, name);\n              } else {\n                childHtml = document.createElement(name);\n              }\n              html.append(childHtml);\n              if (child.attributes) {\n                this.setAttributes({\n                  html: childHtml,\n                  element: child,\n                  storage: storage,\n                  intent: intent,\n                  linkService: linkService\n                });\n              }\n              if (child.children && child.children.length > 0) {\n                stack.push([child, -1, childHtml]);\n              } else if (child.value) {\n                var _node = document.createTextNode(child.value);\n                if (_xfa_text.XfaText.shouldBuildText(name)) {\n                  textDivs.push(_node);\n                }\n                childHtml.append(_node);\n              }\n            }\n            var _iterator113 = _createForOfIteratorHelper(rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")),\n              _step113;\n            try {\n              for (_iterator113.s(); !(_step113 = _iterator113.n()).done;) {\n                var el = _step113.value;\n                el.setAttribute(\"readOnly\", true);\n              }\n            } catch (err) {\n              _iterator113.e(err);\n            } finally {\n              _iterator113.f();\n            }\n            return {\n              textDivs: textDivs\n            };\n          }\n        }, {\n          key: \"update\",\n          value: function update(parameters) {\n            var transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n            parameters.div.style.transform = transform;\n            parameters.div.hidden = false;\n          }\n        }]);\n        return XfaLayer;\n      }();\n      exports.XfaLayer = XfaLayer;\n\n      /***/\n    }), ( /* 30 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.TextLayerRenderTask = void 0;\n      exports.renderTextLayer = renderTextLayer;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(8);\n      var MAX_TEXT_DIVS_TO_RENDER = 100000;\n      var DEFAULT_FONT_SIZE = 30;\n      var DEFAULT_FONT_ASCENT = 0.8;\n      var ascentCache = new Map();\n      var AllWhitespaceRegexp = /^\\s+$/g;\n      function getAscent(fontFamily, ctx) {\n        var cachedAscent = ascentCache.get(fontFamily);\n        if (cachedAscent) {\n          return cachedAscent;\n        }\n        ctx.save();\n        ctx.font = \"\".concat(DEFAULT_FONT_SIZE, \"px \").concat(fontFamily);\n        var metrics = ctx.measureText(\"\");\n        var ascent = metrics.fontBoundingBoxAscent;\n        var descent = Math.abs(metrics.fontBoundingBoxDescent);\n        if (ascent) {\n          ctx.restore();\n          var ratio = ascent / (ascent + descent);\n          ascentCache.set(fontFamily, ratio);\n          return ratio;\n        }\n        ctx.strokeStyle = \"red\";\n        ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n        ctx.strokeText(\"g\", 0, 0);\n        var pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n        descent = 0;\n        for (var i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n          if (pixels[i] > 0) {\n            descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n            break;\n          }\n        }\n        ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n        ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n        pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n        ascent = 0;\n        for (var _i12 = 0, ii = pixels.length; _i12 < ii; _i12 += 4) {\n          if (pixels[_i12] > 0) {\n            ascent = DEFAULT_FONT_SIZE - Math.floor(_i12 / 4 / DEFAULT_FONT_SIZE);\n            break;\n          }\n        }\n        ctx.restore();\n        if (ascent) {\n          var _ratio = ascent / (ascent + descent);\n          ascentCache.set(fontFamily, _ratio);\n          return _ratio;\n        }\n        ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n        return DEFAULT_FONT_ASCENT;\n      }\n      function appendText(task, geom, styles, ctx) {\n        var textDiv = document.createElement(\"span\");\n        var textDivProperties = task._enhanceTextSelection ? {\n          angle: 0,\n          canvasWidth: 0,\n          hasText: geom.str !== \"\",\n          hasEOL: geom.hasEOL,\n          originalTransform: null,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          scale: 1,\n          fontSize: 0\n        } : {\n          angle: 0,\n          canvasWidth: 0,\n          hasText: geom.str !== \"\",\n          hasEOL: geom.hasEOL,\n          fontSize: 0\n        };\n        task._textDivs.push(textDiv);\n        var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n        var angle = Math.atan2(tx[1], tx[0]);\n        var style = styles[geom.fontName];\n        if (style.vertical) {\n          angle += Math.PI / 2;\n        }\n        var fontHeight = Math.hypot(tx[2], tx[3]);\n        var fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n        var left, top;\n        if (angle === 0) {\n          left = tx[4];\n          top = tx[5] - fontAscent;\n        } else {\n          left = tx[4] + fontAscent * Math.sin(angle);\n          top = tx[5] - fontAscent * Math.cos(angle);\n        }\n        textDiv.style.left = \"\".concat(left, \"px\");\n        textDiv.style.top = \"\".concat(top, \"px\");\n        textDiv.style.fontSize = \"\".concat(fontHeight, \"px\");\n        textDiv.style.fontFamily = style.fontFamily;\n        textDivProperties.fontSize = fontHeight;\n        textDiv.setAttribute(\"role\", \"presentation\");\n        textDiv.textContent = geom.str;\n        textDiv.dir = geom.dir;\n        if (task._fontInspectorEnabled) {\n          textDiv.dataset.fontName = geom.fontName;\n        }\n        if (angle !== 0) {\n          textDivProperties.angle = angle * (180 / Math.PI);\n        }\n        var shouldScaleText = false;\n        if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\n          shouldScaleText = true;\n        } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n          var absScaleX = Math.abs(geom.transform[0]),\n            absScaleY = Math.abs(geom.transform[3]);\n          if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n            shouldScaleText = true;\n          }\n        }\n        if (shouldScaleText) {\n          if (style.vertical) {\n            textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n          } else {\n            textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n          }\n        }\n        task._textDivProperties.set(textDiv, textDivProperties);\n        if (task._textContentStream) {\n          task._layoutText(textDiv);\n        }\n        if (task._enhanceTextSelection && textDivProperties.hasText) {\n          var angleCos = 1,\n            angleSin = 0;\n          if (angle !== 0) {\n            angleCos = Math.cos(angle);\n            angleSin = Math.sin(angle);\n          }\n          var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n          var divHeight = fontHeight;\n          var m, b;\n          if (angle !== 0) {\n            m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n            b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n          } else {\n            b = [left, top, left + divWidth, top + divHeight];\n          }\n          task._bounds.push({\n            left: b[0],\n            top: b[1],\n            right: b[2],\n            bottom: b[3],\n            div: textDiv,\n            size: [divWidth, divHeight],\n            m: m\n          });\n        }\n      }\n      function render(task) {\n        if (task._canceled) {\n          return;\n        }\n        var textDivs = task._textDivs;\n        var capability = task._capability;\n        var textDivsLength = textDivs.length;\n        if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n          task._renderingDone = true;\n          capability.resolve();\n          return;\n        }\n        if (!task._textContentStream) {\n          for (var i = 0; i < textDivsLength; i++) {\n            task._layoutText(textDivs[i]);\n          }\n        }\n        task._renderingDone = true;\n        capability.resolve();\n      }\n      function findPositiveMin(ts, offset, count) {\n        var result = 0;\n        for (var i = 0; i < count; i++) {\n          var t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      }\n      function expand(task) {\n        var bounds = task._bounds;\n        var viewport = task._viewport;\n        var expanded = expandBounds(viewport.width, viewport.height, bounds);\n        for (var i = 0; i < expanded.length; i++) {\n          var div = bounds[i].div;\n          var divProperties = task._textDivProperties.get(div);\n          if (divProperties.angle === 0) {\n            divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n            divProperties.paddingTop = bounds[i].top - expanded[i].top;\n            divProperties.paddingRight = expanded[i].right - bounds[i].right;\n            divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n            task._textDivProperties.set(div, divProperties);\n            continue;\n          }\n          var e = expanded[i],\n            b = bounds[i];\n          var m = b.m,\n            c = m[0],\n            s = m[1];\n          var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n          var ts = new Float64Array(64);\n          for (var j = 0, jj = points.length; j < jj; j++) {\n            var t = _util.Util.applyTransform(points[j], m);\n            ts[j + 0] = c && (e.left - t[0]) / c;\n            ts[j + 4] = s && (e.top - t[1]) / s;\n            ts[j + 8] = c && (e.right - t[0]) / c;\n            ts[j + 12] = s && (e.bottom - t[1]) / s;\n            ts[j + 16] = s && (e.left - t[0]) / -s;\n            ts[j + 20] = c && (e.top - t[1]) / c;\n            ts[j + 24] = s && (e.right - t[0]) / -s;\n            ts[j + 28] = c && (e.bottom - t[1]) / c;\n            ts[j + 32] = c && (e.left - t[0]) / -c;\n            ts[j + 36] = s && (e.top - t[1]) / -s;\n            ts[j + 40] = c && (e.right - t[0]) / -c;\n            ts[j + 44] = s && (e.bottom - t[1]) / -s;\n            ts[j + 48] = s && (e.left - t[0]) / s;\n            ts[j + 52] = c && (e.top - t[1]) / -c;\n            ts[j + 56] = s && (e.right - t[0]) / s;\n            ts[j + 60] = c && (e.bottom - t[1]) / -c;\n          }\n          var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n          divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n          divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n          divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n          divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n          task._textDivProperties.set(div, divProperties);\n        }\n      }\n      function expandBounds(width, height, boxes) {\n        var bounds = boxes.map(function (box, i) {\n          return {\n            x1: box.left,\n            y1: box.top,\n            x2: box.right,\n            y2: box.bottom,\n            index: i,\n            x1New: undefined,\n            x2New: undefined\n          };\n        });\n        expandBoundsLTR(width, bounds);\n        var expanded = new Array(boxes.length);\n        var _iterator114 = _createForOfIteratorHelper(bounds),\n          _step114;\n        try {\n          for (_iterator114.s(); !(_step114 = _iterator114.n()).done;) {\n            var b = _step114.value;\n            var i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          }\n        } catch (err) {\n          _iterator114.e(err);\n        } finally {\n          _iterator114.f();\n        }\n        boxes.map(function (box, i) {\n          var e = expanded[i],\n            b = bounds[i];\n          b.x1 = box.top;\n          b.y1 = width - e.right;\n          b.x2 = box.bottom;\n          b.y2 = width - e.left;\n          b.index = i;\n          b.x1New = undefined;\n          b.x2New = undefined;\n        });\n        expandBoundsLTR(height, bounds);\n        var _iterator115 = _createForOfIteratorHelper(bounds),\n          _step115;\n        try {\n          for (_iterator115.s(); !(_step115 = _iterator115.n()).done;) {\n            var _b = _step115.value;\n            var _i13 = _b.index;\n            expanded[_i13].top = _b.x1New;\n            expanded[_i13].bottom = _b.x2New;\n          }\n        } catch (err) {\n          _iterator115.e(err);\n        } finally {\n          _iterator115.f();\n        }\n        return expanded;\n      }\n      function expandBoundsLTR(width, bounds) {\n        bounds.sort(function (a, b) {\n          return a.x1 - b.x1 || a.index - b.index;\n        });\n        var fakeBoundary = {\n          x1: -Infinity,\n          y1: -Infinity,\n          x2: 0,\n          y2: Infinity,\n          index: -1,\n          x1New: 0,\n          x2New: 0\n        };\n        var horizon = [{\n          start: -Infinity,\n          end: Infinity,\n          boundary: fakeBoundary\n        }];\n        var _iterator116 = _createForOfIteratorHelper(bounds),\n          _step116;\n        try {\n          for (_iterator116.s(); !(_step116 = _iterator116.n()).done;) {\n            var boundary = _step116.value;\n            var i = 0;\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n            var j = horizon.length - 1;\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n            var _horizonPart = void 0,\n              _affectedBoundary = void 0;\n            var q = void 0,\n              k = void 0,\n              maxXNew = -Infinity;\n            for (q = i; q <= j; q++) {\n              _horizonPart = horizon[q];\n              _affectedBoundary = _horizonPart.boundary;\n              var xNew = void 0;\n              if (_affectedBoundary.x2 > boundary.x1) {\n                xNew = _affectedBoundary.index > boundary.index ? _affectedBoundary.x1New : boundary.x1;\n              } else if (_affectedBoundary.x2New === undefined) {\n                xNew = (_affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = _affectedBoundary.x2New;\n              }\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n            boundary.x1New = maxXNew;\n            for (q = i; q <= j; q++) {\n              _horizonPart = horizon[q];\n              _affectedBoundary = _horizonPart.boundary;\n              if (_affectedBoundary.x2New === undefined) {\n                if (_affectedBoundary.x2 > boundary.x1) {\n                  if (_affectedBoundary.index > boundary.index) {\n                    _affectedBoundary.x2New = _affectedBoundary.x2;\n                  }\n                } else {\n                  _affectedBoundary.x2New = maxXNew;\n                }\n              } else if (_affectedBoundary.x2New > maxXNew) {\n                _affectedBoundary.x2New = Math.max(maxXNew, _affectedBoundary.x2);\n              }\n            }\n            var changedHorizon = [];\n            var lastBoundary = null;\n            for (q = i; q <= j; q++) {\n              _horizonPart = horizon[q];\n              _affectedBoundary = _horizonPart.boundary;\n              var useBoundary = _affectedBoundary.x2 > boundary.x2 ? _affectedBoundary : boundary;\n              if (lastBoundary === useBoundary) {\n                changedHorizon.at(-1).end = _horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: _horizonPart.start,\n                  end: _horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon.at(-1).end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n            for (q = i; q <= j; q++) {\n              _horizonPart = horizon[q];\n              _affectedBoundary = _horizonPart.boundary;\n              if (_affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n              var used = false;\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= _affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === _affectedBoundary;\n              }\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= _affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === _affectedBoundary;\n              }\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === _affectedBoundary;\n              }\n              if (!used) {\n                _affectedBoundary.x2New = maxXNew;\n              }\n            }\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          }\n        } catch (err) {\n          _iterator116.e(err);\n        } finally {\n          _iterator116.f();\n        }\n        for (var _i14 = 0, _horizon = horizon; _i14 < _horizon.length; _i14++) {\n          var horizonPart = _horizon[_i14];\n          var affectedBoundary = horizonPart.boundary;\n          if (affectedBoundary.x2New === undefined) {\n            affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n          }\n        }\n      }\n      var TextLayerRenderTask = /*#__PURE__*/function () {\n        function TextLayerRenderTask(_ref73) {\n          var _globalThis$FontInspe2,\n            _this69 = this;\n          var textContent = _ref73.textContent,\n            textContentStream = _ref73.textContentStream,\n            container = _ref73.container,\n            viewport = _ref73.viewport,\n            textDivs = _ref73.textDivs,\n            textContentItemsStr = _ref73.textContentItemsStr,\n            enhanceTextSelection = _ref73.enhanceTextSelection;\n          _classCallCheck(this, TextLayerRenderTask);\n          if (enhanceTextSelection) {\n            (0, _display_utils.deprecated)(\"The `enhanceTextSelection` functionality will be removed in the future.\");\n          }\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._document = container.ownerDocument;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!((_globalThis$FontInspe2 = globalThis.FontInspector) !== null && _globalThis$FontInspe2 !== void 0 && _globalThis$FontInspe2.enabled);\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n          this._devicePixelRatio = globalThis.devicePixelRatio || 1;\n          this._capability.promise.finally(function () {\n            if (!_this69._enhanceTextSelection) {\n              _this69._textDivProperties = null;\n            }\n            if (_this69._layoutTextCtx) {\n              _this69._layoutTextCtx.canvas.width = 0;\n              _this69._layoutTextCtx.canvas.height = 0;\n              _this69._layoutTextCtx = null;\n            }\n          }).catch(function () {});\n        }\n        _createClass(TextLayerRenderTask, [{\n          key: \"promise\",\n          get: function get() {\n            return this._capability.promise;\n          }\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            this._canceled = true;\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(function () {});\n              this._reader = null;\n            }\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          }\n        }, {\n          key: \"_processItems\",\n          value: function _processItems(items, styleCache) {\n            for (var i = 0, len = items.length; i < len; i++) {\n              if (items[i].str === undefined) {\n                if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\n                  var parent = this._container;\n                  this._container = document.createElement(\"span\");\n                  this._container.classList.add(\"markedContent\");\n                  if (items[i].id !== null) {\n                    this._container.setAttribute(\"id\", \"\".concat(items[i].id));\n                  }\n                  parent.append(this._container);\n                } else if (items[i].type === \"endMarkedContent\") {\n                  this._container = this._container.parentNode;\n                }\n                continue;\n              }\n              this._textContentItemsStr.push(items[i].str);\n              appendText(this, items[i], styleCache, this._layoutTextCtx);\n            }\n          }\n        }, {\n          key: \"_layoutText\",\n          value: function _layoutText(textDiv) {\n            var textDivProperties = this._textDivProperties.get(textDiv);\n            var transform = \"\";\n            if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n              var fontFamily = textDiv.style.fontFamily;\n              var fontSize = textDivProperties.fontSize;\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = \"\".concat(fontSize * this._devicePixelRatio, \"px \").concat(fontFamily);\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n              var _this$_layoutTextCtx$ = this._layoutTextCtx.measureText(textDiv.textContent),\n                width = _this$_layoutTextCtx$.width;\n              if (width > 0) {\n                var scale = this._devicePixelRatio * textDivProperties.canvasWidth / width;\n                if (this._enhanceTextSelection) {\n                  textDivProperties.scale = scale;\n                }\n                transform = \"scaleX(\".concat(scale, \")\");\n              }\n            }\n            if (textDivProperties.angle !== 0) {\n              transform = \"rotate(\".concat(textDivProperties.angle, \"deg) \").concat(transform);\n            }\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n              textDiv.style.transform = transform;\n            }\n            if (textDivProperties.hasText) {\n              this._container.append(textDiv);\n            }\n            if (textDivProperties.hasEOL) {\n              var br = document.createElement(\"br\");\n              br.setAttribute(\"role\", \"presentation\");\n              this._container.append(br);\n            }\n          }\n        }, {\n          key: \"_render\",\n          value: function _render() {\n            var _this70 = this;\n            var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var capability = (0, _util.createPromiseCapability)();\n            var styleCache = Object.create(null);\n            var canvas = this._document.createElement(\"canvas\");\n            canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n            if (this._textContent) {\n              var textItems = this._textContent.items;\n              var textStyles = this._textContent.styles;\n              this._processItems(textItems, textStyles);\n              capability.resolve();\n            } else if (this._textContentStream) {\n              var pump = function pump() {\n                _this70._reader.read().then(function (_ref74) {\n                  var value = _ref74.value,\n                    done = _ref74.done;\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n                  Object.assign(styleCache, value.styles);\n                  _this70._processItems(value.items, styleCache);\n                  pump();\n                }, capability.reject);\n              };\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\" parameters specified.');\n            }\n            capability.promise.then(function () {\n              styleCache = null;\n              if (!timeout) {\n                render(_this70);\n              } else {\n                _this70._renderTimer = setTimeout(function () {\n                  render(_this70);\n                  _this70._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          }\n        }, {\n          key: \"expandTextDivs\",\n          value: function expandTextDivs() {\n            var expandDivs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n            var transformBuf = [],\n              paddingBuf = [];\n            for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n              var div = this._textDivs[i];\n              var divProps = this._textDivProperties.get(div);\n              if (!divProps.hasText) {\n                continue;\n              }\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingTop, \"px\"));\n                  transformBuf.push(\"translateY(\".concat(-divProps.paddingTop, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingRight / divProps.scale, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingBottom, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingLeft / divProps.scale, \"px\"));\n                  transformBuf.push(\"translateX(\".concat(-divProps.paddingLeft / divProps.scale, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                div.style.padding = paddingBuf.join(\" \");\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n        }]);\n        return TextLayerRenderTask;\n      }();\n      exports.TextLayerRenderTask = TextLayerRenderTask;\n      function renderTextLayer(renderParameters) {\n        var task = new TextLayerRenderTask({\n          textContent: renderParameters.textContent,\n          textContentStream: renderParameters.textContentStream,\n          container: renderParameters.container,\n          viewport: renderParameters.viewport,\n          textDivs: renderParameters.textDivs,\n          textContentItemsStr: renderParameters.textContentItemsStr,\n          enhanceTextSelection: renderParameters.enhanceTextSelection\n        });\n        task._render(renderParameters.timeout);\n        return task;\n      }\n\n      /***/\n    }), ( /* 31 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n      var _display_utils = __w_pdfjs_require__(8);\n      var _util = __w_pdfjs_require__(1);\n      var _is_node = __w_pdfjs_require__(3);\n      var SVGGraphics = /*#__PURE__*/_createClass(function SVGGraphics() {\n        _classCallCheck(this, SVGGraphics);\n        (0, _util.unreachable)(\"Not implemented: SVGGraphics\");\n      });\n      exports.SVGGraphics = SVGGraphics;\n      {\n        var opListToTree = function opListToTree(opList) {\n          var opTree = [];\n          var tmp = [];\n          var _iterator117 = _createForOfIteratorHelper(opList),\n            _step117;\n          try {\n            for (_iterator117.s(); !(_step117 = _iterator117.n()).done;) {\n              var opListElement = _step117.value;\n              if (opListElement.fn === \"save\") {\n                opTree.push({\n                  fnId: 92,\n                  fn: \"group\",\n                  items: []\n                });\n                tmp.push(opTree);\n                opTree = opTree.at(-1).items;\n                continue;\n              }\n              if (opListElement.fn === \"restore\") {\n                opTree = tmp.pop();\n              } else {\n                opTree.push(opListElement);\n              }\n            }\n          } catch (err) {\n            _iterator117.e(err);\n          } finally {\n            _iterator117.f();\n          }\n          return opTree;\n        };\n        var pf = function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n          var s = value.toFixed(10);\n          var i = s.length - 1;\n          if (s[i] !== \"0\") {\n            return s;\n          }\n          do {\n            i--;\n          } while (s[i] === \"0\");\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        };\n        var pm = function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n              return \"scale(\".concat(pf(m[0]), \" \").concat(pf(m[3]), \")\");\n            }\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              var a = Math.acos(m[0]) * 180 / Math.PI;\n              return \"rotate(\".concat(pf(a), \")\");\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return \"translate(\".concat(pf(m[4]), \" \").concat(pf(m[5]), \")\");\n            }\n          }\n          return \"matrix(\".concat(pf(m[0]), \" \").concat(pf(m[1]), \" \").concat(pf(m[2]), \" \").concat(pf(m[3]), \" \").concat(pf(m[4]), \" \") + \"\".concat(pf(m[5]), \")\");\n        };\n        var SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        var XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var createObjectURL = function createObjectURL(data) {\n          var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n            return URL.createObjectURL(new Blob([data], {\n              type: contentType\n            }));\n          }\n          var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          var buffer = \"data:\".concat(contentType, \";base64,\");\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\n            var b1 = data[i] & 0xff;\n            var b2 = data[i + 1] & 0xff;\n            var b3 = data[i + 2] & 0xff;\n            var d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n            var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n          return buffer;\n        };\n        var convertImgDataToPng = function () {\n          var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          var CHUNK_WRAPPER_SIZE = 12;\n          var crcTable = new Int32Array(256);\n          for (var i = 0; i < 256; i++) {\n            var c = i;\n            for (var h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n            crcTable[i] = c;\n          }\n          function crc32(data, start, end) {\n            var crc = -1;\n            for (var _i15 = start; _i15 < end; _i15++) {\n              var a = (crc ^ data[_i15]) & 0xff;\n              var b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n            return crc ^ -1;\n          }\n          function writePngChunk(type, body, data, offset) {\n            var p = offset;\n            var len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            var crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n          function adler32(data, start, end) {\n            var a = 1;\n            var b = 0;\n            for (var _i16 = start; _i16 < end; ++_i16) {\n              a = (a + (data[_i16] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n            return b << 16 | a;\n          }\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n            try {\n              var input;\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n              var output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n            return deflateSyncUncompressed(literals);\n          }\n          function deflateSyncUncompressed(literals) {\n            var len = literals.length;\n            var maxBlockLength = 0xffff;\n            var deflateBlocks = Math.ceil(len / maxBlockLength);\n            var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            var pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            var pos = 0;\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            var adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var bitDepth, colorType, lineSize;\n            var bytes = imgData.data;\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n              default:\n                throw new Error(\"invalid format\");\n            }\n            var literals = new Uint8Array((1 + lineSize) * height);\n            var offsetLiterals = 0,\n              offsetBytes = 0;\n            for (var y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n              for (var _y = 0; _y < height; _y++) {\n                offsetLiterals++;\n                for (var _i17 = 0; _i17 < lineSize; _i17++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n            var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            var idat = deflateSync(literals);\n            var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            var data = new Uint8Array(pngLength);\n            var offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return createObjectURL(data, \"image/png\", forceDataSchema);\n          }\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n        var SVGExtraState = /*#__PURE__*/function () {\n          function SVGExtraState() {\n            _classCallCheck(this, SVGExtraState);\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n          _createClass(SVGExtraState, [{\n            key: \"clone\",\n            value: function clone() {\n              return Object.create(this);\n            }\n          }, {\n            key: \"setCurrentPoint\",\n            value: function setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n          }]);\n          return SVGExtraState;\n        }();\n        var clipCount = 0;\n        var maskCount = 0;\n        var shadingCount = 0;\n        exports.SVGGraphics = SVGGraphics = /*#__PURE__*/function () {\n          function SVGGraphics(commonObjs, objs) {\n            var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            _classCallCheck(this, SVGGraphics);\n            (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n            for (var op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n          _createClass(SVGGraphics, [{\n            key: \"save\",\n            value: function save() {\n              this.transformStack.push(this.transformMatrix);\n              var old = this.current;\n              this.extraStack.push(old);\n              this.current = old.clone();\n            }\n          }, {\n            key: \"restore\",\n            value: function restore() {\n              this.transformMatrix = this.transformStack.pop();\n              this.current = this.extraStack.pop();\n              this.pendingClip = null;\n              this.tgrp = null;\n            }\n          }, {\n            key: \"group\",\n            value: function group(items) {\n              this.save();\n              this.executeOpTree(items);\n              this.restore();\n            }\n          }, {\n            key: \"loadDependencies\",\n            value: function loadDependencies(operatorList) {\n              var _this71 = this;\n              var fnArray = operatorList.fnArray;\n              var argsArray = operatorList.argsArray;\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                if (fnArray[i] !== _util.OPS.dependency) {\n                  continue;\n                }\n                var _iterator118 = _createForOfIteratorHelper(argsArray[i]),\n                  _step118;\n                try {\n                  var _loop3 = function _loop3() {\n                    var obj = _step118.value;\n                    var objsPool = obj.startsWith(\"g_\") ? _this71.commonObjs : _this71.objs;\n                    var promise = new Promise(function (resolve) {\n                      objsPool.get(obj, resolve);\n                    });\n                    _this71.current.dependencies.push(promise);\n                  };\n                  for (_iterator118.s(); !(_step118 = _iterator118.n()).done;) {\n                    _loop3();\n                  }\n                } catch (err) {\n                  _iterator118.e(err);\n                } finally {\n                  _iterator118.f();\n                }\n              }\n              return Promise.all(this.current.dependencies);\n            }\n          }, {\n            key: \"transform\",\n            value: function transform(a, b, c, d, e, f) {\n              var transformMatrix = [a, b, c, d, e, f];\n              this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n              this.tgrp = null;\n            }\n          }, {\n            key: \"getSVG\",\n            value: function getSVG(operatorList, viewport) {\n              var _this72 = this;\n              this.viewport = viewport;\n              var svgElement = this._initialize(viewport);\n              return this.loadDependencies(operatorList).then(function () {\n                _this72.transformMatrix = _util.IDENTITY_MATRIX;\n                _this72.executeOpTree(_this72.convertOpList(operatorList));\n                return svgElement;\n              });\n            }\n          }, {\n            key: \"convertOpList\",\n            value: function convertOpList(operatorList) {\n              var operatorIdMapping = this._operatorIdMapping;\n              var argsArray = operatorList.argsArray;\n              var fnArray = operatorList.fnArray;\n              var opList = [];\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                var fnId = fnArray[i];\n                opList.push({\n                  fnId: fnId,\n                  fn: operatorIdMapping[fnId],\n                  args: argsArray[i]\n                });\n              }\n              return opListToTree(opList);\n            }\n          }, {\n            key: \"executeOpTree\",\n            value: function executeOpTree(opTree) {\n              var _iterator119 = _createForOfIteratorHelper(opTree),\n                _step119;\n              try {\n                for (_iterator119.s(); !(_step119 = _iterator119.n()).done;) {\n                  var opTreeElement = _step119.value;\n                  var fn = opTreeElement.fn;\n                  var fnId = opTreeElement.fnId;\n                  var args = opTreeElement.args;\n                  switch (fnId | 0) {\n                    case _util.OPS.beginText:\n                      this.beginText();\n                      break;\n                    case _util.OPS.dependency:\n                      break;\n                    case _util.OPS.setLeading:\n                      this.setLeading(args);\n                      break;\n                    case _util.OPS.setLeadingMoveText:\n                      this.setLeadingMoveText(args[0], args[1]);\n                      break;\n                    case _util.OPS.setFont:\n                      this.setFont(args);\n                      break;\n                    case _util.OPS.showText:\n                      this.showText(args[0]);\n                      break;\n                    case _util.OPS.showSpacedText:\n                      this.showText(args[0]);\n                      break;\n                    case _util.OPS.endText:\n                      this.endText();\n                      break;\n                    case _util.OPS.moveText:\n                      this.moveText(args[0], args[1]);\n                      break;\n                    case _util.OPS.setCharSpacing:\n                      this.setCharSpacing(args[0]);\n                      break;\n                    case _util.OPS.setWordSpacing:\n                      this.setWordSpacing(args[0]);\n                      break;\n                    case _util.OPS.setHScale:\n                      this.setHScale(args[0]);\n                      break;\n                    case _util.OPS.setTextMatrix:\n                      this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n                    case _util.OPS.setTextRise:\n                      this.setTextRise(args[0]);\n                      break;\n                    case _util.OPS.setTextRenderingMode:\n                      this.setTextRenderingMode(args[0]);\n                      break;\n                    case _util.OPS.setLineWidth:\n                      this.setLineWidth(args[0]);\n                      break;\n                    case _util.OPS.setLineJoin:\n                      this.setLineJoin(args[0]);\n                      break;\n                    case _util.OPS.setLineCap:\n                      this.setLineCap(args[0]);\n                      break;\n                    case _util.OPS.setMiterLimit:\n                      this.setMiterLimit(args[0]);\n                      break;\n                    case _util.OPS.setFillRGBColor:\n                      this.setFillRGBColor(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.setStrokeRGBColor:\n                      this.setStrokeRGBColor(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.setStrokeColorN:\n                      this.setStrokeColorN(args);\n                      break;\n                    case _util.OPS.setFillColorN:\n                      this.setFillColorN(args);\n                      break;\n                    case _util.OPS.shadingFill:\n                      this.shadingFill(args[0]);\n                      break;\n                    case _util.OPS.setDash:\n                      this.setDash(args[0], args[1]);\n                      break;\n                    case _util.OPS.setRenderingIntent:\n                      this.setRenderingIntent(args[0]);\n                      break;\n                    case _util.OPS.setFlatness:\n                      this.setFlatness(args[0]);\n                      break;\n                    case _util.OPS.setGState:\n                      this.setGState(args[0]);\n                      break;\n                    case _util.OPS.fill:\n                      this.fill();\n                      break;\n                    case _util.OPS.eoFill:\n                      this.eoFill();\n                      break;\n                    case _util.OPS.stroke:\n                      this.stroke();\n                      break;\n                    case _util.OPS.fillStroke:\n                      this.fillStroke();\n                      break;\n                    case _util.OPS.eoFillStroke:\n                      this.eoFillStroke();\n                      break;\n                    case _util.OPS.clip:\n                      this.clip(\"nonzero\");\n                      break;\n                    case _util.OPS.eoClip:\n                      this.clip(\"evenodd\");\n                      break;\n                    case _util.OPS.paintSolidColorImageMask:\n                      this.paintSolidColorImageMask();\n                      break;\n                    case _util.OPS.paintImageXObject:\n                      this.paintImageXObject(args[0]);\n                      break;\n                    case _util.OPS.paintInlineImageXObject:\n                      this.paintInlineImageXObject(args[0]);\n                      break;\n                    case _util.OPS.paintImageMaskXObject:\n                      this.paintImageMaskXObject(args[0]);\n                      break;\n                    case _util.OPS.paintFormXObjectBegin:\n                      this.paintFormXObjectBegin(args[0], args[1]);\n                      break;\n                    case _util.OPS.paintFormXObjectEnd:\n                      this.paintFormXObjectEnd();\n                      break;\n                    case _util.OPS.closePath:\n                      this.closePath();\n                      break;\n                    case _util.OPS.closeStroke:\n                      this.closeStroke();\n                      break;\n                    case _util.OPS.closeFillStroke:\n                      this.closeFillStroke();\n                      break;\n                    case _util.OPS.closeEOFillStroke:\n                      this.closeEOFillStroke();\n                      break;\n                    case _util.OPS.nextLine:\n                      this.nextLine();\n                      break;\n                    case _util.OPS.transform:\n                      this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n                    case _util.OPS.constructPath:\n                      this.constructPath(args[0], args[1]);\n                      break;\n                    case _util.OPS.endPath:\n                      this.endPath();\n                      break;\n                    case 92:\n                      this.group(opTreeElement.items);\n                      break;\n                    default:\n                      (0, _util.warn)(\"Unimplemented operator \".concat(fn));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator119.e(err);\n              } finally {\n                _iterator119.f();\n              }\n            }\n          }, {\n            key: \"setWordSpacing\",\n            value: function setWordSpacing(wordSpacing) {\n              this.current.wordSpacing = wordSpacing;\n            }\n          }, {\n            key: \"setCharSpacing\",\n            value: function setCharSpacing(charSpacing) {\n              this.current.charSpacing = charSpacing;\n            }\n          }, {\n            key: \"nextLine\",\n            value: function nextLine() {\n              this.moveText(0, this.current.leading);\n            }\n          }, {\n            key: \"setTextMatrix\",\n            value: function setTextMatrix(a, b, c, d, e, f) {\n              var current = this.current;\n              current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n              current.textMatrixScale = Math.hypot(a, b);\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtElement.append(current.tspan);\n            }\n          }, {\n            key: \"beginText\",\n            value: function beginText() {\n              var current = this.current;\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.textMatrix = _util.IDENTITY_MATRIX;\n              current.lineMatrix = _util.IDENTITY_MATRIX;\n              current.textMatrixScale = 1;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n          }, {\n            key: \"moveText\",\n            value: function moveText(x, y) {\n              var current = this.current;\n              current.x = current.lineX += x;\n              current.y = current.lineY += y;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n          }, {\n            key: \"showText\",\n            value: function showText(glyphs) {\n              var current = this.current;\n              var font = current.font;\n              var fontSize = current.fontSize;\n              if (fontSize === 0) {\n                return;\n              }\n              var fontSizeScale = current.fontSizeScale;\n              var charSpacing = current.charSpacing;\n              var wordSpacing = current.wordSpacing;\n              var fontDirection = current.fontDirection;\n              var textHScale = current.textHScale * fontDirection;\n              var vertical = font.vertical;\n              var spacingDir = vertical ? 1 : -1;\n              var defaultVMetrics = font.defaultVMetrics;\n              var widthAdvanceScale = fontSize * current.fontMatrix[0];\n              var x = 0;\n              var _iterator120 = _createForOfIteratorHelper(glyphs),\n                _step120;\n              try {\n                for (_iterator120.s(); !(_step120 = _iterator120.n()).done;) {\n                  var glyph = _step120.value;\n                  if (glyph === null) {\n                    x += fontDirection * wordSpacing;\n                    continue;\n                  } else if (typeof glyph === \"number\") {\n                    x += spacingDir * glyph * fontSize / 1000;\n                    continue;\n                  }\n                  var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                  var character = glyph.fontChar;\n                  var scaledX = void 0,\n                    scaledY = void 0;\n                  var width = glyph.width;\n                  if (vertical) {\n                    var vx = void 0;\n                    var vmetric = glyph.vmetric || defaultVMetrics;\n                    vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                    vx = -vx * widthAdvanceScale;\n                    var vy = vmetric[2] * widthAdvanceScale;\n                    width = vmetric ? -vmetric[0] : width;\n                    scaledX = vx / fontSizeScale;\n                    scaledY = (x + vy) / fontSizeScale;\n                  } else {\n                    scaledX = x / fontSizeScale;\n                    scaledY = 0;\n                  }\n                  if (glyph.isInFont || font.missingFile) {\n                    current.xcoords.push(current.x + scaledX);\n                    if (vertical) {\n                      current.ycoords.push(-current.y + scaledY);\n                    }\n                    current.tspan.textContent += character;\n                  } else {}\n                  var charWidth = void 0;\n                  if (vertical) {\n                    charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                  } else {\n                    charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                  }\n                  x += charWidth;\n                }\n              } catch (err) {\n                _iterator120.e(err);\n              } finally {\n                _iterator120.f();\n              }\n              current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n              if (vertical) {\n                current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n              } else {\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              }\n              if (vertical) {\n                current.y -= x;\n              } else {\n                current.x += x * textHScale;\n              }\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n              }\n              if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n              }\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                  current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                }\n                if (current.fillAlpha < 1) {\n                  current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                }\n              } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n              } else {\n                current.tspan.setAttributeNS(null, \"fill\", \"none\");\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                var lineWidthScale = 1 / (current.textMatrixScale || 1);\n                this._setStrokeAttributes(current.tspan, lineWidthScale);\n              }\n              var textMatrix = current.textMatrix;\n              if (current.textRise !== 0) {\n                textMatrix = textMatrix.slice();\n                textMatrix[5] += current.textRise;\n              }\n              current.txtElement.setAttributeNS(null, \"transform\", \"\".concat(pm(textMatrix), \" scale(\").concat(pf(textHScale), \", -1)\"));\n              current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n              current.txtElement.append(current.tspan);\n              current.txtgrp.append(current.txtElement);\n              this._ensureTransformGroup().append(current.txtElement);\n            }\n          }, {\n            key: \"setLeadingMoveText\",\n            value: function setLeadingMoveText(x, y) {\n              this.setLeading(-y);\n              this.moveText(x, y);\n            }\n          }, {\n            key: \"addFontStyle\",\n            value: function addFontStyle(fontObj) {\n              if (!fontObj.data) {\n                throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n              }\n              if (!this.cssStyle) {\n                this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                this.defs.append(this.cssStyle);\n              }\n              var url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n              this.cssStyle.textContent += \"@font-face { font-family: \\\"\".concat(fontObj.loadedName, \"\\\";\") + \" src: url(\".concat(url, \"); }\\n\");\n            }\n          }, {\n            key: \"setFont\",\n            value: function setFont(details) {\n              var current = this.current;\n              var fontObj = this.commonObjs.get(details[0]);\n              var size = details[1];\n              current.font = fontObj;\n              if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                this.addFontStyle(fontObj);\n                this.embeddedFonts[fontObj.loadedName] = fontObj;\n              }\n              current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n              var bold = \"normal\";\n              if (fontObj.black) {\n                bold = \"900\";\n              } else if (fontObj.bold) {\n                bold = \"bold\";\n              }\n              var italic = fontObj.italic ? \"italic\" : \"normal\";\n              if (size < 0) {\n                size = -size;\n                current.fontDirection = -1;\n              } else {\n                current.fontDirection = 1;\n              }\n              current.fontSize = size;\n              current.fontFamily = fontObj.loadedName;\n              current.fontWeight = bold;\n              current.fontStyle = italic;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n          }, {\n            key: \"endText\",\n            value: function endText() {\n              var _current$txtElement;\n              var current = this.current;\n              if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && (_current$txtElement = current.txtElement) !== null && _current$txtElement !== void 0 && _current$txtElement.hasChildNodes()) {\n                current.element = current.txtElement;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"setLineWidth\",\n            value: function setLineWidth(width) {\n              if (width > 0) {\n                this.current.lineWidth = width;\n              }\n            }\n          }, {\n            key: \"setLineCap\",\n            value: function setLineCap(style) {\n              this.current.lineCap = LINE_CAP_STYLES[style];\n            }\n          }, {\n            key: \"setLineJoin\",\n            value: function setLineJoin(style) {\n              this.current.lineJoin = LINE_JOIN_STYLES[style];\n            }\n          }, {\n            key: \"setMiterLimit\",\n            value: function setMiterLimit(limit) {\n              this.current.miterLimit = limit;\n            }\n          }, {\n            key: \"setStrokeAlpha\",\n            value: function setStrokeAlpha(strokeAlpha) {\n              this.current.strokeAlpha = strokeAlpha;\n            }\n          }, {\n            key: \"setStrokeRGBColor\",\n            value: function setStrokeRGBColor(r, g, b) {\n              this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n            }\n          }, {\n            key: \"setFillAlpha\",\n            value: function setFillAlpha(fillAlpha) {\n              this.current.fillAlpha = fillAlpha;\n            }\n          }, {\n            key: \"setFillRGBColor\",\n            value: function setFillRGBColor(r, g, b) {\n              this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n              this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              this.current.xcoords = [];\n              this.current.ycoords = [];\n            }\n          }, {\n            key: \"setStrokeColorN\",\n            value: function setStrokeColorN(args) {\n              this.current.strokeColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"setFillColorN\",\n            value: function setFillColorN(args) {\n              this.current.fillColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"shadingFill\",\n            value: function shadingFill(args) {\n              var width = this.viewport.width;\n              var height = this.viewport.height;\n              var inv = _util.Util.inverseTransform(this.transformMatrix);\n              var bl = _util.Util.applyTransform([0, 0], inv);\n              var br = _util.Util.applyTransform([0, height], inv);\n              var ul = _util.Util.applyTransform([width, 0], inv);\n              var ur = _util.Util.applyTransform([width, height], inv);\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", x0);\n              rect.setAttributeNS(null, \"y\", y0);\n              rect.setAttributeNS(null, \"width\", x1 - x0);\n              rect.setAttributeNS(null, \"height\", y1 - y0);\n              rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n              if (this.current.fillAlpha < 1) {\n                rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n              }\n              this._ensureTransformGroup().append(rect);\n            }\n          }, {\n            key: \"_makeColorN_Pattern\",\n            value: function _makeColorN_Pattern(args) {\n              if (args[0] === \"TilingPattern\") {\n                return this._makeTilingPattern(args);\n              }\n              return this._makeShadingPattern(args);\n            }\n          }, {\n            key: \"_makeTilingPattern\",\n            value: function _makeTilingPattern(args) {\n              var color = args[1];\n              var operatorList = args[2];\n              var matrix = args[3] || _util.IDENTITY_MATRIX;\n              var _args$ = _slicedToArray(args[4], 4),\n                x0 = _args$[0],\n                y0 = _args$[1],\n                x1 = _args$[2],\n                y1 = _args$[3];\n              var xstep = args[5];\n              var ystep = args[6];\n              var paintType = args[7];\n              var tilingId = \"shading\".concat(shadingCount++);\n              var _util$Util$normalizeR = _util.Util.normalizeRect([].concat(_toConsumableArray(_util.Util.applyTransform([x0, y0], matrix)), _toConsumableArray(_util.Util.applyTransform([x1, y1], matrix)))),\n                _util$Util$normalizeR2 = _slicedToArray(_util$Util$normalizeR, 4),\n                tx0 = _util$Util$normalizeR2[0],\n                ty0 = _util$Util$normalizeR2[1],\n                tx1 = _util$Util$normalizeR2[2],\n                ty1 = _util$Util$normalizeR2[3];\n              var _util$Util$singularVa3 = _util.Util.singularValueDecompose2dScale(matrix),\n                _util$Util$singularVa4 = _slicedToArray(_util$Util$singularVa3, 2),\n                xscale = _util$Util$singularVa4[0],\n                yscale = _util$Util$singularVa4[1];\n              var txstep = xstep * xscale;\n              var tystep = ystep * yscale;\n              var tiling = this.svgFactory.createElement(\"svg:pattern\");\n              tiling.setAttributeNS(null, \"id\", tilingId);\n              tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n              tiling.setAttributeNS(null, \"width\", txstep);\n              tiling.setAttributeNS(null, \"height\", tystep);\n              tiling.setAttributeNS(null, \"x\", \"\".concat(tx0));\n              tiling.setAttributeNS(null, \"y\", \"\".concat(ty0));\n              var svg = this.svg;\n              var transformMatrix = this.transformMatrix;\n              var fillColor = this.current.fillColor;\n              var strokeColor = this.current.strokeColor;\n              var bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n              this.svg = bbox;\n              this.transformMatrix = matrix;\n              if (paintType === 2) {\n                var _util$Util5;\n                var cssColor = (_util$Util5 = _util.Util).makeHexColor.apply(_util$Util5, _toConsumableArray(color));\n                this.current.fillColor = cssColor;\n                this.current.strokeColor = cssColor;\n              }\n              this.executeOpTree(this.convertOpList(operatorList));\n              this.svg = svg;\n              this.transformMatrix = transformMatrix;\n              this.current.fillColor = fillColor;\n              this.current.strokeColor = strokeColor;\n              tiling.append(bbox.childNodes[0]);\n              this.defs.append(tiling);\n              return \"url(#\".concat(tilingId, \")\");\n            }\n          }, {\n            key: \"_makeShadingPattern\",\n            value: function _makeShadingPattern(args) {\n              if (typeof args === \"string\") {\n                args = this.objs.get(args);\n              }\n              switch (args[0]) {\n                case \"RadialAxial\":\n                  var shadingId = \"shading\".concat(shadingCount++);\n                  var colorStops = args[3];\n                  var gradient;\n                  switch (args[1]) {\n                    case \"axial\":\n                      var point0 = args[4];\n                      var point1 = args[5];\n                      gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"x1\", point0[0]);\n                      gradient.setAttributeNS(null, \"y1\", point0[1]);\n                      gradient.setAttributeNS(null, \"x2\", point1[0]);\n                      gradient.setAttributeNS(null, \"y2\", point1[1]);\n                      break;\n                    case \"radial\":\n                      var focalPoint = args[4];\n                      var circlePoint = args[5];\n                      var focalRadius = args[6];\n                      var circleRadius = args[7];\n                      gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                      gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                      gradient.setAttributeNS(null, \"r\", circleRadius);\n                      gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                      gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                      gradient.setAttributeNS(null, \"fr\", focalRadius);\n                      break;\n                    default:\n                      throw new Error(\"Unknown RadialAxial type: \".concat(args[1]));\n                  }\n                  var _iterator121 = _createForOfIteratorHelper(colorStops),\n                    _step121;\n                  try {\n                    for (_iterator121.s(); !(_step121 = _iterator121.n()).done;) {\n                      var colorStop = _step121.value;\n                      var stop = this.svgFactory.createElement(\"svg:stop\");\n                      stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                      stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                      gradient.append(stop);\n                    }\n                  } catch (err) {\n                    _iterator121.e(err);\n                  } finally {\n                    _iterator121.f();\n                  }\n                  this.defs.append(gradient);\n                  return \"url(#\".concat(shadingId, \")\");\n                case \"Mesh\":\n                  (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                  return null;\n                case \"Dummy\":\n                  return \"hotpink\";\n                default:\n                  throw new Error(\"Unknown IR type: \".concat(args[0]));\n              }\n            }\n          }, {\n            key: \"setDash\",\n            value: function setDash(dashArray, dashPhase) {\n              this.current.dashArray = dashArray;\n              this.current.dashPhase = dashPhase;\n            }\n          }, {\n            key: \"constructPath\",\n            value: function constructPath(ops, args) {\n              var current = this.current;\n              var x = current.x,\n                y = current.y;\n              var d = [];\n              var j = 0;\n              var _iterator122 = _createForOfIteratorHelper(ops),\n                _step122;\n              try {\n                for (_iterator122.s(); !(_step122 = _iterator122.n()).done;) {\n                  var op = _step122.value;\n                  switch (op | 0) {\n                    case _util.OPS.rectangle:\n                      x = args[j++];\n                      y = args[j++];\n                      var width = args[j++];\n                      var height = args[j++];\n                      var xw = x + width;\n                      var yh = y + height;\n                      d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                      break;\n                    case _util.OPS.moveTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"M\", pf(x), pf(y));\n                      break;\n                    case _util.OPS.lineTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"L\", pf(x), pf(y));\n                      break;\n                    case _util.OPS.curveTo:\n                      x = args[j + 4];\n                      y = args[j + 5];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                      j += 6;\n                      break;\n                    case _util.OPS.curveTo2:\n                      d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      j += 4;\n                      break;\n                    case _util.OPS.curveTo3:\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                      j += 4;\n                      break;\n                    case _util.OPS.closePath:\n                      d.push(\"Z\");\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator122.e(err);\n              } finally {\n                _iterator122.f();\n              }\n              d = d.join(\" \");\n              if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                d = current.path.getAttributeNS(null, \"d\") + d;\n              } else {\n                current.path = this.svgFactory.createElement(\"svg:path\");\n                this._ensureTransformGroup().append(current.path);\n              }\n              current.path.setAttributeNS(null, \"d\", d);\n              current.path.setAttributeNS(null, \"fill\", \"none\");\n              current.element = current.path;\n              current.setCurrentPoint(x, y);\n            }\n          }, {\n            key: \"endPath\",\n            value: function endPath() {\n              var current = this.current;\n              current.path = null;\n              if (!this.pendingClip) {\n                return;\n              }\n              if (!current.element) {\n                this.pendingClip = null;\n                return;\n              }\n              var clipId = \"clippath\".concat(clipCount++);\n              var clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n              clipPath.setAttributeNS(null, \"id\", clipId);\n              clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              var clipElement = current.element.cloneNode(true);\n              if (this.pendingClip === \"evenodd\") {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n              } else {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n              }\n              this.pendingClip = null;\n              clipPath.append(clipElement);\n              this.defs.append(clipPath);\n              if (current.activeClipUrl) {\n                current.clipGroup = null;\n                var _iterator123 = _createForOfIteratorHelper(this.extraStack),\n                  _step123;\n                try {\n                  for (_iterator123.s(); !(_step123 = _iterator123.n()).done;) {\n                    var prev = _step123.value;\n                    prev.clipGroup = null;\n                  }\n                } catch (err) {\n                  _iterator123.e(err);\n                } finally {\n                  _iterator123.f();\n                }\n                clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n              }\n              current.activeClipUrl = \"url(#\".concat(clipId, \")\");\n              this.tgrp = null;\n            }\n          }, {\n            key: \"clip\",\n            value: function clip(type) {\n              this.pendingClip = type;\n            }\n          }, {\n            key: \"closePath\",\n            value: function closePath() {\n              var current = this.current;\n              if (current.path) {\n                var d = \"\".concat(current.path.getAttributeNS(null, \"d\"), \"Z\");\n                current.path.setAttributeNS(null, \"d\", d);\n              }\n            }\n          }, {\n            key: \"setLeading\",\n            value: function setLeading(leading) {\n              this.current.leading = -leading;\n            }\n          }, {\n            key: \"setTextRise\",\n            value: function setTextRise(textRise) {\n              this.current.textRise = textRise;\n            }\n          }, {\n            key: \"setTextRenderingMode\",\n            value: function setTextRenderingMode(textRenderingMode) {\n              this.current.textRenderingMode = textRenderingMode;\n            }\n          }, {\n            key: \"setHScale\",\n            value: function setHScale(scale) {\n              this.current.textHScale = scale / 100;\n            }\n          }, {\n            key: \"setRenderingIntent\",\n            value: function setRenderingIntent(intent) {}\n          }, {\n            key: \"setFlatness\",\n            value: function setFlatness(flatness) {}\n          }, {\n            key: \"setGState\",\n            value: function setGState(states) {\n              var _iterator124 = _createForOfIteratorHelper(states),\n                _step124;\n              try {\n                for (_iterator124.s(); !(_step124 = _iterator124.n()).done;) {\n                  var _step124$value = _slicedToArray(_step124.value, 2),\n                    key = _step124$value[0],\n                    value = _step124$value[1];\n                  switch (key) {\n                    case \"LW\":\n                      this.setLineWidth(value);\n                      break;\n                    case \"LC\":\n                      this.setLineCap(value);\n                      break;\n                    case \"LJ\":\n                      this.setLineJoin(value);\n                      break;\n                    case \"ML\":\n                      this.setMiterLimit(value);\n                      break;\n                    case \"D\":\n                      this.setDash(value[0], value[1]);\n                      break;\n                    case \"RI\":\n                      this.setRenderingIntent(value);\n                      break;\n                    case \"FL\":\n                      this.setFlatness(value);\n                      break;\n                    case \"Font\":\n                      this.setFont(value);\n                      break;\n                    case \"CA\":\n                      this.setStrokeAlpha(value);\n                      break;\n                    case \"ca\":\n                      this.setFillAlpha(value);\n                      break;\n                    default:\n                      (0, _util.warn)(\"Unimplemented graphic state operator \".concat(key));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator124.e(err);\n              } finally {\n                _iterator124.f();\n              }\n            }\n          }, {\n            key: \"fill\",\n            value: function fill() {\n              var current = this.current;\n              if (current.element) {\n                current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"stroke\",\n            value: function stroke() {\n              var current = this.current;\n              if (current.element) {\n                this._setStrokeAttributes(current.element);\n                current.element.setAttributeNS(null, \"fill\", \"none\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"_setStrokeAttributes\",\n            value: function _setStrokeAttributes(element) {\n              var lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              var current = this.current;\n              var dashArray = current.dashArray;\n              if (lineWidthScale !== 1 && dashArray.length > 0) {\n                dashArray = dashArray.map(function (value) {\n                  return lineWidthScale * value;\n                });\n              }\n              element.setAttributeNS(null, \"stroke\", current.strokeColor);\n              element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n              element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n              element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n              element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n              element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n              element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n              element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n            }\n          }, {\n            key: \"eoFill\",\n            value: function eoFill() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n              this.fill();\n            }\n          }, {\n            key: \"fillStroke\",\n            value: function fillStroke() {\n              this.stroke();\n              this.fill();\n            }\n          }, {\n            key: \"eoFillStroke\",\n            value: function eoFillStroke() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeStroke\",\n            value: function closeStroke() {\n              this.closePath();\n              this.stroke();\n            }\n          }, {\n            key: \"closeFillStroke\",\n            value: function closeFillStroke() {\n              this.closePath();\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeEOFillStroke\",\n            value: function closeEOFillStroke() {\n              this.closePath();\n              this.eoFillStroke();\n            }\n          }, {\n            key: \"paintSolidColorImageMask\",\n            value: function paintSolidColorImageMask() {\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", \"1px\");\n              rect.setAttributeNS(null, \"height\", \"1px\");\n              rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n              this._ensureTransformGroup().append(rect);\n            }\n          }, {\n            key: \"paintImageXObject\",\n            value: function paintImageXObject(objId) {\n              var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n              if (!imgData) {\n                (0, _util.warn)(\"Dependent image with object ID \".concat(objId, \" is not ready yet\"));\n                return;\n              }\n              this.paintInlineImageXObject(imgData);\n            }\n          }, {\n            key: \"paintInlineImageXObject\",\n            value: function paintInlineImageXObject(imgData, mask) {\n              var width = imgData.width;\n              var height = imgData.height;\n              var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n              var cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", \"0\");\n              cliprect.setAttributeNS(null, \"y\", \"0\");\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              var imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-height));\n              imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n              imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n              imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / width), \" \").concat(pf(-1 / height), \")\"));\n              if (mask) {\n                mask.append(imgEl);\n              } else {\n                this._ensureTransformGroup().append(imgEl);\n              }\n            }\n          }, {\n            key: \"paintImageMaskXObject\",\n            value: function paintImageMaskXObject(imgData) {\n              var current = this.current;\n              var width = imgData.width;\n              var height = imgData.height;\n              var fillColor = current.fillColor;\n              current.maskId = \"mask\".concat(maskCount++);\n              var mask = this.svgFactory.createElement(\"svg:mask\");\n              mask.setAttributeNS(null, \"id\", current.maskId);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", pf(width));\n              rect.setAttributeNS(null, \"height\", pf(height));\n              rect.setAttributeNS(null, \"fill\", fillColor);\n              rect.setAttributeNS(null, \"mask\", \"url(#\".concat(current.maskId, \")\"));\n              this.defs.append(mask);\n              this._ensureTransformGroup().append(rect);\n              this.paintInlineImageXObject(imgData, mask);\n            }\n          }, {\n            key: \"paintFormXObjectBegin\",\n            value: function paintFormXObjectBegin(matrix, bbox) {\n              if (Array.isArray(matrix) && matrix.length === 6) {\n                this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n              }\n              if (bbox) {\n                var width = bbox[2] - bbox[0];\n                var height = bbox[3] - bbox[1];\n                var cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"paintFormXObjectEnd\",\n            value: function paintFormXObjectEnd() {}\n          }, {\n            key: \"_initialize\",\n            value: function _initialize(viewport) {\n              var svg = this.svgFactory.create(viewport.width, viewport.height);\n              var definitions = this.svgFactory.createElement(\"svg:defs\");\n              svg.append(definitions);\n              this.defs = definitions;\n              var rootGroup = this.svgFactory.createElement(\"svg:g\");\n              rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n              svg.append(rootGroup);\n              this.svg = rootGroup;\n              return svg;\n            }\n          }, {\n            key: \"_ensureClipGroup\",\n            value: function _ensureClipGroup() {\n              if (!this.current.clipGroup) {\n                var clipGroup = this.svgFactory.createElement(\"svg:g\");\n                clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                this.svg.append(clipGroup);\n                this.current.clipGroup = clipGroup;\n              }\n              return this.current.clipGroup;\n            }\n          }, {\n            key: \"_ensureTransformGroup\",\n            value: function _ensureTransformGroup() {\n              if (!this.tgrp) {\n                this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n                if (this.current.activeClipUrl) {\n                  this._ensureClipGroup().append(this.tgrp);\n                } else {\n                  this.svg.append(this.tgrp);\n                }\n              }\n              return this.tgrp;\n            }\n          }]);\n          return SVGGraphics;\n        }();\n      }\n\n      /***/\n    }), ( /* 32 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(33);\n      ;\n      var fs = require(\"fs\");\n      var http = require(\"http\");\n      var https = require(\"https\");\n      var url = require(\"url\");\n      var fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n      function parseUrl(sourceUrl) {\n        var parsedUrl = url.parse(sourceUrl);\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(\"file:///\".concat(sourceUrl));\n        }\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n        return parsedUrl;\n      }\n      var PDFNodeStream = /*#__PURE__*/function () {\n        function PDFNodeStream(source) {\n          _classCallCheck(this, PDFNodeStream);\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFNodeStream, [{\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            var _this$_fullRequestRea3, _this$_fullRequestRea4;\n            return (_this$_fullRequestRea3 = (_this$_fullRequestRea4 = this._fullRequestReader) === null || _this$_fullRequestRea4 === void 0 ? void 0 : _this$_fullRequestRea4._loaded) !== null && _this$_fullRequestRea3 !== void 0 ? _this$_fullRequestRea3 : 0;\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n            this._rangeRequestReaders.push(rangeReader);\n            return rangeReader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var _iterator125 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),\n              _step125;\n            try {\n              for (_iterator125.s(); !(_step125 = _iterator125.n()).done;) {\n                var reader = _step125.value;\n                reader.cancel(reason);\n              }\n            } catch (err) {\n              _iterator125.e(err);\n            } finally {\n              _iterator125.f();\n            }\n          }\n        }]);\n        return PDFNodeStream;\n      }();\n      exports.PDFNodeStream = PDFNodeStream;\n      var BaseFullReader = /*#__PURE__*/function () {\n        function BaseFullReader(stream) {\n          _classCallCheck(this, BaseFullReader);\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          var source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n        _createClass(BaseFullReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n              var chunk, buffer;\n              return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    _context15.next = 2;\n                    return this._readCapability.promise;\n                  case 2:\n                    if (!this._done) {\n                      _context15.next = 4;\n                      break;\n                    }\n                    return _context15.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 4:\n                    if (!this._storedError) {\n                      _context15.next = 6;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 6:\n                    chunk = this._readableStream.read();\n                    if (!(chunk === null)) {\n                      _context15.next = 10;\n                      break;\n                    }\n                    this._readCapability = (0, _util.createPromiseCapability)();\n                    return _context15.abrupt(\"return\", this.read());\n                  case 10:\n                    this._loaded += chunk.length;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded,\n                        total: this._contentLength\n                      });\n                    }\n                    buffer = new Uint8Array(chunk).buffer;\n                    return _context15.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 14:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15, this);\n            }));\n            function read() {\n              return _read3.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this73 = this;\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this73._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this73._done = true;\n              _this73._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this73._error(reason);\n            });\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }]);\n        return BaseFullReader;\n      }();\n      var BaseRangeReader = /*#__PURE__*/function () {\n        function BaseRangeReader(stream) {\n          _classCallCheck(this, BaseRangeReader);\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          var source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n        _createClass(BaseRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n              var chunk, buffer;\n              return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n                while (1) switch (_context16.prev = _context16.next) {\n                  case 0:\n                    _context16.next = 2;\n                    return this._readCapability.promise;\n                  case 2:\n                    if (!this._done) {\n                      _context16.next = 4;\n                      break;\n                    }\n                    return _context16.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 4:\n                    if (!this._storedError) {\n                      _context16.next = 6;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 6:\n                    chunk = this._readableStream.read();\n                    if (!(chunk === null)) {\n                      _context16.next = 10;\n                      break;\n                    }\n                    this._readCapability = (0, _util.createPromiseCapability)();\n                    return _context16.abrupt(\"return\", this.read());\n                  case 10:\n                    this._loaded += chunk.length;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded\n                      });\n                    }\n                    buffer = new Uint8Array(chunk).buffer;\n                    return _context16.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 14:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }, _callee16, this);\n            }));\n            function read() {\n              return _read4.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this74 = this;\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this74._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this74._done = true;\n              _this74._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this74._error(reason);\n            });\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }]);\n        return BaseRangeReader;\n      }();\n      function createRequestOptions(parsedUrl, headers) {\n        return {\n          protocol: parsedUrl.protocol,\n          auth: parsedUrl.auth,\n          host: parsedUrl.hostname,\n          port: parsedUrl.port,\n          path: parsedUrl.path,\n          method: \"GET\",\n          headers: headers\n        };\n      }\n      var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {\n        _inherits(PDFNodeStreamFullReader, _BaseFullReader);\n        function PDFNodeStreamFullReader(stream) {\n          var _this75;\n          _classCallCheck(this, PDFNodeStreamFullReader);\n          _this75 = _callSuper(this, PDFNodeStreamFullReader, [stream]);\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this75._url, \"\\\".\"));\n              _this75._storedError = error;\n              _this75._headersCapability.reject(error);\n              return;\n            }\n            _this75._headersCapability.resolve();\n            _this75._setReadableStream(response);\n            var getResponseHeader = function getResponseHeader(name) {\n              return _this75._readableStream.headers[name.toLowerCase()];\n            };\n            var _ref75 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: _this75._rangeChunkSize,\n                disableRange: _this75._disableRange\n              }),\n              allowRangeRequests = _ref75.allowRangeRequests,\n              suggestedLength = _ref75.suggestedLength;\n            _this75._isRangeSupported = allowRangeRequests;\n            _this75._contentLength = suggestedLength || _this75._contentLength;\n            _this75._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n          _this75._request = null;\n          if (_this75._url.protocol === \"http:\") {\n            _this75._request = http.request(createRequestOptions(_this75._url, stream.httpHeaders), handleResponse);\n          } else {\n            _this75._request = https.request(createRequestOptions(_this75._url, stream.httpHeaders), handleResponse);\n          }\n          _this75._request.on(\"error\", function (reason) {\n            _this75._storedError = reason;\n            _this75._headersCapability.reject(reason);\n          });\n          _this75._request.end();\n          return _this75;\n        }\n        return _createClass(PDFNodeStreamFullReader);\n      }(BaseFullReader);\n      var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {\n        _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\n        function PDFNodeStreamRangeReader(stream, start, end) {\n          var _this76;\n          _classCallCheck(this, PDFNodeStreamRangeReader);\n          _this76 = _callSuper(this, PDFNodeStreamRangeReader, [stream]);\n          _this76._httpHeaders = {};\n          for (var property in stream.httpHeaders) {\n            var value = stream.httpHeaders[property];\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n            _this76._httpHeaders[property] = value;\n          }\n          _this76._httpHeaders.Range = \"bytes=\".concat(start, \"-\").concat(end - 1);\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this76._url, \"\\\".\"));\n              _this76._storedError = error;\n              return;\n            }\n            _this76._setReadableStream(response);\n          };\n          _this76._request = null;\n          if (_this76._url.protocol === \"http:\") {\n            _this76._request = http.request(createRequestOptions(_this76._url, _this76._httpHeaders), handleResponse);\n          } else {\n            _this76._request = https.request(createRequestOptions(_this76._url, _this76._httpHeaders), handleResponse);\n          }\n          _this76._request.on(\"error\", function (reason) {\n            _this76._storedError = reason;\n          });\n          _this76._request.end();\n          return _this76;\n        }\n        return _createClass(PDFNodeStreamRangeReader);\n      }(BaseRangeReader);\n      var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {\n        _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\n        function PDFNodeStreamFsFullReader(stream) {\n          var _this77;\n          _classCallCheck(this, PDFNodeStreamFsFullReader);\n          _this77 = _callSuper(this, PDFNodeStreamFsFullReader, [stream]);\n          var path = decodeURIComponent(_this77._url.path);\n          if (fileUriRegex.test(_this77._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          fs.lstat(path, function (error, stat) {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(path, \"\\\".\"));\n              }\n              _this77._storedError = error;\n              _this77._headersCapability.reject(error);\n              return;\n            }\n            _this77._contentLength = stat.size;\n            _this77._setReadableStream(fs.createReadStream(path));\n            _this77._headersCapability.resolve();\n          });\n          return _this77;\n        }\n        return _createClass(PDFNodeStreamFsFullReader);\n      }(BaseFullReader);\n      var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {\n        _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\n        function PDFNodeStreamFsRangeReader(stream, start, end) {\n          var _this78;\n          _classCallCheck(this, PDFNodeStreamFsRangeReader);\n          _this78 = _callSuper(this, PDFNodeStreamFsRangeReader, [stream]);\n          var path = decodeURIComponent(_this78._url.path);\n          if (fileUriRegex.test(_this78._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          _this78._setReadableStream(fs.createReadStream(path, {\n            start: start,\n            end: end - 1\n          }));\n          return _this78;\n        }\n        return _createClass(PDFNodeStreamFsRangeReader);\n      }(BaseRangeReader);\n      /***/\n    }), ( /* 33 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n      var _util = __w_pdfjs_require__(1);\n      var _content_disposition = __w_pdfjs_require__(34);\n      var _display_utils = __w_pdfjs_require__(8);\n      function validateRangeRequestCapabilities(_ref76) {\n        var getResponseHeader = _ref76.getResponseHeader,\n          isHttp = _ref76.isHttp,\n          rangeChunkSize = _ref76.rangeChunkSize,\n          disableRange = _ref76.disableRange;\n        var returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        var length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n        returnValues.suggestedLength = length;\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n        var contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n      function extractFilenameFromHeader(getResponseHeader) {\n        var contentDisposition = getResponseHeader(\"Content-Disposition\");\n        if (contentDisposition) {\n          var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n          if ((0, _display_utils.isPdfFile)(filename)) {\n            return filename;\n          }\n        }\n        return null;\n      }\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n        return new _util.UnexpectedResponseException(\"Unexpected server response (\".concat(status, \") while retrieving PDF \\\"\").concat(url, \"\\\".\"), status);\n      }\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n\n      /***/\n    }), ( /* 34 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n      var _util = __w_pdfjs_require__(1);\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        var needsEncodingFixup = true;\n        var tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          var filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n        tmp = rfc2231getparam(contentDisposition);\n        if (tmp) {\n          var _filename = rfc2047decode(tmp);\n          return fixupEncoding(_filename);\n        }\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          var _filename2 = rfc2616unquote(tmp);\n          _filename2 = rfc2047decode(_filename2);\n          return fixupEncoding(_filename2);\n        }\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n            try {\n              var decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              var buffer = (0, _util.stringToBytes)(value);\n              value = decoder.decode(buffer);\n              needsEncodingFixup = false;\n            } catch (e) {}\n          }\n          return value;\n        }\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n          return value;\n        }\n        function rfc2231getparam(contentDispositionStr) {\n          var matches = [];\n          var match;\n          var iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n          while ((match = iter.exec(contentDispositionStr)) !== null) {\n            var _match2 = match,\n              _match3 = _slicedToArray(_match2, 4),\n              n = _match3[1],\n              quot = _match3[2],\n              part = _match3[3];\n            n = parseInt(n, 10);\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n              continue;\n            }\n            matches[n] = [quot, part];\n          }\n          var parts = [];\n          for (var _n = 0; _n < matches.length; ++_n) {\n            if (!(_n in matches)) {\n              break;\n            }\n            var _matches$_n = _slicedToArray(matches[_n], 2),\n              _quot = _matches$_n[0],\n              _part = _matches$_n[1];\n            _part = rfc2616unquote(_part);\n            if (_quot) {\n              _part = unescape(_part);\n              if (_n === 0) {\n                _part = rfc5987decode(_part);\n              }\n            }\n            parts.push(_part);\n          }\n          return parts.join(\"\");\n        }\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            var parts = value.slice(1).split('\\\\\"');\n            for (var i = 0; i < parts.length; ++i) {\n              var quotindex = parts[i].indexOf('\"');\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n            value = parts.join('\"');\n          }\n          return value;\n        }\n        function rfc5987decode(extvalue) {\n          var encodingend = extvalue.indexOf(\"'\");\n          if (encodingend === -1) {\n            return extvalue;\n          }\n          var encoding = extvalue.slice(0, encodingend);\n          var langvalue = extvalue.slice(encodingend + 1);\n          var value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n            try {\n              text = atob(text);\n            } catch (e) {}\n            return textdecode(charset, text);\n          });\n        }\n        return \"\";\n      }\n\n      /***/\n    }), ( /* 35 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(33);\n      ;\n      var OK_RESPONSE = 200;\n      var PARTIAL_CONTENT_RESPONSE = 206;\n      function getArrayBuffer(xhr) {\n        var data = xhr.response;\n        if (typeof data !== \"string\") {\n          return data;\n        }\n        var array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n      var NetworkManager = /*#__PURE__*/function () {\n        function NetworkManager(url) {\n          var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          _classCallCheck(this, NetworkManager);\n          this.url = url;\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n          this.withCredentials = args.withCredentials || false;\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n        _createClass(NetworkManager, [{\n          key: \"requestRange\",\n          value: function requestRange(begin, end, listeners) {\n            var args = {\n              begin: begin,\n              end: end\n            };\n            for (var prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n            return this.request(args);\n          }\n        }, {\n          key: \"requestFull\",\n          value: function requestFull(listeners) {\n            return this.request(listeners);\n          }\n        }, {\n          key: \"request\",\n          value: function request(args) {\n            var xhr = this.getXhr();\n            var xhrId = this.currXhrId++;\n            var pendingRequest = this.pendingRequests[xhrId] = {\n              xhr: xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n            for (var property in this.httpHeaders) {\n              var value = this.httpHeaders[property];\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n              xhr.setRequestHeader(property, value);\n            }\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", \"bytes=\".concat(args.begin, \"-\").concat(args.end - 1));\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n            xhr.responseType = \"arraybuffer\";\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n        }, {\n          key: \"onProgress\",\n          value: function onProgress(xhrId, evt) {\n            var _pendingRequest$onPro;\n            var pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            (_pendingRequest$onPro = pendingRequest.onProgress) === null || _pendingRequest$onPro === void 0 ? void 0 : _pendingRequest$onPro.call(pendingRequest, evt);\n          }\n        }, {\n          key: \"onStateChange\",\n          value: function onStateChange(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            var xhr = pendingRequest.xhr;\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n            if (xhr.readyState !== 4) {\n              return;\n            }\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n            delete this.pendingRequests[xhrId];\n            if (xhr.status === 0 && this.isHttp) {\n              var _pendingRequest$onErr;\n              (_pendingRequest$onErr = pendingRequest.onError) === null || _pendingRequest$onErr === void 0 ? void 0 : _pendingRequest$onErr.call(pendingRequest, xhr.status);\n              return;\n            }\n            var xhrStatus = xhr.status || OK_RESPONSE;\n            var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              var _pendingRequest$onErr2;\n              (_pendingRequest$onErr2 = pendingRequest.onError) === null || _pendingRequest$onErr2 === void 0 ? void 0 : _pendingRequest$onErr2.call(pendingRequest, xhr.status);\n              return;\n            }\n            var chunk = getArrayBuffer(xhr);\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              var rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk: chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk: chunk\n              });\n            } else {\n              var _pendingRequest$onErr3;\n              (_pendingRequest$onErr3 = pendingRequest.onError) === null || _pendingRequest$onErr3 === void 0 ? void 0 : _pendingRequest$onErr3.call(pendingRequest, xhr.status);\n            }\n          }\n        }, {\n          key: \"getRequestXhr\",\n          value: function getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n        }, {\n          key: \"isPendingRequest\",\n          value: function isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n        }, {\n          key: \"abortRequest\",\n          value: function abortRequest(xhrId) {\n            var xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n        }]);\n        return NetworkManager;\n      }();\n      var PDFNetworkStream = /*#__PURE__*/function () {\n        function PDFNetworkStream(source) {\n          _classCallCheck(this, PDFNetworkStream);\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFNetworkStream, [{\n          key: \"_onRangeRequestReaderClosed\",\n          value: function _onRangeRequestReaderClosed(reader) {\n            var i = this._rangeRequestReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            var _this$_fullRequestRea5;\n            (_this$_fullRequestRea5 = this._fullRequestReader) === null || _this$_fullRequestRea5 === void 0 ? void 0 : _this$_fullRequestRea5.cancel(reason);\n            var _iterator126 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),\n              _step126;\n            try {\n              for (_iterator126.s(); !(_step126 = _iterator126.n()).done;) {\n                var reader = _step126.value;\n                reader.cancel(reason);\n              }\n            } catch (err) {\n              _iterator126.e(err);\n            } finally {\n              _iterator126.f();\n            }\n          }\n        }]);\n        return PDFNetworkStream;\n      }();\n      exports.PDFNetworkStream = PDFNetworkStream;\n      var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamFullRequestReader(manager, source) {\n          _classCallCheck(this, PDFNetworkStreamFullRequestReader);\n          this._manager = manager;\n          var args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n        _createClass(PDFNetworkStreamFullRequestReader, [{\n          key: \"_onHeadersReceived\",\n          value: function _onHeadersReceived() {\n            var fullRequestXhrId = this._fullRequestId;\n            var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n            var getResponseHeader = function getResponseHeader(name) {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n            var _ref77 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: this._manager.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              }),\n              allowRangeRequests = _ref77.allowRangeRequests,\n              suggestedLength = _ref77.suggestedLength;\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n            this._headersReceivedCapability.resolve();\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(data) {\n            if (data) {\n              if (this._requests.length > 0) {\n                var requestCapability = this._requests.shift();\n                requestCapability.resolve({\n                  value: data.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(data.chunk);\n              }\n            }\n            this._done = true;\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n            var _iterator127 = _createForOfIteratorHelper(this._requests),\n              _step127;\n            try {\n              for (_iterator127.s(); !(_step127 = _iterator127.n()).done;) {\n                var _requestCapability = _step127.value;\n                _requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n            } catch (err) {\n              _iterator127.e(err);\n            } finally {\n              _iterator127.f();\n            }\n            this._requests.length = 0;\n          }\n        }, {\n          key: \"_onError\",\n          value: function _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n            this._headersReceivedCapability.reject(this._storedError);\n            var _iterator128 = _createForOfIteratorHelper(this._requests),\n              _step128;\n            try {\n              for (_iterator128.s(); !(_step128 = _iterator128.n()).done;) {\n                var requestCapability = _step128.value;\n                requestCapability.reject(this._storedError);\n              }\n            } catch (err) {\n              _iterator128.e(err);\n            } finally {\n              _iterator128.f();\n            }\n            this._requests.length = 0;\n            this._cachedChunks.length = 0;\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            var _this$onProgress;\n            (_this$onProgress = this.onProgress) === null || _this$onProgress === void 0 ? void 0 : _this$onProgress.call(this, {\n              loaded: evt.loaded,\n              total: evt.lengthComputable ? evt.total : this._contentLength\n            });\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReceivedCapability.promise;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                while (1) switch (_context17.prev = _context17.next) {\n                  case 0:\n                    if (!this._storedError) {\n                      _context17.next = 2;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 2:\n                    if (!(this._cachedChunks.length > 0)) {\n                      _context17.next = 5;\n                      break;\n                    }\n                    chunk = this._cachedChunks.shift();\n                    return _context17.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 5:\n                    if (!this._done) {\n                      _context17.next = 7;\n                      break;\n                    }\n                    return _context17.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 7:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context17.abrupt(\"return\", requestCapability.promise);\n                  case 10:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }, _callee17, this);\n            }));\n            function read() {\n              return _read5.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._headersReceivedCapability.reject(reason);\n            var _iterator129 = _createForOfIteratorHelper(this._requests),\n              _step129;\n            try {\n              for (_iterator129.s(); !(_step129 = _iterator129.n()).done;) {\n                var requestCapability = _step129.value;\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n            } catch (err) {\n              _iterator129.e(err);\n            } finally {\n              _iterator129.f();\n            }\n            this._requests.length = 0;\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n            this._fullRequestReader = null;\n          }\n        }]);\n        return PDFNetworkStreamFullRequestReader;\n      }();\n      var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n          _classCallCheck(this, PDFNetworkStreamRangeRequestReader);\n          this._manager = manager;\n          var args = {\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = manager.url;\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this._storedError = undefined;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n        _createClass(PDFNetworkStreamRangeRequestReader, [{\n          key: \"_close\",\n          value: function _close() {\n            var _this$onClosed;\n            (_this$onClosed = this.onClosed) === null || _this$onClosed === void 0 ? void 0 : _this$onClosed.call(this, this);\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(data) {\n            var chunk = data.chunk;\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n            this._done = true;\n            var _iterator130 = _createForOfIteratorHelper(this._requests),\n              _step130;\n            try {\n              for (_iterator130.s(); !(_step130 = _iterator130.n()).done;) {\n                var _requestCapability2 = _step130.value;\n                _requestCapability2.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n            } catch (err) {\n              _iterator130.e(err);\n            } finally {\n              _iterator130.f();\n            }\n            this._requests.length = 0;\n            this._close();\n          }\n        }, {\n          key: \"_onError\",\n          value: function _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n            var _iterator131 = _createForOfIteratorHelper(this._requests),\n              _step131;\n            try {\n              for (_iterator131.s(); !(_step131 = _iterator131.n()).done;) {\n                var requestCapability = _step131.value;\n                requestCapability.reject(this._storedError);\n              }\n            } catch (err) {\n              _iterator131.e(err);\n            } finally {\n              _iterator131.f();\n            }\n            this._requests.length = 0;\n            this._queuedChunk = null;\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (!this.isStreamingSupported) {\n              var _this$onProgress2;\n              (_this$onProgress2 = this.onProgress) === null || _this$onProgress2 === void 0 ? void 0 : _this$onProgress2.call(this, {\n                loaded: evt.loaded\n              });\n            }\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n                while (1) switch (_context18.prev = _context18.next) {\n                  case 0:\n                    if (!this._storedError) {\n                      _context18.next = 2;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 2:\n                    if (!(this._queuedChunk !== null)) {\n                      _context18.next = 6;\n                      break;\n                    }\n                    chunk = this._queuedChunk;\n                    this._queuedChunk = null;\n                    return _context18.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 6:\n                    if (!this._done) {\n                      _context18.next = 8;\n                      break;\n                    }\n                    return _context18.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 8:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context18.abrupt(\"return\", requestCapability.promise);\n                  case 11:\n                  case \"end\":\n                    return _context18.stop();\n                }\n              }, _callee18, this);\n            }));\n            function read() {\n              return _read6.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            var _iterator132 = _createForOfIteratorHelper(this._requests),\n              _step132;\n            try {\n              for (_iterator132.s(); !(_step132 = _iterator132.n()).done;) {\n                var requestCapability = _step132.value;\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n            } catch (err) {\n              _iterator132.e(err);\n            } finally {\n              _iterator132.f();\n            }\n            this._requests.length = 0;\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n            this._close();\n          }\n        }]);\n        return PDFNetworkStreamRangeRequestReader;\n      }();\n      /***/\n    }), ( /* 36 */\n    /***/function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(33);\n      ;\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers: headers,\n          signal: abortController.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n      function createHeaders(httpHeaders) {\n        var headers = new Headers();\n        for (var property in httpHeaders) {\n          var value = httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          headers.append(property, value);\n        }\n        return headers;\n      }\n      var PDFFetchStream = /*#__PURE__*/function () {\n        function PDFFetchStream(source) {\n          _classCallCheck(this, PDFFetchStream);\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFFetchStream, [{\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            var _this$_fullRequestRea6, _this$_fullRequestRea7;\n            return (_this$_fullRequestRea6 = (_this$_fullRequestRea7 = this._fullRequestReader) === null || _this$_fullRequestRea7 === void 0 ? void 0 : _this$_fullRequestRea7._loaded) !== null && _this$_fullRequestRea6 !== void 0 ? _this$_fullRequestRea6 : 0;\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var reader = new PDFFetchStreamRangeReader(this, begin, end);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var _iterator133 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),\n              _step133;\n            try {\n              for (_iterator133.s(); !(_step133 = _iterator133.n()).done;) {\n                var reader = _step133.value;\n                reader.cancel(reason);\n              }\n            } catch (err) {\n              _iterator133.e(err);\n            } finally {\n              _iterator133.f();\n            }\n          }\n        }]);\n        return PDFFetchStream;\n      }();\n      exports.PDFFetchStream = PDFFetchStream;\n      var PDFFetchStreamReader = /*#__PURE__*/function () {\n        function PDFFetchStreamReader(stream) {\n          var _this79 = this;\n          _classCallCheck(this, PDFFetchStreamReader);\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._abortController = new AbortController();\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            _this79._reader = response.body.getReader();\n            _this79._headersCapability.resolve();\n            var getResponseHeader = function getResponseHeader(name) {\n              return response.headers.get(name);\n            };\n            var _ref78 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: _this79._stream.isHttp,\n                rangeChunkSize: _this79._rangeChunkSize,\n                disableRange: _this79._disableRange\n              }),\n              allowRangeRequests = _ref78.allowRangeRequests,\n              suggestedLength = _ref78.suggestedLength;\n            _this79._isRangeSupported = allowRangeRequests;\n            _this79._contentLength = suggestedLength || _this79._contentLength;\n            _this79._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (!_this79._isStreamingSupported && _this79._isRangeSupported) {\n              _this79.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          }).catch(this._headersCapability.reject);\n          this.onProgress = null;\n        }\n        _createClass(PDFFetchStreamReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n              var _yield$this$_reader$r, value, done, buffer;\n              return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n                while (1) switch (_context19.prev = _context19.next) {\n                  case 0:\n                    _context19.next = 2;\n                    return this._headersCapability.promise;\n                  case 2:\n                    _context19.next = 4;\n                    return this._reader.read();\n                  case 4:\n                    _yield$this$_reader$r = _context19.sent;\n                    value = _yield$this$_reader$r.value;\n                    done = _yield$this$_reader$r.done;\n                    if (!done) {\n                      _context19.next = 9;\n                      break;\n                    }\n                    return _context19.abrupt(\"return\", {\n                      value: value,\n                      done: done\n                    });\n                  case 9:\n                    this._loaded += value.byteLength;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded,\n                        total: this._contentLength\n                      });\n                    }\n                    buffer = new Uint8Array(value).buffer;\n                    return _context19.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 13:\n                  case \"end\":\n                    return _context19.stop();\n                }\n              }, _callee19, this);\n            }));\n            function read() {\n              return _read7.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n            this._abortController.abort();\n          }\n        }]);\n        return PDFFetchStreamReader;\n      }();\n      var PDFFetchStreamRangeReader = /*#__PURE__*/function () {\n        function PDFFetchStreamRangeReader(stream, begin, end) {\n          var _this80 = this;\n          _classCallCheck(this, PDFFetchStreamRangeReader);\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n          this._abortController = new AbortController();\n          this._headers = createHeaders(this._stream.httpHeaders);\n          this._headers.append(\"Range\", \"bytes=\".concat(begin, \"-\").concat(end - 1));\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            _this80._readCapability.resolve();\n            _this80._reader = response.body.getReader();\n          }).catch(this._readCapability.reject);\n          this.onProgress = null;\n        }\n        _createClass(PDFFetchStreamRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n              var _yield$this$_reader$r2, value, done, buffer;\n              return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n                while (1) switch (_context20.prev = _context20.next) {\n                  case 0:\n                    _context20.next = 2;\n                    return this._readCapability.promise;\n                  case 2:\n                    _context20.next = 4;\n                    return this._reader.read();\n                  case 4:\n                    _yield$this$_reader$r2 = _context20.sent;\n                    value = _yield$this$_reader$r2.value;\n                    done = _yield$this$_reader$r2.done;\n                    if (!done) {\n                      _context20.next = 9;\n                      break;\n                    }\n                    return _context20.abrupt(\"return\", {\n                      value: value,\n                      done: done\n                    });\n                  case 9:\n                    this._loaded += value.byteLength;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded\n                      });\n                    }\n                    buffer = new Uint8Array(value).buffer;\n                    return _context20.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 13:\n                  case \"end\":\n                    return _context20.stop();\n                }\n              }, _callee20, this);\n            }));\n            function read() {\n              return _read8.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n            this._abortController.abort();\n          }\n        }]);\n        return PDFFetchStreamRangeReader;\n      }();\n      /***/\n    }\n    /******/)];\n    /************************************************************************/\n    /******/ // The module cache\n    /******/\n    var __webpack_module_cache__ = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __w_pdfjs_require__(moduleId) {\n      /******/ // Check if module is in cache\n      /******/var cachedModule = __webpack_module_cache__[moduleId];\n      /******/\n      if (cachedModule !== undefined) {\n        /******/return cachedModule.exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = __webpack_module_cache__[moduleId] = {\n        /******/ // no module.id needed\n        /******/ // no module.loaded needed\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /************************************************************************/\n    var __webpack_exports__ = {};\n    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n    (function () {\n      var exports = __webpack_exports__;\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"AnnotationEditorLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _annotation_editor_layer.AnnotationEditorLayer;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationEditorParamsType\", {\n        enumerable: true,\n        get: function get() {\n          return _util.AnnotationEditorParamsType;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationEditorType\", {\n        enumerable: true,\n        get: function get() {\n          return _util.AnnotationEditorType;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationEditorUIManager\", {\n        enumerable: true,\n        get: function get() {\n          return _tools.AnnotationEditorUIManager;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _annotation_layer.AnnotationLayer;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationMode\", {\n        enumerable: true,\n        get: function get() {\n          return _util.AnnotationMode;\n        }\n      });\n      Object.defineProperty(exports, \"CMapCompressionType\", {\n        enumerable: true,\n        get: function get() {\n          return _util.CMapCompressionType;\n        }\n      });\n      Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n        enumerable: true,\n        get: function get() {\n          return _worker_options.GlobalWorkerOptions;\n        }\n      });\n      Object.defineProperty(exports, \"InvalidPDFException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.InvalidPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"LoopbackPort\", {\n        enumerable: true,\n        get: function get() {\n          return _api.LoopbackPort;\n        }\n      });\n      Object.defineProperty(exports, \"MissingPDFException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.MissingPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"OPS\", {\n        enumerable: true,\n        get: function get() {\n          return _util.OPS;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n        enumerable: true,\n        get: function get() {\n          return _api.PDFDataRangeTransport;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDateString\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.PDFDateString;\n        }\n      });\n      Object.defineProperty(exports, \"PDFWorker\", {\n        enumerable: true,\n        get: function get() {\n          return _api.PDFWorker;\n        }\n      });\n      Object.defineProperty(exports, \"PasswordResponses\", {\n        enumerable: true,\n        get: function get() {\n          return _util.PasswordResponses;\n        }\n      });\n      Object.defineProperty(exports, \"PermissionFlag\", {\n        enumerable: true,\n        get: function get() {\n          return _util.PermissionFlag;\n        }\n      });\n      Object.defineProperty(exports, \"PixelsPerInch\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.PixelsPerInch;\n        }\n      });\n      Object.defineProperty(exports, \"RenderingCancelledException\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.RenderingCancelledException;\n        }\n      });\n      Object.defineProperty(exports, \"SVGGraphics\", {\n        enumerable: true,\n        get: function get() {\n          return _svg.SVGGraphics;\n        }\n      });\n      Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n        enumerable: true,\n        get: function get() {\n          return _util.UNSUPPORTED_FEATURES;\n        }\n      });\n      Object.defineProperty(exports, \"UnexpectedResponseException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.UnexpectedResponseException;\n        }\n      });\n      Object.defineProperty(exports, \"Util\", {\n        enumerable: true,\n        get: function get() {\n          return _util.Util;\n        }\n      });\n      Object.defineProperty(exports, \"VerbosityLevel\", {\n        enumerable: true,\n        get: function get() {\n          return _util.VerbosityLevel;\n        }\n      });\n      Object.defineProperty(exports, \"XfaLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _xfa_layer.XfaLayer;\n        }\n      });\n      Object.defineProperty(exports, \"build\", {\n        enumerable: true,\n        get: function get() {\n          return _api.build;\n        }\n      });\n      Object.defineProperty(exports, \"createPromiseCapability\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createPromiseCapability;\n        }\n      });\n      Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createValidAbsoluteUrl;\n        }\n      });\n      Object.defineProperty(exports, \"getDocument\", {\n        enumerable: true,\n        get: function get() {\n          return _api.getDocument;\n        }\n      });\n      Object.defineProperty(exports, \"getFilenameFromUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.getFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.getPdfFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"getXfaPageViewport\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.getXfaPageViewport;\n        }\n      });\n      Object.defineProperty(exports, \"isPdfFile\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.isPdfFile;\n        }\n      });\n      Object.defineProperty(exports, \"loadScript\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.loadScript;\n        }\n      });\n      Object.defineProperty(exports, \"renderTextLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _text_layer.renderTextLayer;\n        }\n      });\n      Object.defineProperty(exports, \"shadow\", {\n        enumerable: true,\n        get: function get() {\n          return _util.shadow;\n        }\n      });\n      Object.defineProperty(exports, \"version\", {\n        enumerable: true,\n        get: function get() {\n          return _api.version;\n        }\n      });\n      var _util = __w_pdfjs_require__(1);\n      var _api = __w_pdfjs_require__(4);\n      var _display_utils = __w_pdfjs_require__(8);\n      var _annotation_editor_layer = __w_pdfjs_require__(22);\n      var _tools = __w_pdfjs_require__(7);\n      var _annotation_layer = __w_pdfjs_require__(27);\n      var _worker_options = __w_pdfjs_require__(15);\n      var _is_node = __w_pdfjs_require__(3);\n      var _text_layer = __w_pdfjs_require__(30);\n      var _svg = __w_pdfjs_require__(31);\n      var _xfa_layer = __w_pdfjs_require__(29);\n      var pdfjsVersion = '2.16.105';\n      var pdfjsBuild = '172ccdbe5';\n      {\n        if (_is_node.isNodeJS) {\n          var _w_pdfjs_require__2 = __w_pdfjs_require__(32),\n            PDFNodeStream = _w_pdfjs_require__2.PDFNodeStream;\n          (0, _api.setPDFNetworkStreamFactory)(function (params) {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          var _w_pdfjs_require__3 = __w_pdfjs_require__(35),\n            PDFNetworkStream = _w_pdfjs_require__3.PDFNetworkStream;\n          var _w_pdfjs_require__4 = __w_pdfjs_require__(36),\n            PDFFetchStream = _w_pdfjs_require__4.PDFFetchStream;\n          (0, _api.setPDFNetworkStreamFactory)(function (params) {\n            if ((0, _display_utils.isValidFetchUrl)(params.url)) {\n              return new PDFFetchStream(params);\n            }\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n    })();\n\n    /******/\n    return __webpack_exports__;\n    /******/\n  }();\n});\n//# sourceMappingURL=pdf.js.map","map":null,"metadata":{},"sourceType":"script"}