{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-dropzone-wrapper\";\nexport var DropZoneComponent = /*#__PURE__*/(function () {\n  var DropZoneComponent = /*#__PURE__*/function () {\n    function DropZoneComponent() {\n      _classCallCheck(this, DropZoneComponent);\n      this.fileEvent = new EventEmitter();\n      this.removeFileEvent = new EventEmitter();\n      this.DEFAULT_DROPZONE_CONFIG = {\n        url: 'http://httpbin.org/post',\n        addRemoveLinks: true,\n        acceptedFiles: '.pdf',\n        maxFiles: 1,\n        errorReset: 1\n      };\n    }\n    _createClass(DropZoneComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.message = 'Only ONE PDF File is Allowed';\n        this.errFlag = false;\n      }\n    }, {\n      key: \"fileUploadSuccess\",\n      value: function fileUploadSuccess($e) {\n        // console.log($e);\n        this.message = 'Only ONE PDF File is Allowed';\n        if (this.errFlag) {\n          this.removeFileEvent.emit($e);\n        }\n        this.errFlag = false;\n        this.fileEvent.emit(URL.createObjectURL($e[0]));\n      }\n    }, {\n      key: \"fileUploadError\",\n      value: function fileUploadError($e) {\n        console.log($e);\n        if ('application/pdf' !== $e[0].type) {\n          alert('Error : Not a PDF');\n          this.message = 'Please upload a PDF file.';\n        } else {\n          this.message = 'Please save the current file. Next upload will replace the current file.';\n        }\n        this.errFlag = true;\n      }\n    }, {\n      key: \"removeFile\",\n      value: function removeFile($e) {\n        if (!this.errFlag) {\n          this.removeFileEvent.emit($e);\n        }\n      }\n    }]);\n    return DropZoneComponent;\n  }();\n  DropZoneComponent.ɵfac = function DropZoneComponent_Factory(t) {\n    return new (t || DropZoneComponent)();\n  };\n  DropZoneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DropZoneComponent,\n    selectors: [[\"app-drop-zone\"]],\n    outputs: {\n      fileEvent: \"fileEvent\",\n      removeFileEvent: \"removeFileEvent\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[1, \"dropzone\", 3, \"dropzone\", \"message\", \"success\", \"removedFile\", \"error\"]],\n    template: function DropZoneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"dropzone\", 0);\n        i0.ɵɵlistener(\"success\", function DropZoneComponent_Template_dropzone_success_0_listener($event) {\n          return ctx.fileUploadSuccess($event);\n        })(\"removedFile\", function DropZoneComponent_Template_dropzone_removedFile_0_listener($event) {\n          return ctx.removeFile($event);\n        })(\"error\", function DropZoneComponent_Template_dropzone_error_0_listener($event) {\n          return ctx.fileUploadError($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"dropzone\", ctx.DEFAULT_DROPZONE_CONFIG)(\"message\", ctx.message);\n      }\n    },\n    directives: [i1.DropzoneComponent, i1.DropzoneDirective],\n    styles: [\".dropzone[_ngcontent-%COMP%]{min-height:150px;box-sizing:border-box;border:2px solid rgba(0,0,0,.3)}\"]\n  });\n  return DropZoneComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}