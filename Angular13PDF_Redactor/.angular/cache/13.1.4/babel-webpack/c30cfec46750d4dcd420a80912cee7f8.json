{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\toConsumableArray.js\").default;\nvar _slicedToArray = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\slicedToArray.js\").default;\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classCallCheck.js\").default;\nvar _createClass = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createClass.js\").default;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar PDF = require(\"./object\");\nvar Parser = require(\"./parser/parser\");\nvar ops = require(\"./ops\");\nvar PROPERTIES_TO_COPY = {\n  colorSpaces: \"ColorSpace\",\n  fonts: \"Font\",\n  xobjects: \"XObject\",\n  extGStates: \"ExtGState\",\n  shadings: \"Shading\"\n};\nmodule.exports = /*#__PURE__*/function () {\n  function ExternalDocument(src) {\n    _classCallCheck(this, ExternalDocument);\n    var parser = new Parser(src);\n    parser.parse();\n    var catalog = parser.trailer.get(\"Root\").object.properties;\n    var pages = catalog.get(\"Pages\").object.properties;\n    this.pages = pages;\n    this.mediaBox = pages.get(\"MediaBox\");\n    var kids = pages.get(\"Kids\");\n    this.pageCount = this._countPagesRecursively(kids, 0);\n  }\n  _createClass(ExternalDocument, [{\n    key: \"_countPagesRecursively\",\n    value: function _countPagesRecursively(kids, i) {\n      var _iterator = _createForOfIteratorHelper(kids),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var kid = _step.value;\n          var page = kid.object;\n          if (page.properties.get(\"Type\").toString() === \"/Pages\") {\n            // encountered nested pages\n            i = this._countPagesRecursively(page.properties.get(\"Kids\"), i);\n          } else {\n            i++;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return i;\n    }\n\n    // TODO: add mutex to not write concurrently (because of document specific _registerObject)\n  }, {\n    key: \"write\",\n    value: function () {\n      var _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(doc, page) {\n        var kids, filter, _iterator2, _step2, _page, _iterator3, _step3, _page2, objects, _i, _objects, obj, _i2, _objects2, _obj;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return doc._endPage();\n            case 2:\n              kids = this.pages.get(\"Kids\");\n              filter = page ? function (i) {\n                return i === page - 1;\n              } : undefined; // As a first iteration, simply register all page objects to ensure they exist for inter-page\n              // references (as they are not part of the `addObjectsRecursive` in the second iteration)\n              _iterator2 = _createForOfIteratorHelper(this._iterPagesRecursively(doc, kids, filter));\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  _page = _step2.value;\n                  doc._registerObject(_page, true);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              _iterator3 = _createForOfIteratorHelper(this._iterPagesRecursively(doc, kids, filter));\n              _context.prev = 7;\n              _iterator3.s();\n            case 9:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 29;\n                break;\n              }\n              _page2 = _step3.value;\n              // if the page object does not define its MediaBox, explicitly set its MediaBox to the\n              // value defined by its parent Pages object\n              if (!_page2.properties.has(\"MediaBox\") && this.mediaBox) {\n                _page2.properties.set(\"MediaBox\", this.mediaBox);\n              }\n\n              // first, register objects to assign IDs (for references)\n              objects = [];\n              Parser.addObjectsRecursive(objects, _page2, 0);\n              for (_i = 0, _objects = objects; _i < _objects.length; _i++) {\n                obj = _objects[_i];\n                doc._registerObject(obj, true);\n              }\n\n              // write objects\n              _i2 = 0, _objects2 = objects;\n            case 16:\n              if (!(_i2 < _objects2.length)) {\n                _context.next = 23;\n                break;\n              }\n              _obj = _objects2[_i2];\n              _context.next = 20;\n              return doc._writeObject(_obj);\n            case 20:\n              _i2++;\n              _context.next = 16;\n              break;\n            case 23:\n              _page2.prop(\"Parent\", doc._pagesObj.toReference());\n              _context.next = 26;\n              return doc._writeObject(_page2);\n            case 26:\n              doc._pages.push(_page2.toReference());\n            case 27:\n              _context.next = 9;\n              break;\n            case 29:\n              _context.next = 34;\n              break;\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](7);\n              _iterator3.e(_context.t0);\n            case 34:\n              _context.prev = 34;\n              _iterator3.f();\n              return _context.finish(34);\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[7, 31, 34, 37]]);\n      }));\n      function write(_x, _x2) {\n        return _write.apply(this, arguments);\n      }\n      return write;\n    }()\n  }, {\n    key: \"_iterPagesRecursively\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function _iterPagesRecursively(doc, kids, filter, cursor) {\n      var _iterator4, _step4, kid, page;\n      return _regeneratorRuntime().wrap(function _iterPagesRecursively$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!cursor) {\n              cursor = {\n                i: 0\n              };\n            }\n            _iterator4 = _createForOfIteratorHelper(kids);\n            _context2.prev = 2;\n            _iterator4.s();\n          case 4:\n            if ((_step4 = _iterator4.n()).done) {\n              _context2.next = 18;\n              break;\n            }\n            kid = _step4.value;\n            page = kid.object;\n            if (!(page.properties.get(\"Type\").toString() === \"/Pages\")) {\n              _context2.next = 12;\n              break;\n            }\n            return _context2.delegateYield(this._iterPagesRecursively(doc, page.properties.get(\"Kids\"), filter, cursor), \"t0\", 9);\n          case 9:\n            return _context2.abrupt(\"continue\", 16);\n          case 12:\n            if (!(!filter || filter(cursor.i))) {\n              _context2.next = 15;\n              break;\n            }\n            _context2.next = 15;\n            return page;\n          case 15:\n            cursor.i++;\n          case 16:\n            _context2.next = 4;\n            break;\n          case 18:\n            _context2.next = 23;\n            break;\n          case 20:\n            _context2.prev = 20;\n            _context2.t1 = _context2[\"catch\"](2);\n            _iterator4.e(_context2.t1);\n          case 23:\n            _context2.prev = 23;\n            _iterator4.f();\n            return _context2.finish(23);\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _iterPagesRecursively, this, [[2, 20, 23, 26]]);\n    })\n  }, {\n    key: \"setAsTemplate\",\n    value: function () {\n      var _setAsTemplate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(doc, firstPageOnly) {\n        var filter, kids, _doc$_contents$splice, _doc$_contents$splice2, storeGraphicalState, restoreGraphicalState, _iterator5, _step5, page, first, objects, _i3, _objects3, obj, _i4, _objects4, _obj2, contents, resources, prop, dict, alias;\n        return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return doc._endPage();\n            case 2:\n              // take the first page only\n              filter = function filter(i) {\n                return i === 0;\n              };\n              kids = this.pages.get(\"Kids\");\n              if (kids[0]) {\n                _context3.next = 6;\n                break;\n              }\n              throw new TypeError(\"External document is invalid\");\n            case 6:\n              _context3.next = 8;\n              return doc._startContentObject();\n            case 8:\n              _context3.next = 10;\n              return doc._write(ops.q());\n            case 10:\n              _context3.next = 12;\n              return doc._endContentObject();\n            case 12:\n              _context3.next = 14;\n              return doc._startContentObject();\n            case 14:\n              _context3.next = 16;\n              return doc._write(ops.Q());\n            case 16:\n              _context3.next = 18;\n              return doc._endContentObject();\n            case 18:\n              _doc$_contents$splice = doc._contents.splice(doc._contents - 3, 2), _doc$_contents$splice2 = _slicedToArray(_doc$_contents$splice, 2), storeGraphicalState = _doc$_contents$splice2[0], restoreGraphicalState = _doc$_contents$splice2[1];\n              _iterator5 = _createForOfIteratorHelper(this._iterPagesRecursively(doc, kids, filter));\n              _context3.prev = 20;\n              _iterator5.s();\n            case 22:\n              if ((_step5 = _iterator5.n()).done) {\n                _context3.next = 47;\n                break;\n              }\n              page = _step5.value;\n              // if the page object does not define its MediaBox, explicitly set its MediaBox to the\n              // value defined by its parent Pages object\n              if (!page.properties.has(\"MediaBox\") && this.mediaBox) {\n                page.properties.set(\"MediaBox\", this.mediaBox);\n              }\n              first = page.properties;\n              objects = [];\n              Parser.addObjectsRecursive(objects, page, 0);\n\n              // first, register objects to assign IDs (for references)\n              for (_i3 = 0, _objects3 = objects; _i3 < _objects3.length; _i3++) {\n                obj = _objects3[_i3];\n                doc._registerObject(obj, true);\n              }\n\n              // write objects\n              _i4 = 0, _objects4 = objects;\n            case 30:\n              if (!(_i4 < _objects4.length)) {\n                _context3.next = 37;\n                break;\n              }\n              _obj2 = _objects4[_i4];\n              _context3.next = 34;\n              return doc._writeObject(_obj2);\n            case 34:\n              _i4++;\n              _context3.next = 30;\n              break;\n            case 37:\n              contents = first.get(\"Contents\");\n              if (!Array.isArray(contents)) {\n                contents = [contents];\n              }\n              contents = [storeGraphicalState._object.toReference()].concat(_toConsumableArray(contents), [restoreGraphicalState._object.toReference()]);\n              resources = first.get(\"Resources\");\n              if (resources instanceof PDF.Reference) {\n                resources = resources.object.properties;\n              }\n              doc._template = {\n                contents: contents.map(function (c) {\n                  return c && c.toString() || \"\";\n                }),\n                colorSpaces: {},\n                fonts: {},\n                xobjects: {},\n                extGStates: {},\n                shadings: {}\n              };\n              for (prop in PROPERTIES_TO_COPY) {\n                dict = resources && resources.get(PROPERTIES_TO_COPY[prop]);\n                if (dict) {\n                  for (alias in dict.dictionary) {\n                    doc._template[prop][alias] = dict.dictionary[alias].toString();\n                    doc._aliases.block(alias);\n                  }\n                }\n              }\n              doc._template.firstPageOnly = firstPageOnly;\n            case 45:\n              _context3.next = 22;\n              break;\n            case 47:\n              _context3.next = 52;\n              break;\n            case 49:\n              _context3.prev = 49;\n              _context3.t0 = _context3[\"catch\"](20);\n              _iterator5.e(_context3.t0);\n            case 52:\n              _context3.prev = 52;\n              _iterator5.f();\n              return _context3.finish(52);\n            case 55:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee2, this, [[20, 49, 52, 55]]);\n      }));\n      function setAsTemplate(_x3, _x4) {\n        return _setAsTemplate.apply(this, arguments);\n      }\n      return setAsTemplate;\n    }()\n  }, {\n    key: \"_getPagesRecursively\",\n    value: function () {\n      var _getPagesRecursively2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(doc, kids, i, filter) {\n        var _iterator6, _step6, kid, page, objects, _i5, _objects5, obj, _i6, _objects6, _obj3;\n        return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _iterator6 = _createForOfIteratorHelper(kids);\n              _context4.prev = 1;\n              _iterator6.s();\n            case 3:\n              if ((_step6 = _iterator6.n()).done) {\n                _context4.next = 34;\n                break;\n              }\n              kid = _step6.value;\n              page = kid.object;\n              if (!(page.properties.get(\"Type\").toString() === \"/Pages\")) {\n                _context4.next = 13;\n                break;\n              }\n              _context4.next = 9;\n              return this._addPagesRecursively(doc, page.properties.get(\"Kids\"), i, filter);\n            case 9:\n              i = _context4.sent;\n              return _context4.abrupt(\"continue\", 32);\n            case 13:\n              if (!(!filter || filter(i))) {\n                _context4.next = 31;\n                break;\n              }\n              // if the page object does not define its MediaBox, explicitly set its MediaBox to the\n              // value defined by its parent Pages object\n              if (!page.properties.has(\"MediaBox\") && this.mediaBox) {\n                page.properties.set(\"MediaBox\", this.mediaBox);\n              }\n\n              // add single page\n              doc._registerObject(page, true);\n\n              // first, register objects to assign IDs (for references)\n              objects = [];\n              Parser.addObjectsRecursive(objects, page, 0);\n              for (_i5 = 0, _objects5 = objects; _i5 < _objects5.length; _i5++) {\n                obj = _objects5[_i5];\n                doc._registerObject(obj, true);\n              }\n\n              // write objects\n              _i6 = 0, _objects6 = objects;\n            case 20:\n              if (!(_i6 < _objects6.length)) {\n                _context4.next = 27;\n                break;\n              }\n              _obj3 = _objects6[_i6];\n              _context4.next = 24;\n              return doc._writeObject(_obj3);\n            case 24:\n              _i6++;\n              _context4.next = 20;\n              break;\n            case 27:\n              page.prop(\"Parent\", doc._pagesObj.toReference());\n              _context4.next = 30;\n              return doc._writeObject(page);\n            case 30:\n              doc._pages.push(page.toReference());\n            case 31:\n              i++;\n            case 32:\n              _context4.next = 3;\n              break;\n            case 34:\n              _context4.next = 39;\n              break;\n            case 36:\n              _context4.prev = 36;\n              _context4.t0 = _context4[\"catch\"](1);\n              _iterator6.e(_context4.t0);\n            case 39:\n              _context4.prev = 39;\n              _iterator6.f();\n              return _context4.finish(39);\n            case 42:\n              return _context4.abrupt(\"return\", i);\n            case 43:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee3, this, [[1, 36, 39, 42]]);\n      }));\n      function _getPagesRecursively(_x5, _x6, _x7, _x8) {\n        return _getPagesRecursively2.apply(this, arguments);\n      }\n      return _getPagesRecursively;\n    }()\n  }]);\n  return ExternalDocument;\n}();","map":null,"metadata":{},"sourceType":"script"}