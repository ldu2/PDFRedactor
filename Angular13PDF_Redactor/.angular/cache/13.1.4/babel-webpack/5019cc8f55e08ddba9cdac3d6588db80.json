{"ast":null,"code":"import _possibleConstructorReturn from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0];\n    } else {\n      return observables[0];\n    }\n  }\n  return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport var RaceOperator = /*#__PURE__*/function () {\n  function RaceOperator() {\n    _classCallCheck(this, RaceOperator);\n  }\n  _createClass(RaceOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RaceSubscriber(subscriber));\n    }\n  }]);\n  return RaceOperator;\n}();\nexport var RaceSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(RaceSubscriber, _OuterSubscriber);\n  function RaceSubscriber(destination) {\n    var _this;\n    _classCallCheck(this, RaceSubscriber);\n    _this = _callSuper(this, RaceSubscriber, [destination]);\n    _this.hasFirst = false;\n    _this.observables = [];\n    _this.subscriptions = [];\n    return _this;\n  }\n  _createClass(RaceSubscriber, [{\n    key: \"_next\",\n    value: function _next(observable) {\n      this.observables.push(observable);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var observables = this.observables;\n      var len = observables.length;\n      if (len === 0) {\n        this.destination.complete();\n      } else {\n        for (var i = 0; i < len && !this.hasFirst; i++) {\n          var observable = observables[i];\n          var subscription = subscribeToResult(this, observable, observable, i);\n          if (this.subscriptions) {\n            this.subscriptions.push(subscription);\n          }\n          this.add(subscription);\n        }\n        this.observables = null;\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      if (!this.hasFirst) {\n        this.hasFirst = true;\n        for (var i = 0; i < this.subscriptions.length; i++) {\n          if (i !== outerIndex) {\n            var subscription = this.subscriptions[i];\n            subscription.unsubscribe();\n            this.remove(subscription);\n          }\n        }\n        this.subscriptions = null;\n      }\n      this.destination.next(innerValue);\n    }\n  }]);\n  return RaceSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=race.js.map","map":null,"metadata":{},"sourceType":"module"}