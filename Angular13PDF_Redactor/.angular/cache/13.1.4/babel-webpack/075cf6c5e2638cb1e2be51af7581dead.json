{"ast":null,"code":"import _possibleConstructorReturn from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n  var inclusive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate, inclusive));\n  };\n}\nvar TakeWhileOperator = /*#__PURE__*/function () {\n  function TakeWhileOperator(predicate, inclusive) {\n    _classCallCheck(this, TakeWhileOperator);\n    this.predicate = predicate;\n    this.inclusive = inclusive;\n  }\n  _createClass(TakeWhileOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n  }]);\n  return TakeWhileOperator;\n}();\nvar TakeWhileSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(TakeWhileSubscriber, _Subscriber);\n  function TakeWhileSubscriber(destination, predicate, inclusive) {\n    var _this;\n    _classCallCheck(this, TakeWhileSubscriber);\n    _this = _callSuper(this, TakeWhileSubscriber, [destination]);\n    _this.predicate = predicate;\n    _this.inclusive = inclusive;\n    _this.index = 0;\n    return _this;\n  }\n  _createClass(TakeWhileSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n      var result;\n      try {\n        result = this.predicate(value, this.index++);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n      this.nextOrComplete(value, result);\n    }\n  }, {\n    key: \"nextOrComplete\",\n    value: function nextOrComplete(value, predicateResult) {\n      var destination = this.destination;\n      if (Boolean(predicateResult)) {\n        destination.next(value);\n      } else {\n        if (this.inclusive) {\n          destination.next(value);\n        }\n        destination.complete();\n      }\n    }\n  }]);\n  return TakeWhileSubscriber;\n}(Subscriber); //# sourceMappingURL=takeWhile.js.map","map":null,"metadata":{},"sourceType":"module"}