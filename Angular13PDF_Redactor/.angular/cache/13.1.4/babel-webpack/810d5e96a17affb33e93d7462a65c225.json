{"ast":null,"code":"\"use strict\";\n\n// page 60\n// Filters: page 65\nvar _classCallCheck = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classCallCheck.js\").default;\nvar _createClass = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createClass.js\").default;\nvar PDFObject = require(\"./object\");\nmodule.exports = /*#__PURE__*/function () {\n  function PDFStream(object) {\n    _classCallCheck(this, PDFStream);\n    if (!object) {\n      object = new PDFObject();\n    }\n    object.content = this;\n    this.object = object;\n    this.content = \"\";\n  }\n\n  // slice(begin, end) {\n  //   this.content = this.content.slice(begin, end)\n  //   this.object.prop('Length', this.content.length - 1)\n  // }\n  _createClass(PDFStream, [{\n    key: \"writeLine\",\n    value: function writeLine(str) {\n      this.content += str + \"\\n\";\n      this.object.prop(\"Length\", this.content.length - 1);\n    }\n  }, {\n    key: \"toReference\",\n    value: function toReference() {\n      return this.object.toReference();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var content = this.content;\n      if (content instanceof Uint8Array) {\n        content = uint8ToString(content) + \"\\n\";\n      }\n      return \"stream\\n\" + content + \"endstream\";\n    }\n  }]);\n  return PDFStream;\n}();\n\n// source: http://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\nfunction uint8ToString(u8a) {\n  var CHUNK_SZ = 0x8000;\n  var c = [];\n  for (var i = 0; i < u8a.length; i += CHUNK_SZ) {\n    c.push(String.fromCharCode.apply(null, u8a.subarray(i, i + CHUNK_SZ)));\n  }\n  return c.join(\"\");\n}","map":null,"metadata":{},"sourceType":"script"}