{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classCallCheck.js\").default;\nvar _createClass = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createClass.js\").default;\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\possibleConstructorReturn.js\").default;\nvar _isNativeReflectConstruct = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\isNativeReflectConstruct.js\").default;\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\getPrototypeOf.js\").default;\nvar _inherits = require(\"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\inherits.js\").default;\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nvar PDFName = require(\"./name\");\nvar PDFString = require(\"./string\");\nvar PDFDictionary = require(\"./dictionary\");\nvar PDFArray = require(\"./array\");\nvar PDFNameTree = /*#__PURE__*/function (_PDFDictionary) {\n  _inherits(PDFNameTree, _PDFDictionary);\n  function PDFNameTree(dictionary) {\n    _classCallCheck(this, PDFNameTree);\n    return _callSuper(this, PDFNameTree, [dictionary]);\n  }\n  _createClass(PDFNameTree, [{\n    key: \"add\",\n    value: function add(key, val) {\n      if (typeof val === \"string\") {\n        val = new PDFName(val);\n      }\n      this.dictionary[key] = val;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return String(key) in this.dictionary;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.dictionary[key];\n    }\n  }, {\n    key: \"del\",\n    value: function del(key) {\n      delete this.dictionary[key];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var sortedKeys = Object.keys(this.dictionary);\n      sortedKeys.sort(function (lhs, rhs) {\n        return lhs.localeCompare(rhs);\n      });\n      var names = [];\n      for (var _i = 0, _sortedKeys = sortedKeys; _i < _sortedKeys.length; _i++) {\n        var key = _sortedKeys[_i];\n        names.push(new PDFString(key), this.dictionary[key]);\n      }\n      var dict = new PDFDictionary();\n      dict.set(\"Names\", new PDFArray(names));\n      dict.set(\"Limits\", new PDFArray([new PDFString(sortedKeys[0]), new PDFString(sortedKeys[sortedKeys.length - 1])]));\n      return dict.toString();\n    }\n  }]);\n  return PDFNameTree;\n}(PDFDictionary);\nmodule.exports = PDFNameTree;","map":null,"metadata":{},"sourceType":"script"}