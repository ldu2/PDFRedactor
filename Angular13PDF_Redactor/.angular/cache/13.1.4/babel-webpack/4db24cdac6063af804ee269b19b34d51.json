{"ast":null,"code":"'use strict';\n\nvar _has = function _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) {\n      continue;\n    }\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n  return obj;\n};\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = function (chunks) {\n  // calculate data length\n  var len = 0;\n  for (var i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  var result = new Uint8Array(len);\n  for (var _i = 0, pos = 0, _l = chunks.length; _i < _l; _i++) {\n    var chunk = chunks[_i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n  return result;\n};","map":null,"metadata":{},"sourceType":"script"}