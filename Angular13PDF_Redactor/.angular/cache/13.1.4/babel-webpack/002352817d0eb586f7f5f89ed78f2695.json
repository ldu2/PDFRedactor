{"ast":null,"code":"import _possibleConstructorReturn from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Lubuntu\\\\Desktop\\\\mGit\\\\PDFRedactor\\\\Angular7PDF_Redactor\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n  return function windowWhenOperatorFunction(source) {\n    return source.lift(new WindowOperator(closingSelector));\n  };\n}\nvar WindowOperator = /*#__PURE__*/function () {\n  function WindowOperator(closingSelector) {\n    _classCallCheck(this, WindowOperator);\n    this.closingSelector = closingSelector;\n  }\n  _createClass(WindowOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n  }]);\n  return WindowOperator;\n}();\nvar WindowSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(WindowSubscriber, _OuterSubscriber);\n  function WindowSubscriber(destination, closingSelector) {\n    var _this;\n    _classCallCheck(this, WindowSubscriber);\n    _this = _callSuper(this, WindowSubscriber, [destination]);\n    _this.destination = destination;\n    _this.closingSelector = closingSelector;\n    _this.openWindow();\n    return _this;\n  }\n  _createClass(WindowSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this.openWindow(innerSub);\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error, innerSub) {\n      this._error(error);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      this.openWindow(innerSub);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.window.next(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.window.error(err);\n      this.destination.error(err);\n      this.unsubscribeClosingNotification();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.window.complete();\n      this.destination.complete();\n      this.unsubscribeClosingNotification();\n    }\n  }, {\n    key: \"unsubscribeClosingNotification\",\n    value: function unsubscribeClosingNotification() {\n      if (this.closingNotification) {\n        this.closingNotification.unsubscribe();\n      }\n    }\n  }, {\n    key: \"openWindow\",\n    value: function openWindow() {\n      var innerSub = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (innerSub) {\n        this.remove(innerSub);\n        innerSub.unsubscribe();\n      }\n      var prevWindow = this.window;\n      if (prevWindow) {\n        prevWindow.complete();\n      }\n      var window = this.window = new Subject();\n      this.destination.next(window);\n      var closingNotifier;\n      try {\n        var closingSelector = this.closingSelector;\n        closingNotifier = closingSelector();\n      } catch (e) {\n        this.destination.error(e);\n        this.window.error(e);\n        return;\n      }\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }]);\n  return WindowSubscriber;\n}(OuterSubscriber); //# sourceMappingURL=windowWhen.js.map","map":null,"metadata":{},"sourceType":"module"}